

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 00:08:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F4550 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataCOMRAM
   124  004BE2                     __pidataCOMRAM:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for _power
   128  004BE2  0001               	dw	1
   129                           
   130                           	psect	idataBANK1
   131  004BDE                     __pidataBANK1:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _TempExtAtiv
   135  004BDE  0019               	dw	25
   136                           
   137                           ;initializer for _TempIdealInt
   138  004BE0  0018               	dw	24
   139  0000                     _PIR2bits	set	4001
   140  0000                     _EECON2	set	4007
   141  0000                     _EECON1bits	set	4006
   142  0000                     _EEDATA	set	4008
   143  0000                     _EEADR	set	4009
   144  0000                     _ADCON0bits	set	4034
   145  0000                     _ADCON0	set	4034
   146  0000                     _ADRESL	set	4035
   147  0000                     _ADRESH	set	4036
   148  0000                     _ADCON2	set	4032
   149  0000                     _ADCON1	set	4033
   150  0000                     _TRISA	set	3986
   151  0000                     _TXREG	set	4013
   152  0000                     _INTCONbits	set	4082
   153  0000                     _RCSTA	set	4011
   154  0000                     _TXSTA	set	4012
   155  0000                     _SPBRG	set	4015
   156  0000                     _PORTAbits	set	3968
   157  0000                     _PIE1bits	set	3997
   158  0000                     _RCREG	set	4014
   159  0000                     _TRISAbits	set	3986
   160  0000                     _OSCCON	set	4051
   161  0000                     _LATB	set	3978
   162  0000                     _TRISD	set	3989
   163  0000                     _TRISB	set	3987
   164  0000                     _GO	set	32273
   165  0000                     _ADON	set	32272
   166  0000                     _TRISC7	set	31911
   167  0000                     _TRISC6	set	31910
   168  0000                     _TXIF	set	31988
   169  0000                     _RCIF	set	31989
   170  0000                     _LATD1	set	31841
   171  0000                     _LATD0	set	31840
   172                           
   173                           	psect	smallconst
   174  000800                     __psmallconst:
   175                           	opt callstack 0
   176  000800  00                 	db	0
   177  000801                     STR_5:
   178  000801  54                 	db	84	;'T'
   179  000802  65                 	db	101	;'e'
   180  000803  6D                 	db	109	;'m'
   181  000804  70                 	db	112	;'p'
   182  000805  2E                 	db	46
   183  000806  49                 	db	73	;'I'
   184  000807  6E                 	db	110	;'n'
   185  000808  74                 	db	116	;'t'
   186  000809  65                 	db	101	;'e'
   187  00080A  2E                 	db	46
   188  00080B  3A                 	db	58	;':'
   189  00080C  00                 	db	0
   190  00080D                     STR_3:
   191  00080D  54                 	db	84	;'T'
   192  00080E  65                 	db	101	;'e'
   193  00080F  6D                 	db	109	;'m'
   194  000810  70                 	db	112	;'p'
   195  000811  2E                 	db	46
   196  000812  45                 	db	69	;'E'
   197  000813  78                 	db	120	;'x'
   198  000814  74                 	db	116	;'t'
   199  000815  65                 	db	101	;'e'
   200  000816  2E                 	db	46
   201  000817  3A                 	db	58	;':'
   202  000818  00                 	db	0
   203  000819                     STR_9:
   204  000819  54                 	db	84	;'T'
   205  00081A  65                 	db	101	;'e'
   206  00081B  6D                 	db	109	;'m'
   207  00081C  70                 	db	112	;'p'
   208  00081D  2E                 	db	46
   209  00081E  41                 	db	65	;'A'
   210  00081F  74                 	db	116	;'t'
   211  000820  69                 	db	105	;'i'
   212  000821  76                 	db	118	;'v'
   213  000822  2E                 	db	46
   214  000823  3A                 	db	58	;':'
   215  000824  00                 	db	0
   216  000825                     STR_11:
   217  000825  54                 	db	84	;'T'
   218  000826  65                 	db	101	;'e'
   219  000827  6D                 	db	109	;'m'
   220  000828  70                 	db	112	;'p'
   221  000829  2E                 	db	46
   222  00082A  49                 	db	73	;'I'
   223  00082B  64                 	db	100	;'d'
   224  00082C  65                 	db	101	;'e'
   225  00082D  61                 	db	97	;'a'
   226  00082E  6C                 	db	108	;'l'
   227  00082F  3A                 	db	58	;':'
   228  000830  00                 	db	0
   229  000831                     STR_1:
   230  000831  25                 	db	37
   231  000832  2E                 	db	46
   232  000833  32                 	db	50	;'2'
   233  000834  66                 	db	102	;'f'
   234  000835  20                 	db	32
   235  000836  00                 	db	0
   236  000837                     STR_2:
   237  000837  25                 	db	37
   238  000838  2E                 	db	46
   239  000839  32                 	db	50	;'2'
   240  00083A  66                 	db	102	;'f'
   241  00083B  00                 	db	0
   242  00083C                     STR_13:
   243  00083C  49                 	db	73	;'I'
   244  00083D  4E                 	db	78	;'N'
   245  00083E  46                 	db	70	;'F'
   246  00083F  00                 	db	0
   247  000840                     STR_17:
   248  000840  4E                 	db	78	;'N'
   249  000841  41                 	db	65	;'A'
   250  000842  4E                 	db	78	;'N'
   251  000843  00                 	db	0
   252  000844                     STR_14:
   253  000844  69                 	db	105	;'i'
   254  000845  6E                 	db	110	;'n'
   255  000846  66                 	db	102	;'f'
   256  000847  00                 	db	0
   257  000848                     STR_18:
   258  000848  6E                 	db	110	;'n'
   259  000849  61                 	db	97	;'a'
   260  00084A  6E                 	db	110	;'n'
   261  00084B  00                 	db	0
   262  00084C                     STR_21:
   263  00084C  6C                 	db	108	;'l'
   264  00084D  66                 	db	102	;'f'
   265  00084E  00                 	db	0
   266  00084F                     STR_7:
   267  00084F  25                 	db	37
   268  000850  64                 	db	100	;'d'
   269  000851  00                 	db	0
   270  000852                     STR_4:
   271  000852  43                 	db	67	;'C'
   272  000853  00                 	db	0
   273  0000                     
   274                           ; #config settings
   275  000854  00                 	db	0	; dummy byte at the end
   276  0000                     
   277                           	psect	cinit
   278  004560                     __pcinit:
   279                           	opt callstack 0
   280  004560                     start_initialization:
   281                           	opt callstack 0
   282  004560                     __initialization:
   283                           	opt callstack 0
   284                           
   285                           ; Initialize objects allocated to BANK1 (4 bytes)
   286                           ; load TBLPTR registers with __pidataBANK1
   287  004560  0EDE               	movlw	low __pidataBANK1
   288  004562  6EF6               	movwf	tblptrl,c
   289  004564  0E4B               	movlw	high __pidataBANK1
   290  004566  6EF7               	movwf	tblptrh,c
   291  004568  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   292  00456A  6EF8               	movwf	tblptru,c
   293  00456C  EE01  F0A4         	lfsr	0,__pdataBANK1
   294  004570  EE10 F004          	lfsr	1,4
   295  004574                     copy_data0:
   296  004574  0009               	tblrd		*+
   297  004576  CFF5 FFEE          	movff	tablat,postinc0
   298  00457A  50E5               	movf	postdec1,w,c
   299  00457C  50E1               	movf	fsr1l,w,c
   300  00457E  E1FA               	bnz	copy_data0
   301                           
   302                           ; Initialize objects allocated to COMRAM (2 bytes)
   303                           ; load TBLPTR registers with __pidataCOMRAM
   304  004580  0EE2               	movlw	low __pidataCOMRAM
   305  004582  6EF6               	movwf	tblptrl,c
   306  004584  0E4B               	movlw	high __pidataCOMRAM
   307  004586  6EF7               	movwf	tblptrh,c
   308  004588  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   309  00458A  6EF8               	movwf	tblptru,c
   310  00458C  0009               	tblrd		*+	;fetch initializer
   311  00458E  CFF5 F043          	movff	tablat,__pdataCOMRAM
   312  004592  0009               	tblrd		*+	;fetch initializer
   313  004594  CFF5 F044          	movff	tablat,__pdataCOMRAM+1
   314                           
   315                           ; Clear objects allocated to BANK1 (118 bytes)
   316  004598  EE01  F000         	lfsr	0,__pbssBANK1
   317  00459C  0E76               	movlw	118
   318  00459E                     clear_0:
   319  00459E  6AEE               	clrf	postinc0,c
   320  0045A0  06E8               	decf	wreg,f,c
   321  0045A2  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to COMRAM (30 bytes)
   324  0045A4  EE00  F025         	lfsr	0,__pbssCOMRAM
   325  0045A8  0E1E               	movlw	30
   326  0045AA                     clear_1:
   327  0045AA  6AEE               	clrf	postinc0,c
   328  0045AC  06E8               	decf	wreg,f,c
   329  0045AE  E1FD               	bnz	clear_1
   330  0045B0                     end_of_initialization:
   331                           	opt callstack 0
   332  0045B0                     __end_of__initialization:
   333                           	opt callstack 0
   334  0045B0  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0045B2  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0045B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0045B6  6EF8               	movwf	tblptru,c
   338  0045B8  0100               	movlb	0
   339  0045BA  EF0E  F023         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  000025                     __pbssCOMRAM:
   343                           	opt callstack 0
   344  000025                     floorf@F524:
   345                           	opt callstack 0
   346  000025                     	ds	4
   347  000029                     ___fpclassifyf@F463:
   348                           	opt callstack 0
   349  000029                     	ds	4
   350  00002D                     _nout:
   351                           	opt callstack 0
   352  00002D                     	ds	2
   353  00002F                     _width:
   354                           	opt callstack 0
   355  00002F                     	ds	2
   356  000031                     _prec:
   357                           	opt callstack 0
   358  000031                     	ds	2
   359  000033                     _flags:
   360                           	opt callstack 0
   361  000033                     	ds	2
   362  000035                     _liberado:
   363                           	opt callstack 0
   364  000035                     	ds	2
   365  000037                     _ligado:
   366                           	opt callstack 0
   367  000037                     	ds	2
   368  000039                     _TempInterna:
   369                           	opt callstack 0
   370  000039                     	ds	10
   371                           
   372                           	psect	dataCOMRAM
   373  000043                     __pdataCOMRAM:
   374                           	opt callstack 0
   375  000043                     _power:
   376                           	opt callstack 0
   377  000043                     	ds	2
   378                           
   379                           	psect	bssBANK1
   380  000100                     __pbssBANK1:
   381                           	opt callstack 0
   382  000100                     _TempExternaAtual:
   383                           	opt callstack 0
   384  000100                     	ds	4
   385  000104                     _TempInternaAtual:
   386                           	opt callstack 0
   387  000104                     	ds	4
   388  000108                     _dbuf:
   389                           	opt callstack 0
   390  000108                     	ds	80
   391  000158                     _TempInternaIdeal:
   392                           	opt callstack 0
   393  000158                     	ds	10
   394  000162                     _TempExteAtivacao:
   395                           	opt callstack 0
   396  000162                     	ds	10
   397  00016C                     _TempExterna:
   398                           	opt callstack 0
   399  00016C                     	ds	10
   400                           
   401                           	psect	dataBANK1
   402  0001A4                     __pdataBANK1:
   403                           	opt callstack 0
   404  0001A4                     _TempExtAtiv:
   405                           	opt callstack 0
   406  0001A4                     	ds	2
   407  0001A6                     _TempIdealInt:
   408                           	opt callstack 0
   409  0001A6                     	ds	2
   410                           
   411                           	psect	cstackBANK1
   412  000176                     __pcstackBANK1:
   413                           	opt callstack 0
   414  000176                     vfpfcnvrt@ll:
   415                           	opt callstack 0
   416                           
   417                           ; 8 bytes @ 0x0
   418  000176                     	ds	8
   419  00017E                     _vfpfcnvrt$786:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x8
   423  00017E                     	ds	2
   424  000180                     _vfpfcnvrt$791:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  000180                     	ds	2
   429  000182                     vfpfcnvrt@f:
   430                           	opt callstack 0
   431                           
   432                           ; 4 bytes @ 0xC
   433  000182                     	ds	4
   434  000186                     vfpfcnvrt@ct:
   435                           	opt callstack 0
   436                           
   437                           ; 3 bytes @ 0x10
   438  000186                     	ds	3
   439  000189                     vfpfcnvrt@c:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x13
   443  000189                     	ds	1
   444  00018A                     vfprintf@cfmt:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0x14
   448  00018A                     	ds	2
   449  00018C                     ?_sprintf:
   450                           	opt callstack 0
   451  00018C                     sprintf@s:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x16
   455  00018C                     	ds	2
   456  00018E                     sprintf@fmt:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x18
   460  00018E                     	ds	10
   461  000198                     sprintf@ap:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x22
   465  000198                     	ds	2
   466  00019A                     sprintf@f:
   467                           	opt callstack 0
   468                           
   469                           ; 6 bytes @ 0x24
   470  00019A                     	ds	6
   471  0001A0                     escreveLCD@i:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x2A
   475  0001A0                     	ds	2
   476  0001A2                     escreveLCD@i_348:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x2C
   480  0001A2                     	ds	2
   481                           
   482                           	psect	cstackBANK0
   483  000060                     __pcstackBANK0:
   484                           	opt callstack 0
   485  000060                     ?_ADC_Read:
   486                           	opt callstack 0
   487  000060                     ?_strlen:
   488                           	opt callstack 0
   489  000060                     ?___fpclassifyf:
   490                           	opt callstack 0
   491  000060                     ?_isupper:
   492                           	opt callstack 0
   493  000060                     ?_isdigit:
   494                           	opt callstack 0
   495  000060                     ?_strncmp:
   496                           	opt callstack 0
   497  000060                     ?_isspace:
   498                           	opt callstack 0
   499  000060                     ?___wmul:
   500                           	opt callstack 0
   501  000060                     ?___awdiv:
   502                           	opt callstack 0
   503  000060                     ?___awmod:
   504                           	opt callstack 0
   505  000060                     ?___flneg:
   506                           	opt callstack 0
   507  000060                     ?___fltol:
   508                           	opt callstack 0
   509  000060                     ?___aodiv:
   510                           	opt callstack 0
   511  000060                     ?___aomod:
   512                           	opt callstack 0
   513  000060                     MSdelay@val:
   514                           	opt callstack 0
   515  000060                     ADC_Read@channel:
   516                           	opt callstack 0
   517  000060                     EEPROM_Read@address:
   518                           	opt callstack 0
   519  000060                     ___wmul@multiplier:
   520                           	opt callstack 0
   521  000060                     ___awdiv@dividend:
   522                           	opt callstack 0
   523  000060                     ___awmod@dividend:
   524                           	opt callstack 0
   525  000060                     isdigit@c:
   526                           	opt callstack 0
   527  000060                     isspace@c:
   528                           	opt callstack 0
   529  000060                     isupper@c:
   530                           	opt callstack 0
   531  000060                     fputc@c:
   532                           	opt callstack 0
   533  000060                     strcpy@dest:
   534                           	opt callstack 0
   535  000060                     strlen@s:
   536                           	opt callstack 0
   537  000060                     strncmp@_l:
   538                           	opt callstack 0
   539  000060                     ___fleq@ff1:
   540                           	opt callstack 0
   541  000060                     ___flneg@f1:
   542                           	opt callstack 0
   543  000060                     ___fltol@f1:
   544                           	opt callstack 0
   545  000060                     ___fpclassifyf@x:
   546                           	opt callstack 0
   547  000060                     ___aodiv@dividend:
   548                           	opt callstack 0
   549  000060                     ___aomod@dividend:
   550                           	opt callstack 0
   551                           
   552                           ; 8 bytes @ 0x0
   553  000060                     	ds	2
   554  000062                     ??_ADC_Read:
   555  000062                     ??_isupper:
   556  000062                     ??_isdigit:
   557  000062                     ??_isspace:
   558  000062                     MSdelay@i:
   559                           	opt callstack 0
   560  000062                     ___wmul@multiplicand:
   561                           	opt callstack 0
   562  000062                     ___awdiv@divisor:
   563                           	opt callstack 0
   564  000062                     ___awmod@divisor:
   565                           	opt callstack 0
   566  000062                     fputc@fp:
   567                           	opt callstack 0
   568  000062                     strcpy@src:
   569                           	opt callstack 0
   570  000062                     strlen@a:
   571                           	opt callstack 0
   572  000062                     strncmp@_r:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x2
   576  000062                     	ds	2
   577  000064                     ??_fputc:
   578  000064                     ??___fpclassifyf:
   579  000064                     ??_strcpy:
   580  000064                     ??___fltol:
   581  000064                     ___awdiv@counter:
   582                           	opt callstack 0
   583  000064                     ___awmod@counter:
   584                           	opt callstack 0
   585  000064                     MSdelay@j:
   586                           	opt callstack 0
   587  000064                     ___wmul@product:
   588                           	opt callstack 0
   589  000064                     strncmp@n:
   590                           	opt callstack 0
   591  000064                     ___fleq@ff2:
   592                           	opt callstack 0
   593                           
   594                           ; 4 bytes @ 0x4
   595  000064                     	ds	1
   596  000065                     ___awdiv@sign:
   597                           	opt callstack 0
   598  000065                     ___awmod@sign:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0x5
   602  000065                     	ds	1
   603  000066                     ??_strncmp:
   604  000066                     ?_tolower:
   605                           	opt callstack 0
   606  000066                     LCD_Command@cmd:
   607                           	opt callstack 0
   608  000066                     LCD_Char@dat:
   609                           	opt callstack 0
   610  000066                     _isspace$1295:
   611                           	opt callstack 0
   612  000066                     ADC_Read@digital:
   613                           	opt callstack 0
   614  000066                     ___awdiv@quotient:
   615                           	opt callstack 0
   616  000066                     strcpy@s:
   617                           	opt callstack 0
   618  000066                     tolower@c:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x6
   622  000066                     	ds	1
   623  000067                     ?_atoi:
   624                           	opt callstack 0
   625  000067                     LCD_String@msg:
   626                           	opt callstack 0
   627  000067                     atoi@s:
   628                           	opt callstack 0
   629  000067                     strncmp@l:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x7
   633  000067                     	ds	1
   634  000068                     ??_tolower:
   635  000068                     ??___fleq:
   636  000068                     ?___xxtofl:
   637                           	opt callstack 0
   638  000068                     ___fltol@sign1:
   639                           	opt callstack 0
   640  000068                     ___fpclassifyf@e:
   641                           	opt callstack 0
   642  000068                     strcpy@d:
   643                           	opt callstack 0
   644  000068                     ___xxtofl@val:
   645                           	opt callstack 0
   646  000068                     ___aodiv@divisor:
   647                           	opt callstack 0
   648  000068                     ___aomod@divisor:
   649                           	opt callstack 0
   650                           
   651                           ; 8 bytes @ 0x8
   652  000068                     	ds	1
   653  000069                     ??_atoi:
   654  000069                     LCD_String_xy@pos:
   655                           	opt callstack 0
   656  000069                     ___fltol@exp1:
   657                           	opt callstack 0
   658  000069                     fputs@s:
   659                           	opt callstack 0
   660  000069                     strncmp@r:
   661                           	opt callstack 0
   662                           
   663                           ; 2 bytes @ 0x9
   664  000069                     	ds	1
   665  00006A                     LCD_String_xy@msg:
   666                           	opt callstack 0
   667  00006A                     ___fpclassifyf@u:
   668                           	opt callstack 0
   669                           
   670                           ; 4 bytes @ 0xA
   671  00006A                     	ds	1
   672  00006B                     fputs@fp:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0xB
   676  00006B                     	ds	1
   677  00006C                     ??___xxtofl:
   678  00006C                     LCD_String_xy@row:
   679                           	opt callstack 0
   680  00006C                     _tolower$1380:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0xC
   684  00006C                     	ds	1
   685  00006D                     LCD_String_xy@location:
   686                           	opt callstack 0
   687  00006D                     fputs@c:
   688                           	opt callstack 0
   689  00006D                     atoi@neg:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0xD
   693  00006D                     	ds	1
   694  00006E                     fputs@i:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0xE
   698  00006E                     	ds	1
   699  00006F                     _atoi$1264:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0xF
   703  00006F                     	ds	1
   704  000070                     ?_pad:
   705                           	opt callstack 0
   706  000070                     ___aodiv@counter:
   707                           	opt callstack 0
   708  000070                     ___aomod@counter:
   709                           	opt callstack 0
   710  000070                     ___xxtofl@sign:
   711                           	opt callstack 0
   712  000070                     pad@fp:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x10
   716  000070                     	ds	1
   717  000071                     ___aodiv@sign:
   718                           	opt callstack 0
   719  000071                     ___aomod@sign:
   720                           	opt callstack 0
   721  000071                     ___xxtofl@exp:
   722                           	opt callstack 0
   723  000071                     _atoi$1266:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x11
   727  000071                     	ds	1
   728  000072                     ?_abs:
   729                           	opt callstack 0
   730  000072                     pad@buf:
   731                           	opt callstack 0
   732  000072                     abs@a:
   733                           	opt callstack 0
   734  000072                     ___xxtofl@arg:
   735                           	opt callstack 0
   736  000072                     ___aodiv@quotient:
   737                           	opt callstack 0
   738                           
   739                           ; 8 bytes @ 0x12
   740  000072                     	ds	1
   741  000073                     _atoi$1265:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x13
   745  000073                     	ds	1
   746  000074                     ??_abs:
   747  000074                     pad@p:
   748                           	opt callstack 0
   749  000074                     atoi@n:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x14
   753  000074                     	ds	2
   754  000076                     ??_pad:
   755  000076                     ?___fldiv:
   756                           	opt callstack 0
   757  000076                     ?___flmul:
   758                           	opt callstack 0
   759  000076                     carregaTempIdeal@adress:
   760                           	opt callstack 0
   761  000076                     carregaTempExterna@externa:
   762                           	opt callstack 0
   763  000076                     ___fldiv@b:
   764                           	opt callstack 0
   765  000076                     ___flmul@b:
   766                           	opt callstack 0
   767                           
   768                           ; 4 bytes @ 0x16
   769  000076                     	ds	1
   770  000077                     pad@i:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x17
   774  000077                     	ds	1
   775  000078                     carregaTempIdeal@ideal:
   776                           	opt callstack 0
   777                           
   778                           ; 3 bytes @ 0x18
   779  000078                     	ds	1
   780  000079                     carregaTempExterna@i:
   781                           	opt callstack 0
   782  000079                     pad@w:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x19
   786  000079                     	ds	1
   787  00007A                     ___fldiv@a:
   788                           	opt callstack 0
   789  00007A                     ___flmul@a:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x1A
   793  00007A                     	ds	1
   794  00007B                     ?_dtoa:
   795                           	opt callstack 0
   796  00007B                     carregaTempIdeal@i:
   797                           	opt callstack 0
   798  00007B                     dtoa@fp:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x1B
   802  00007B                     	ds	2
   803  00007D                     dtoa@d:
   804                           	opt callstack 0
   805                           
   806                           ; 8 bytes @ 0x1D
   807  00007D                     	ds	1
   808  00007E                     ??___fldiv:
   809  00007E                     ??___flmul:
   810                           
   811                           ; 1 bytes @ 0x1E
   812  00007E                     	ds	4
   813  000082                     ___flmul@sign:
   814                           	opt callstack 0
   815  000082                     ___fldiv@rem:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x22
   819  000082                     	ds	1
   820  000083                     ___flmul@aexp:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x23
   824  000083                     	ds	1
   825  000084                     ___flmul@grs:
   826                           	opt callstack 0
   827                           
   828                           ; 4 bytes @ 0x24
   829  000084                     	ds	1
   830  000085                     ??_dtoa:
   831                           
   832                           ; 1 bytes @ 0x25
   833  000085                     	ds	1
   834  000086                     ___fldiv@sign:
   835                           	opt callstack 0
   836                           
   837                           ; 1 bytes @ 0x26
   838  000086                     	ds	1
   839  000087                     ___fldiv@new_exp:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x27
   843  000087                     	ds	1
   844  000088                     ___flmul@bexp:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x28
   848  000088                     	ds	1
   849  000089                     ___fldiv@grs:
   850                           	opt callstack 0
   851  000089                     ___flmul@prod:
   852                           	opt callstack 0
   853                           
   854                           ; 4 bytes @ 0x29
   855  000089                     	ds	4
   856  00008D                     ___fldiv@bexp:
   857                           	opt callstack 0
   858  00008D                     _dtoa$737:
   859                           	opt callstack 0
   860  00008D                     ___flmul@temp:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x2D
   864  00008D                     	ds	1
   865  00008E                     ___fldiv@aexp:
   866                           	opt callstack 0
   867                           
   868                           ; 1 bytes @ 0x2E
   869  00008E                     	ds	1
   870  00008F                     ?_floorf:
   871                           	opt callstack 0
   872  00008F                     ?___fladd:
   873                           	opt callstack 0
   874  00008F                     dtoa@p:
   875                           	opt callstack 0
   876  00008F                     ___fladd@b:
   877                           	opt callstack 0
   878  00008F                     floorf@x:
   879                           	opt callstack 0
   880                           
   881                           ; 4 bytes @ 0x2F
   882  00008F                     	ds	2
   883  000091                     dtoa@w:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x31
   887  000091                     	ds	2
   888  000093                     ??_floorf:
   889  000093                     dtoa@s:
   890                           	opt callstack 0
   891  000093                     ___fladd@a:
   892                           	opt callstack 0
   893                           
   894                           ; 4 bytes @ 0x33
   895  000093                     	ds	2
   896  000095                     dtoa@n:
   897                           	opt callstack 0
   898                           
   899                           ; 8 bytes @ 0x35
   900  000095                     	ds	2
   901  000097                     ??___fladd:
   902                           
   903                           ; 1 bytes @ 0x37
   904  000097                     	ds	2
   905  000099                     floorf@m:
   906                           	opt callstack 0
   907                           
   908                           ; 4 bytes @ 0x39
   909  000099                     	ds	2
   910  00009B                     ___fladd@signs:
   911                           	opt callstack 0
   912                           
   913                           ; 1 bytes @ 0x3B
   914  00009B                     	ds	1
   915  00009C                     ___fladd@aexp:
   916                           	opt callstack 0
   917                           
   918                           ; 1 bytes @ 0x3C
   919  00009C                     	ds	1
   920  00009D                     ___fladd@bexp:
   921                           	opt callstack 0
   922  00009D                     dtoa@i:
   923                           	opt callstack 0
   924  00009D                     floorf@e:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x3D
   928  00009D                     	ds	1
   929  00009E                     ___fladd@grs:
   930                           	opt callstack 0
   931                           
   932                           ; 1 bytes @ 0x3E
   933  00009E                     	ds	1
   934  00009F                     ?___flsub:
   935                           	opt callstack 0
   936  00009F                     USART_Init@baud_rate:
   937                           	opt callstack 0
   938  00009F                     ___flge@ff1:
   939                           	opt callstack 0
   940  00009F                     ___flsub@b:
   941                           	opt callstack 0
   942  00009F                     floorf@u:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x3F
   946  00009F                     	ds	2
   947  0000A1                     USART_Init@temp:
   948                           	opt callstack 0
   949                           
   950                           ; 4 bytes @ 0x41
   951  0000A1                     	ds	2
   952  0000A3                     ___flge@ff2:
   953                           	opt callstack 0
   954  0000A3                     ___flsub@a:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x43
   958  0000A3                     	ds	4
   959  0000A7                     ??___flge:
   960                           
   961                           ; 1 bytes @ 0x47
   962  0000A7                     	ds	4
   963  0000AB                     ??_TempExternaMinima:
   964  0000AB                     ?_efgtoa:
   965                           	opt callstack 0
   966  0000AB                     efgtoa@fp:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x4B
   970  0000AB                     	ds	2
   971  0000AD                     efgtoa@f:
   972                           	opt callstack 0
   973                           
   974                           ; 4 bytes @ 0x4D
   975  0000AD                     	ds	4
   976  0000B1                     efgtoa@c:
   977                           	opt callstack 0
   978                           
   979                           ; 1 bytes @ 0x51
   980  0000B1                     	ds	1
   981  0000B2                     ??_efgtoa:
   982                           
   983                           ; 1 bytes @ 0x52
   984  0000B2                     	ds	5
   985  0000B7                     efgtoa@ou:
   986                           	opt callstack 0
   987                           
   988                           ; 4 bytes @ 0x57
   989  0000B7                     	ds	4
   990  0000BB                     _efgtoa$761:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0x5B
   994  0000BB                     	ds	2
   995  0000BD                     _efgtoa$762:
   996                           	opt callstack 0
   997                           
   998                           ; 2 bytes @ 0x5D
   999  0000BD                     	ds	2
  1000  0000BF                     _efgtoa$766:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x5F
  1004  0000BF                     	ds	2
  1005  0000C1                     _efgtoa$770:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x61
  1009  0000C1                     	ds	2
  1010  0000C3                     _efgtoa$771:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x63
  1014  0000C3                     	ds	2
  1015  0000C5                     _efgtoa$772:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x65
  1019  0000C5                     	ds	2
  1020  0000C7                     efgtoa@t:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x67
  1024  0000C7                     	ds	2
  1025  0000C9                     efgtoa@pp:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x69
  1029  0000C9                     	ds	2
  1030  0000CB                     efgtoa@m:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x6B
  1034  0000CB                     	ds	2
  1035  0000CD                     efgtoa@ne:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x6D
  1039  0000CD                     	ds	2
  1040  0000CF                     efgtoa@d:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x6F
  1044  0000CF                     	ds	2
  1045  0000D1                     efgtoa@sign:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x71
  1049  0000D1                     	ds	2
  1050  0000D3                     efgtoa@p:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x73
  1054  0000D3                     	ds	2
  1055  0000D5                     efgtoa@nmode:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x75
  1059  0000D5                     	ds	1
  1060  0000D6                     efgtoa@w:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x76
  1064  0000D6                     	ds	2
  1065  0000D8                     efgtoa@mode:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x78
  1069  0000D8                     	ds	1
  1070  0000D9                     efgtoa@h:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x79
  1074  0000D9                     	ds	4
  1075  0000DD                     efgtoa@l:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x7D
  1079  0000DD                     	ds	4
  1080  0000E1                     efgtoa@i:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x81
  1084  0000E1                     	ds	2
  1085  0000E3                     efgtoa@g:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x83
  1089  0000E3                     	ds	4
  1090  0000E7                     efgtoa@e:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x87
  1094  0000E7                     	ds	2
  1095  0000E9                     efgtoa@n:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x89
  1099  0000E9                     	ds	2
  1100  0000EB                     efgtoa@u:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x8B
  1104  0000EB                     	ds	4
  1105  0000EF                     ?_vfpfcnvrt:
  1106                           	opt callstack 0
  1107  0000EF                     vfpfcnvrt@fp:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x8F
  1111  0000EF                     	ds	2
  1112  0000F1                     vfpfcnvrt@fmt:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x91
  1116  0000F1                     	ds	2
  1117  0000F3                     vfpfcnvrt@ap:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x93
  1121  0000F3                     	ds	2
  1122  0000F5                     ??_vfpfcnvrt:
  1123                           
  1124                           ; 1 bytes @ 0x95
  1125  0000F5                     	ds	4
  1126  0000F9                     ?_vfprintf:
  1127                           	opt callstack 0
  1128  0000F9                     vfprintf@fp:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x99
  1132  0000F9                     	ds	2
  1133  0000FB                     vfprintf@fmt:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x9B
  1137  0000FB                     	ds	2
  1138  0000FD                     vfprintf@ap:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x9D
  1142  0000FD                     	ds	2
  1143  0000FF                     
  1144                           ; 1 bytes @ 0x9F
  1145                           
  1146                           	psect	cstackCOMRAM
  1147  000001                     __pcstackCOMRAM:
  1148                           	opt callstack 0
  1149  000001                     ?i2___wmul:
  1150                           	opt callstack 0
  1151  000001                     ?i2_isdigit:
  1152                           	opt callstack 0
  1153  000001                     ?i2_isspace:
  1154                           	opt callstack 0
  1155  000001                     USART_TxChar@out:
  1156                           	opt callstack 0
  1157  000001                     EEPROM_Write@address:
  1158                           	opt callstack 0
  1159  000001                     i2___wmul@multiplier:
  1160                           	opt callstack 0
  1161  000001                     i2isdigit@c:
  1162                           	opt callstack 0
  1163  000001                     i2isspace@c:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x0
  1167  000001                     	ds	1
  1168  000002                     USART_SendString@out:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x1
  1172  000002                     	ds	1
  1173  000003                     ??i2_isdigit:
  1174  000003                     ??i2_isspace:
  1175  000003                     EEPROM_Write@data:
  1176                           	opt callstack 0
  1177  000003                     i2___wmul@multiplicand:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x2
  1181  000003                     	ds	1
  1182  000004                     EEPROM_WriteString@address:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x3
  1186  000004                     	ds	1
  1187  000005                     i2___wmul@product:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x4
  1191  000005                     	ds	1
  1192  000006                     EEPROM_WriteString@data:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x5
  1196  000006                     	ds	1
  1197  000007                     i2_isspace$1295:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x6
  1201  000007                     	ds	1
  1202  000008                     ?i2_atoi:
  1203                           	opt callstack 0
  1204  000008                     i2atoi@s:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x7
  1208  000008                     	ds	2
  1209  00000A                     ??i2_atoi:
  1210                           
  1211                           ; 1 bytes @ 0x9
  1212  00000A                     	ds	4
  1213  00000E                     i2atoi@neg:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0xD
  1217  00000E                     	ds	2
  1218  000010                     i2_atoi$1264:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0xF
  1222  000010                     	ds	2
  1223  000012                     i2_atoi$1266:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x11
  1227  000012                     	ds	2
  1228  000014                     i2_atoi$1265:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x13
  1232  000014                     	ds	1
  1233  000015                     i2atoi@n:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x14
  1237  000015                     	ds	2
  1238  000017                     setatempexterna@valor:
  1239                           	opt callstack 0
  1240  000017                     setatempinterna@valor:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 3 bytes @ 0x16
  1244  000017                     	ds	3
  1245  00001A                     ??_ISR1:
  1246                           
  1247                           ; 1 bytes @ 0x19
  1248  00001A                     	ds	10
  1249  000024                     ISR1@res:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x23
  1253  000024                     	ds	1
  1254                           
  1255 ;;
  1256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1257 ;;
  1258 ;; *************** function _main *****************
  1259 ;; Defined at:
  1260 ;;		line 40 in file "Proj_Principal.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1274 ;;      Params:         0       0       0       0       0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels required when called:   13
  1280 ;; This function calls:
  1281 ;;		_ADC_Init
  1282 ;;		_LCD_Init
  1283 ;;		_MSdelay
  1284 ;;		_TempExternaMinima
  1285 ;;		_USART_Init
  1286 ;;		_carregaTempExterna
  1287 ;;		_carregaTempIdeal
  1288 ;;		_compTemp
  1289 ;;		_escreveLCD
  1290 ;;		_letemp
  1291 ;; This function is called by:
  1292 ;;		Startup code after reset
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text0
  1297  00461C                     __ptext0:
  1298                           	opt callstack 0
  1299  00461C                     _main:
  1300                           	opt callstack 18
  1301  00461C                     
  1302                           ;Proj_Principal.c: 41:     OSCCON = 0x72;
  1303  00461C  0E72               	movlw	114
  1304  00461E  6ED3               	movwf	211,c	;volatile
  1305  004620                     
  1306                           ;Proj_Principal.c: 42:     MSdelay(10);
  1307  004620  0E00               	movlw	0
  1308  004622  0100               	movlb	0	; () banked
  1309  004624  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  1310  004626  0E0A               	movlw	10
  1311  004628  6F60               	movwf	MSdelay@val& (0+255),b
  1312  00462A  ECB9  F023         	call	_MSdelay	;wreg free
  1313  00462E                     
  1314                           ;Proj_Principal.c: 43:     LCD_Init();
  1315  00462E  EC6A  F024         	call	_LCD_Init	;wreg free
  1316  004632                     
  1317                           ;Proj_Principal.c: 44:     ADC_Init();
  1318  004632  ECC2  F025         	call	_ADC_Init	;wreg free
  1319  004636                     
  1320                           ;Proj_Principal.c: 45:     carregaTempExterna();
  1321  004636  EC80  F022         	call	_carregaTempExterna	;wreg free
  1322  00463A                     
  1323                           ;Proj_Principal.c: 46:     carregaTempIdeal();
  1324  00463A  ECB8  F021         	call	_carregaTempIdeal	;wreg free
  1325  00463E                     
  1326                           ;Proj_Principal.c: 47:     MSdelay(30);
  1327  00463E  0E00               	movlw	0
  1328  004640  0100               	movlb	0	; () banked
  1329  004642  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  1330  004644  0E1E               	movlw	30
  1331  004646  6F60               	movwf	MSdelay@val& (0+255),b
  1332  004648  ECB9  F023         	call	_MSdelay	;wreg free
  1333  00464C                     
  1334                           ;Proj_Principal.c: 48:     TRISAbits.TRISA2 = 0;
  1335  00464C  9492               	bcf	146,2,c	;volatile
  1336  00464E                     
  1337                           ;Proj_Principal.c: 49:     TRISAbits.TRISA4 = 0;
  1338  00464E  9892               	bcf	146,4,c	;volatile
  1339  004650                     
  1340                           ;Proj_Principal.c: 50:     TRISAbits.TRISA5 = 0;
  1341  004650  9A92               	bcf	146,5,c	;volatile
  1342  004652                     
  1343                           ;Proj_Principal.c: 51:     USART_Init(9600);
  1344  004652  0E25               	movlw	37
  1345  004654  0100               	movlb	0	; () banked
  1346  004656  6FA0               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  1347  004658  0E80               	movlw	128
  1348  00465A  6F9F               	movwf	USART_Init@baud_rate& (0+255),b
  1349  00465C  ECF4  F020         	call	_USART_Init	;wreg free
  1350  004660                     l6887:
  1351                           
  1352                           ;Proj_Principal.c: 53:         letemp();
  1353  004660  ECCD  F01A         	call	_letemp	;wreg free
  1354  004664                     
  1355                           ;Proj_Principal.c: 54:         TempExternaMinima();
  1356  004664  EC8F  F01F         	call	_TempExternaMinima	;wreg free
  1357  004668                     
  1358                           ;Proj_Principal.c: 55:         compTemp();
  1359  004668  EC62  F01B         	call	_compTemp	;wreg free
  1360  00466C                     
  1361                           ;Proj_Principal.c: 56:         escreveLCD();
  1362  00466C  EC64  F014         	call	_escreveLCD	;wreg free
  1363  004670  EF30  F023         	goto	l6887
  1364  004674  EF07  F000         	goto	start
  1365  004678                     __end_of_main:
  1366                           	opt callstack 0
  1367                           
  1368 ;; *************** function _letemp *****************
  1369 ;; Defined at:
  1370 ;;		line 158 in file "Proj_Principal.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    5
  1391 ;; This function calls:
  1392 ;;		_ADC_Read
  1393 ;;		___fldiv
  1394 ;;		___flmul
  1395 ;;		___xxtofl
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text1
  1402  00359A                     __ptext1:
  1403                           	opt callstack 0
  1404  00359A                     _letemp:
  1405                           	opt callstack 25
  1406  00359A                     
  1407                           ;Proj_Principal.c: 159:     TempInternaAtual = (ADC_Read(1)*4.88);
  1408  00359A  0E00               	movlw	0
  1409  00359C  0100               	movlb	0	; () banked
  1410  00359E  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1411  0035A0  0E01               	movlw	1
  1412  0035A2  6F60               	movwf	ADC_Read@channel& (0+255),b
  1413  0035A4  ECA0  F020         	call	_ADC_Read	;wreg free
  1414  0035A8  0100               	movlb	0	; () banked
  1415  0035AA  C060  F068         	movff	?_ADC_Read,___xxtofl@val
  1416  0035AE  C061  F069         	movff	?_ADC_Read+1,___xxtofl@val+1
  1417  0035B2  0E00               	movlw	0
  1418  0035B4  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1419  0035B6  0EFF               	movlw	-1
  1420  0035B8  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  1421  0035BA  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  1422  0035BC  0E01               	movlw	1
  1423  0035BE  EC79  F018         	call	___xxtofl
  1424  0035C2  C068  F076         	movff	?___xxtofl,___flmul@b
  1425  0035C6  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  1426  0035CA  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  1427  0035CE  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  1428  0035D2  0EF6               	movlw	246
  1429  0035D4  0100               	movlb	0	; () banked
  1430  0035D6  6F7A               	movwf	___flmul@a& (0+255),b
  1431  0035D8  0E28               	movlw	40
  1432  0035DA  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  1433  0035DC  0E9C               	movlw	156
  1434  0035DE  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  1435  0035E0  0E40               	movlw	64
  1436  0035E2  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  1437  0035E4  EC0E  F00F         	call	___flmul	;wreg free
  1438  0035E8  C076  F104         	movff	?___flmul,_TempInternaAtual
  1439  0035EC  C077  F105         	movff	?___flmul+1,_TempInternaAtual+1
  1440  0035F0  C078  F106         	movff	?___flmul+2,_TempInternaAtual+2
  1441  0035F4  C079  F107         	movff	?___flmul+3,_TempInternaAtual+3
  1442  0035F8                     
  1443                           ;Proj_Principal.c: 160:     TempInternaAtual = (TempInternaAtual / 10.00);
  1444  0035F8  C104  F076         	movff	_TempInternaAtual,___fldiv@b
  1445  0035FC  C105  F077         	movff	_TempInternaAtual+1,___fldiv@b+1
  1446  003600  C106  F078         	movff	_TempInternaAtual+2,___fldiv@b+2
  1447  003604  C107  F079         	movff	_TempInternaAtual+3,___fldiv@b+3
  1448  003608  0E00               	movlw	0
  1449  00360A  0100               	movlb	0	; () banked
  1450  00360C  6F7A               	movwf	___fldiv@a& (0+255),b
  1451  00360E  0E00               	movlw	0
  1452  003610  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  1453  003612  0E20               	movlw	32
  1454  003614  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  1455  003616  0E41               	movlw	65
  1456  003618  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  1457  00361A  EC24  F011         	call	___fldiv	;wreg free
  1458  00361E  C076  F104         	movff	?___fldiv,_TempInternaAtual
  1459  003622  C077  F105         	movff	?___fldiv+1,_TempInternaAtual+1
  1460  003626  C078  F106         	movff	?___fldiv+2,_TempInternaAtual+2
  1461  00362A  C079  F107         	movff	?___fldiv+3,_TempInternaAtual+3
  1462  00362E                     
  1463                           ;Proj_Principal.c: 161:     TempExternaAtual = (ADC_Read(3)*4.88);
  1464  00362E  0E00               	movlw	0
  1465  003630  0100               	movlb	0	; () banked
  1466  003632  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1467  003634  0E03               	movlw	3
  1468  003636  6F60               	movwf	ADC_Read@channel& (0+255),b
  1469  003638  ECA0  F020         	call	_ADC_Read	;wreg free
  1470  00363C  0100               	movlb	0	; () banked
  1471  00363E  C060  F068         	movff	?_ADC_Read,___xxtofl@val
  1472  003642  C061  F069         	movff	?_ADC_Read+1,___xxtofl@val+1
  1473  003646  0E00               	movlw	0
  1474  003648  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1475  00364A  0EFF               	movlw	-1
  1476  00364C  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  1477  00364E  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  1478  003650  0E01               	movlw	1
  1479  003652  EC79  F018         	call	___xxtofl
  1480  003656  C068  F076         	movff	?___xxtofl,___flmul@b
  1481  00365A  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  1482  00365E  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  1483  003662  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  1484  003666  0EF6               	movlw	246
  1485  003668  0100               	movlb	0	; () banked
  1486  00366A  6F7A               	movwf	___flmul@a& (0+255),b
  1487  00366C  0E28               	movlw	40
  1488  00366E  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  1489  003670  0E9C               	movlw	156
  1490  003672  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  1491  003674  0E40               	movlw	64
  1492  003676  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  1493  003678  EC0E  F00F         	call	___flmul	;wreg free
  1494  00367C  C076  F100         	movff	?___flmul,_TempExternaAtual
  1495  003680  C077  F101         	movff	?___flmul+1,_TempExternaAtual+1
  1496  003684  C078  F102         	movff	?___flmul+2,_TempExternaAtual+2
  1497  003688  C079  F103         	movff	?___flmul+3,_TempExternaAtual+3
  1498                           
  1499                           ;Proj_Principal.c: 162:     TempExternaAtual = (TempExternaAtual / 10.00);
  1500  00368C  C100  F076         	movff	_TempExternaAtual,___fldiv@b
  1501  003690  C101  F077         	movff	_TempExternaAtual+1,___fldiv@b+1
  1502  003694  C102  F078         	movff	_TempExternaAtual+2,___fldiv@b+2
  1503  003698  C103  F079         	movff	_TempExternaAtual+3,___fldiv@b+3
  1504  00369C  0E00               	movlw	0
  1505  00369E  0100               	movlb	0	; () banked
  1506  0036A0  6F7A               	movwf	___fldiv@a& (0+255),b
  1507  0036A2  0E00               	movlw	0
  1508  0036A4  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  1509  0036A6  0E20               	movlw	32
  1510  0036A8  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  1511  0036AA  0E41               	movlw	65
  1512  0036AC  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  1513  0036AE  EC24  F011         	call	___fldiv	;wreg free
  1514  0036B2  C076  F100         	movff	?___fldiv,_TempExternaAtual
  1515  0036B6  C077  F101         	movff	?___fldiv+1,_TempExternaAtual+1
  1516  0036BA  C078  F102         	movff	?___fldiv+2,_TempExternaAtual+2
  1517  0036BE  C079  F103         	movff	?___fldiv+3,_TempExternaAtual+3
  1518  0036C2  0012               	return		;funcret
  1519  0036C4                     __end_of_letemp:
  1520                           	opt callstack 0
  1521                           
  1522 ;; *************** function _ADC_Read *****************
  1523 ;; Defined at:
  1524 ;;		line 12 in file "ADC.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  channel         2    0[BANK0 ] int 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  digital         2    6[BANK0 ] int 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  2    0[BANK0 ] int 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       2       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        8 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    4
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_letemp
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text2
  1553  004140                     __ptext2:
  1554                           	opt callstack 0
  1555  004140                     _ADC_Read:
  1556                           	opt callstack 25
  1557  004140                     
  1558                           ;ADC.c: 13:     int digital;;ADC.c: 14:     ADCON0 = (ADCON0 & 0b11000011) | ((channel <
      +                          < 2) & 0b00111100);
  1559  004140  C060  F062         	movff	ADC_Read@channel,??_ADC_Read
  1560  004144  0100               	movlb	0	; () banked
  1561  004146  90D8               	bcf	status,0,c
  1562  004148  3762               	rlcf	??_ADC_Read& (0+255),f,b
  1563  00414A  90D8               	bcf	status,0,c
  1564  00414C  3762               	rlcf	??_ADC_Read& (0+255),f,b
  1565  00414E  0E3C               	movlw	60
  1566  004150  1762               	andwf	??_ADC_Read& (0+255),f,b
  1567  004152  50C2               	movf	194,w,c	;volatile
  1568  004154  0BC3               	andlw	195
  1569  004156  1162               	iorwf	??_ADC_Read& (0+255),w,b
  1570  004158  6EC2               	movwf	194,c	;volatile
  1571                           
  1572                           ;ADC.c: 15:     ADCON0 |= ((1 << ADON) | (1 << GO));
  1573  00415A  B2C2               	btfsc	4034,1,c	;volatile
  1574  00415C  EFB2  F020         	goto	u9411
  1575  004160  EFB6  F020         	goto	u9410
  1576  004164                     u9411:
  1577  004164  6B62               	clrf	??_ADC_Read& (0+255),b
  1578  004166  2B62               	incf	??_ADC_Read& (0+255),f,b
  1579  004168  EFB8  F020         	goto	u9428
  1580  00416C                     u9410:
  1581  00416C  0100               	movlb	0	; () banked
  1582  00416E  6B62               	clrf	??_ADC_Read& (0+255),b
  1583  004170                     u9428:
  1584  004170  0E01               	movlw	1
  1585  004172  6F63               	movwf	(??_ADC_Read+1)& (0+255),b
  1586  004174  2B62               	incf	??_ADC_Read& (0+255),f,b
  1587  004176  EFBF  F020         	goto	u9434
  1588  00417A                     u9435:
  1589  00417A  90D8               	bcf	status,0,c
  1590  00417C  3763               	rlcf	(??_ADC_Read+1)& (0+255),f,b
  1591  00417E                     u9434:
  1592  00417E  2F62               	decfsz	??_ADC_Read& (0+255),f,b
  1593  004180  EFBD  F020         	goto	u9435
  1594  004184  B0C2               	btfsc	4034,0,c	;volatile
  1595  004186  EFC7  F020         	goto	u9441
  1596  00418A  EFCC  F020         	goto	u9440
  1597  00418E                     u9441:
  1598  00418E  0100               	movlb	0	; () banked
  1599  004190  6B64               	clrf	(??_ADC_Read+2)& (0+255),b
  1600  004192  2B64               	incf	(??_ADC_Read+2)& (0+255),f,b
  1601  004194  EFCE  F020         	goto	u9458
  1602  004198                     u9440:
  1603  004198  0100               	movlb	0	; () banked
  1604  00419A  6B64               	clrf	(??_ADC_Read+2)& (0+255),b
  1605  00419C                     u9458:
  1606  00419C  0E01               	movlw	1
  1607  00419E  6F65               	movwf	(??_ADC_Read+3)& (0+255),b
  1608  0041A0  2B64               	incf	(??_ADC_Read+2)& (0+255),f,b
  1609  0041A2  EFD5  F020         	goto	u9464
  1610  0041A6                     u9465:
  1611  0041A6  90D8               	bcf	status,0,c
  1612  0041A8  3765               	rlcf	(??_ADC_Read+3)& (0+255),f,b
  1613  0041AA                     u9464:
  1614  0041AA  2F64               	decfsz	(??_ADC_Read+2)& (0+255),f,b
  1615  0041AC  EFD3  F020         	goto	u9465
  1616  0041B0  0100               	movlb	0	; () banked
  1617  0041B2  5165               	movf	(??_ADC_Read+3)& (0+255),w,b
  1618  0041B4  1163               	iorwf	(??_ADC_Read+1)& (0+255),w,b
  1619  0041B6  12C2               	iorwf	194,f,c	;volatile
  1620  0041B8                     l284:
  1621  0041B8  B2C2               	btfsc	194,1,c	;volatile
  1622  0041BA  EFE1  F020         	goto	u9471
  1623  0041BE  EFE3  F020         	goto	u9470
  1624  0041C2                     u9471:
  1625  0041C2  EFDC  F020         	goto	l284
  1626  0041C6                     u9470:
  1627  0041C6                     
  1628                           ;ADC.c: 17:     digital = (ADRESH * 256) | (ADRESL);
  1629  0041C6  50C3               	movf	195,w,c	;volatile
  1630  0041C8  CFC4 F062          	movff	4036,??_ADC_Read	;volatile
  1631  0041CC  0100               	movlb	0	; () banked
  1632  0041CE  6B63               	clrf	(??_ADC_Read+1)& (0+255),b
  1633  0041D0  C062  F063         	movff	??_ADC_Read,??_ADC_Read+1
  1634  0041D4  6B62               	clrf	??_ADC_Read& (0+255),b
  1635  0041D6  1162               	iorwf	??_ADC_Read& (0+255),w,b
  1636  0041D8  6F66               	movwf	ADC_Read@digital& (0+255),b
  1637  0041DA  5163               	movf	(??_ADC_Read+1)& (0+255),w,b
  1638  0041DC  6F67               	movwf	(ADC_Read@digital+1)& (0+255),b
  1639  0041DE                     
  1640                           ; BSR set to: 0
  1641                           ;ADC.c: 18:     return (digital);
  1642  0041DE  C066  F060         	movff	ADC_Read@digital,?_ADC_Read
  1643  0041E2  C067  F061         	movff	ADC_Read@digital+1,?_ADC_Read+1
  1644  0041E6                     
  1645                           ; BSR set to: 0
  1646  0041E6  0012               	return		;funcret
  1647  0041E8                     __end_of_ADC_Read:
  1648                           	opt callstack 0
  1649                           
  1650 ;; *************** function _escreveLCD *****************
  1651 ;; Defined at:
  1652 ;;		line 131 in file "Proj_Principal.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  i               2   44[BANK1 ] int 
  1657 ;;  i               2   42[BANK1 ] int 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1670 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1671 ;;Total ram usage:        4 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:   12
  1674 ;; This function calls:
  1675 ;;		_LCD_Clear
  1676 ;;		_LCD_String_xy
  1677 ;;		_MSdelay
  1678 ;;		_sprintf
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text3
  1685  0028C8                     __ptext3:
  1686                           	opt callstack 0
  1687  0028C8                     _escreveLCD:
  1688                           	opt callstack 18
  1689  0028C8                     
  1690                           ;Proj_Principal.c: 132:     LCD_Clear();
  1691  0028C8  ECAC  F025         	call	_LCD_Clear	;wreg free
  1692  0028CC                     
  1693                           ;Proj_Principal.c: 133:     sprintf(TempInterna, "%.2f ", (float) TempInternaAtual, 0xdf
      +                          );
  1694  0028CC  0E39               	movlw	low _TempInterna
  1695  0028CE  0101               	movlb	1	; () banked
  1696  0028D0  6F8C               	movwf	sprintf@s& (0+255),b
  1697  0028D2  0E00               	movlw	high _TempInterna
  1698  0028D4  6F8D               	movwf	(sprintf@s+1)& (0+255),b
  1699  0028D6  0E31               	movlw	low STR_1
  1700  0028D8  6F8E               	movwf	sprintf@fmt& (0+255),b
  1701  0028DA  0E08               	movlw	high STR_1
  1702  0028DC  6F8F               	movwf	(sprintf@fmt+1)& (0+255),b
  1703  0028DE  C104  F190         	movff	_TempInternaAtual,?_sprintf+4
  1704  0028E2  C105  F191         	movff	_TempInternaAtual+1,?_sprintf+5
  1705  0028E6  C106  F192         	movff	_TempInternaAtual+2,?_sprintf+6
  1706  0028EA  C107  F193         	movff	_TempInternaAtual+3,?_sprintf+7
  1707  0028EE  0E00               	movlw	0
  1708  0028F0  6F95               	movwf	(?_sprintf+9)& (0+255),b
  1709  0028F2  0EDF               	movlw	223
  1710  0028F4  6F94               	movwf	(?_sprintf+8)& (0+255),b
  1711  0028F6  EC3C  F023         	call	_sprintf	;wreg free
  1712  0028FA                     
  1713                           ;Proj_Principal.c: 134:     sprintf(TempExterna, "%.2f", (float) TempExternaAtual, 0xdf)
      +                          ;
  1714  0028FA  0E6C               	movlw	low _TempExterna
  1715  0028FC  0101               	movlb	1	; () banked
  1716  0028FE  6F8C               	movwf	sprintf@s& (0+255),b
  1717  002900  0E01               	movlw	high _TempExterna
  1718  002902  6F8D               	movwf	(sprintf@s+1)& (0+255),b
  1719  002904  0E37               	movlw	low STR_2
  1720  002906  6F8E               	movwf	sprintf@fmt& (0+255),b
  1721  002908  0E08               	movlw	high STR_2
  1722  00290A  6F8F               	movwf	(sprintf@fmt+1)& (0+255),b
  1723  00290C  C100  F190         	movff	_TempExternaAtual,?_sprintf+4
  1724  002910  C101  F191         	movff	_TempExternaAtual+1,?_sprintf+5
  1725  002914  C102  F192         	movff	_TempExternaAtual+2,?_sprintf+6
  1726  002918  C103  F193         	movff	_TempExternaAtual+3,?_sprintf+7
  1727  00291C  0E00               	movlw	0
  1728  00291E  6F95               	movwf	(?_sprintf+9)& (0+255),b
  1729  002920  0EDF               	movlw	223
  1730  002922  6F94               	movwf	(?_sprintf+8)& (0+255),b
  1731  002924  EC3C  F023         	call	_sprintf	;wreg free
  1732  002928                     
  1733                           ;Proj_Principal.c: 135:     LCD_String_xy(1, 0, "Temp.Exte.:");
  1734  002928  0E00               	movlw	0
  1735  00292A  0100               	movlb	0	; () banked
  1736  00292C  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1737  00292E  0E0D               	movlw	low STR_3
  1738  002930  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1739  002932  0E08               	movlw	high STR_3
  1740  002934  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1741  002936  0E01               	movlw	1
  1742  002938  EC27  F024         	call	_LCD_String_xy
  1743  00293C                     
  1744                           ;Proj_Principal.c: 136:     LCD_String_xy(1, 11, TempExterna);
  1745  00293C  0E0B               	movlw	11
  1746  00293E  0100               	movlb	0	; () banked
  1747  002940  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1748  002942  0E6C               	movlw	low _TempExterna
  1749  002944  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1750  002946  0E01               	movlw	high _TempExterna
  1751  002948  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1752  00294A  0E01               	movlw	1
  1753  00294C  EC27  F024         	call	_LCD_String_xy
  1754  002950                     
  1755                           ;Proj_Principal.c: 137:     LCD_String_xy(1, 15, "C");
  1756  002950  0E0F               	movlw	15
  1757  002952  0100               	movlb	0	; () banked
  1758  002954  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1759  002956  0E52               	movlw	low STR_4
  1760  002958  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1761  00295A  0E08               	movlw	high STR_4
  1762  00295C  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1763  00295E  0E01               	movlw	1
  1764  002960  EC27  F024         	call	_LCD_String_xy
  1765  002964                     
  1766                           ;Proj_Principal.c: 138:     LCD_String_xy(2, 0, "Temp.Inte.:");
  1767  002964  0E00               	movlw	0
  1768  002966  0100               	movlb	0	; () banked
  1769  002968  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1770  00296A  0E01               	movlw	low STR_5
  1771  00296C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1772  00296E  0E08               	movlw	high STR_5
  1773  002970  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1774  002972  0E02               	movlw	2
  1775  002974  EC27  F024         	call	_LCD_String_xy
  1776  002978                     
  1777                           ;Proj_Principal.c: 139:     LCD_String_xy(2, 11, TempInterna);
  1778  002978  0E0B               	movlw	11
  1779  00297A  0100               	movlb	0	; () banked
  1780  00297C  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1781  00297E  0E39               	movlw	low _TempInterna
  1782  002980  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1783  002982  0E00               	movlw	high _TempInterna
  1784  002984  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1785  002986  0E02               	movlw	2
  1786  002988  EC27  F024         	call	_LCD_String_xy
  1787  00298C                     
  1788                           ;Proj_Principal.c: 140:     LCD_String_xy(2, 15, "C");
  1789  00298C  0E0F               	movlw	15
  1790  00298E  0100               	movlb	0	; () banked
  1791  002990  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1792  002992  0E52               	movlw	low STR_4
  1793  002994  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1794  002996  0E08               	movlw	high STR_4
  1795  002998  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1796  00299A  0E02               	movlw	2
  1797  00299C  EC27  F024         	call	_LCD_String_xy
  1798  0029A0                     
  1799                           ;Proj_Principal.c: 141:     for (int i = 0; i < 5; i++) {
  1800  0029A0  0E00               	movlw	0
  1801  0029A2  0101               	movlb	1	; () banked
  1802  0029A4  6FA1               	movwf	(escreveLCD@i+1)& (0+255),b
  1803  0029A6  0E00               	movlw	0
  1804  0029A8  6FA0               	movwf	escreveLCD@i& (0+255),b
  1805  0029AA                     l6829:
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;Proj_Principal.c: 142:         MSdelay(1000);
  1809  0029AA  0E03               	movlw	3
  1810  0029AC  0100               	movlb	0	; () banked
  1811  0029AE  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  1812  0029B0  0EE8               	movlw	232
  1813  0029B2  6F60               	movwf	MSdelay@val& (0+255),b
  1814  0029B4  ECB9  F023         	call	_MSdelay	;wreg free
  1815  0029B8                     
  1816                           ;Proj_Principal.c: 143:     }
  1817  0029B8  0101               	movlb	1	; () banked
  1818  0029BA  4BA0               	infsnz	escreveLCD@i& (0+255),f,b
  1819  0029BC  2BA1               	incf	(escreveLCD@i+1)& (0+255),f,b
  1820  0029BE                     
  1821                           ; BSR set to: 1
  1822  0029BE  BFA1               	btfsc	(escreveLCD@i+1)& (0+255),7,b
  1823  0029C0  EFEB  F014         	goto	u9711
  1824  0029C4  51A1               	movf	(escreveLCD@i+1)& (0+255),w,b
  1825  0029C6  E109               	bnz	u9710
  1826  0029C8  0E05               	movlw	5
  1827  0029CA  5DA0               	subwf	escreveLCD@i& (0+255),w,b
  1828  0029CC  A0D8               	btfss	status,0,c
  1829  0029CE  EFEB  F014         	goto	u9711
  1830  0029D2  EFED  F014         	goto	u9710
  1831  0029D6                     u9711:
  1832  0029D6  EFD5  F014         	goto	l6829
  1833  0029DA                     u9710:
  1834  0029DA                     
  1835                           ; BSR set to: 1
  1836                           ;Proj_Principal.c: 144:     LCD_Clear();
  1837  0029DA  ECAC  F025         	call	_LCD_Clear	;wreg free
  1838  0029DE                     
  1839                           ;Proj_Principal.c: 145:     sprintf(TempExteAtivacao, "%d", (int) TempExtAtiv, 0xdf);
  1840  0029DE  0E62               	movlw	low _TempExteAtivacao
  1841  0029E0  0101               	movlb	1	; () banked
  1842  0029E2  6F8C               	movwf	sprintf@s& (0+255),b
  1843  0029E4  0E01               	movlw	high _TempExteAtivacao
  1844  0029E6  6F8D               	movwf	(sprintf@s+1)& (0+255),b
  1845  0029E8  0E4F               	movlw	low STR_7
  1846  0029EA  6F8E               	movwf	sprintf@fmt& (0+255),b
  1847  0029EC  0E08               	movlw	high STR_7
  1848  0029EE  6F8F               	movwf	(sprintf@fmt+1)& (0+255),b
  1849  0029F0  C1A4  F190         	movff	_TempExtAtiv,?_sprintf+4
  1850  0029F4  C1A5  F191         	movff	_TempExtAtiv+1,?_sprintf+5
  1851  0029F8  0E00               	movlw	0
  1852  0029FA  6F93               	movwf	(?_sprintf+7)& (0+255),b
  1853  0029FC  0EDF               	movlw	223
  1854  0029FE  6F92               	movwf	(?_sprintf+6)& (0+255),b
  1855  002A00  EC3C  F023         	call	_sprintf	;wreg free
  1856  002A04                     
  1857                           ;Proj_Principal.c: 146:     sprintf(TempInternaIdeal, "%d", (int) TempIdealInt, 0xdf);
  1858  002A04  0E58               	movlw	low _TempInternaIdeal
  1859  002A06  0101               	movlb	1	; () banked
  1860  002A08  6F8C               	movwf	sprintf@s& (0+255),b
  1861  002A0A  0E01               	movlw	high _TempInternaIdeal
  1862  002A0C  6F8D               	movwf	(sprintf@s+1)& (0+255),b
  1863  002A0E  0E4F               	movlw	low STR_7
  1864  002A10  6F8E               	movwf	sprintf@fmt& (0+255),b
  1865  002A12  0E08               	movlw	high STR_7
  1866  002A14  6F8F               	movwf	(sprintf@fmt+1)& (0+255),b
  1867  002A16  C1A6  F190         	movff	_TempIdealInt,?_sprintf+4
  1868  002A1A  C1A7  F191         	movff	_TempIdealInt+1,?_sprintf+5
  1869  002A1E  0E00               	movlw	0
  1870  002A20  6F93               	movwf	(?_sprintf+7)& (0+255),b
  1871  002A22  0EDF               	movlw	223
  1872  002A24  6F92               	movwf	(?_sprintf+6)& (0+255),b
  1873  002A26  EC3C  F023         	call	_sprintf	;wreg free
  1874  002A2A                     
  1875                           ;Proj_Principal.c: 147:     LCD_String_xy(1, 0, "Temp.Ativ.:");
  1876  002A2A  0E00               	movlw	0
  1877  002A2C  0100               	movlb	0	; () banked
  1878  002A2E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1879  002A30  0E19               	movlw	low STR_9
  1880  002A32  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1881  002A34  0E08               	movlw	high STR_9
  1882  002A36  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1883  002A38  0E01               	movlw	1
  1884  002A3A  EC27  F024         	call	_LCD_String_xy
  1885  002A3E                     
  1886                           ;Proj_Principal.c: 148:     LCD_String_xy(1, 11, TempExteAtivacao);
  1887  002A3E  0E0B               	movlw	11
  1888  002A40  0100               	movlb	0	; () banked
  1889  002A42  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1890  002A44  0E62               	movlw	low _TempExteAtivacao
  1891  002A46  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1892  002A48  0E01               	movlw	high _TempExteAtivacao
  1893  002A4A  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1894  002A4C  0E01               	movlw	1
  1895  002A4E  EC27  F024         	call	_LCD_String_xy
  1896  002A52                     
  1897                           ;Proj_Principal.c: 149:     LCD_String_xy(1, 13, "C");
  1898  002A52  0E0D               	movlw	13
  1899  002A54  0100               	movlb	0	; () banked
  1900  002A56  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1901  002A58  0E52               	movlw	low STR_4
  1902  002A5A  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1903  002A5C  0E08               	movlw	high STR_4
  1904  002A5E  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1905  002A60  0E01               	movlw	1
  1906  002A62  EC27  F024         	call	_LCD_String_xy
  1907  002A66                     
  1908                           ;Proj_Principal.c: 150:     LCD_String_xy(2, 0, "Temp.Ideal:");
  1909  002A66  0E00               	movlw	0
  1910  002A68  0100               	movlb	0	; () banked
  1911  002A6A  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1912  002A6C  0E25               	movlw	low STR_11
  1913  002A6E  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1914  002A70  0E08               	movlw	high STR_11
  1915  002A72  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1916  002A74  0E02               	movlw	2
  1917  002A76  EC27  F024         	call	_LCD_String_xy
  1918  002A7A                     
  1919                           ;Proj_Principal.c: 151:     LCD_String_xy(2, 11, TempInternaIdeal);
  1920  002A7A  0E0B               	movlw	11
  1921  002A7C  0100               	movlb	0	; () banked
  1922  002A7E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1923  002A80  0E58               	movlw	low _TempInternaIdeal
  1924  002A82  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1925  002A84  0E01               	movlw	high _TempInternaIdeal
  1926  002A86  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1927  002A88  0E02               	movlw	2
  1928  002A8A  EC27  F024         	call	_LCD_String_xy
  1929  002A8E                     
  1930                           ;Proj_Principal.c: 152:     LCD_String_xy(2, 13, "C");
  1931  002A8E  0E0D               	movlw	13
  1932  002A90  0100               	movlb	0	; () banked
  1933  002A92  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1934  002A94  0E52               	movlw	low STR_4
  1935  002A96  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1936  002A98  0E08               	movlw	high STR_4
  1937  002A9A  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1938  002A9C  0E02               	movlw	2
  1939  002A9E  EC27  F024         	call	_LCD_String_xy
  1940  002AA2                     
  1941                           ;Proj_Principal.c: 153:     for (int i = 0; i < 5; i++) {
  1942  002AA2  0E00               	movlw	0
  1943  002AA4  0101               	movlb	1	; () banked
  1944  002AA6  6FA3               	movwf	(escreveLCD@i_348+1)& (0+255),b
  1945  002AA8  0E00               	movlw	0
  1946  002AAA  6FA2               	movwf	escreveLCD@i_348& (0+255),b
  1947  002AAC                     l6859:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;Proj_Principal.c: 154:         MSdelay(1000);
  1951  002AAC  0E03               	movlw	3
  1952  002AAE  0100               	movlb	0	; () banked
  1953  002AB0  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  1954  002AB2  0EE8               	movlw	232
  1955  002AB4  6F60               	movwf	MSdelay@val& (0+255),b
  1956  002AB6  ECB9  F023         	call	_MSdelay	;wreg free
  1957  002ABA                     
  1958                           ;Proj_Principal.c: 155:     }
  1959  002ABA  0101               	movlb	1	; () banked
  1960  002ABC  4BA2               	infsnz	escreveLCD@i_348& (0+255),f,b
  1961  002ABE  2BA3               	incf	(escreveLCD@i_348+1)& (0+255),f,b
  1962  002AC0                     
  1963                           ; BSR set to: 1
  1964  002AC0  BFA3               	btfsc	(escreveLCD@i_348+1)& (0+255),7,b
  1965  002AC2  EF6C  F015         	goto	u9721
  1966  002AC6  51A3               	movf	(escreveLCD@i_348+1)& (0+255),w,b
  1967  002AC8  E109               	bnz	u9720
  1968  002ACA  0E05               	movlw	5
  1969  002ACC  5DA2               	subwf	escreveLCD@i_348& (0+255),w,b
  1970  002ACE  A0D8               	btfss	status,0,c
  1971  002AD0  EF6C  F015         	goto	u9721
  1972  002AD4  EF6E  F015         	goto	u9720
  1973  002AD8                     u9721:
  1974  002AD8  EF56  F015         	goto	l6859
  1975  002ADC                     u9720:
  1976  002ADC                     
  1977                           ; BSR set to: 1
  1978  002ADC  0012               	return		;funcret
  1979  002ADE                     __end_of_escreveLCD:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _sprintf *****************
  1983 ;; Defined at:
  1984 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  s               2   22[BANK1 ] PTR unsigned char 
  1987 ;;		 -> TempInternaIdeal(10), TempExteAtivacao(10), TempExterna(10), TempInterna(10), 
  1988 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
  1989 ;;		 -> STR_8(3), STR_7(3), STR_2(5), STR_1(6), 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  f               6   36[BANK1 ] struct _IO_FILE
  1992 ;;  ap              2   34[BANK1 ] PTR void [1]
  1993 ;;		 -> ?_sprintf(2), 
  1994 ;;  ret             2    0        int 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2   22[BANK1 ] int 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2004 ;;      Params:         0       0      10       0       0       0       0       0       0
  2005 ;;      Locals:         0       0      10       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2007 ;;      Totals:         0       0      20       0       0       0       0       0       0
  2008 ;;Total ram usage:       20 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:   11
  2011 ;; This function calls:
  2012 ;;		_vfprintf
  2013 ;; This function is called by:
  2014 ;;		_escreveLCD
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text4
  2019  004678                     __ptext4:
  2020                           	opt callstack 0
  2021  004678                     _sprintf:
  2022                           	opt callstack 18
  2023  004678  0E90               	movlw	low (?_sprintf+4)
  2024  00467A  0101               	movlb	1	; () banked
  2025  00467C  6F98               	movwf	sprintf@ap& (0+255),b
  2026  00467E  0E01               	movlw	high (?_sprintf+4)
  2027  004680  6F99               	movwf	(sprintf@ap+1)& (0+255),b
  2028  004682  C18C  F19A         	movff	sprintf@s,sprintf@f
  2029  004686  C18D  F19B         	movff	sprintf@s+1,sprintf@f+1
  2030  00468A                     
  2031                           ; BSR set to: 1
  2032  00468A  0E00               	movlw	0
  2033  00468C  6F9D               	movwf	(sprintf@f+3)& (0+255),b
  2034  00468E  0E00               	movlw	0
  2035  004690  6F9C               	movwf	(sprintf@f+2)& (0+255),b
  2036  004692                     
  2037                           ; BSR set to: 1
  2038  004692  0E00               	movlw	0
  2039  004694  6F9F               	movwf	(sprintf@f+5)& (0+255),b
  2040  004696  0E00               	movlw	0
  2041  004698  6F9E               	movwf	(sprintf@f+4)& (0+255),b
  2042  00469A                     
  2043                           ; BSR set to: 1
  2044  00469A  0E9A               	movlw	low sprintf@f
  2045  00469C  0100               	movlb	0	; () banked
  2046  00469E  6FF9               	movwf	vfprintf@fp& (0+255),b
  2047  0046A0  0E01               	movlw	high sprintf@f
  2048  0046A2  6FFA               	movwf	(vfprintf@fp+1)& (0+255),b
  2049  0046A4  C18E  F0FB         	movff	sprintf@fmt,vfprintf@fmt
  2050  0046A8  C18F  F0FC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2051  0046AC  0E98               	movlw	low sprintf@ap
  2052  0046AE  6FFD               	movwf	vfprintf@ap& (0+255),b
  2053  0046B0  0E01               	movlw	high sprintf@ap
  2054  0046B2  6FFE               	movwf	(vfprintf@ap+1)& (0+255),b
  2055  0046B4  ECEE  F021         	call	_vfprintf	;wreg free
  2056  0046B8  0101               	movlb	1	; () banked
  2057  0046BA  519C               	movf	(sprintf@f+2)& (0+255),w,b
  2058  0046BC  258C               	addwf	sprintf@s& (0+255),w,b
  2059  0046BE  6ED9               	movwf	fsr2l,c
  2060  0046C0  519D               	movf	(sprintf@f+3)& (0+255),w,b
  2061  0046C2  218D               	addwfc	(sprintf@s+1)& (0+255),w,b
  2062  0046C4  6EDA               	movwf	fsr2h,c
  2063  0046C6  0E00               	movlw	0
  2064  0046C8  6EDF               	movwf	indf2,c
  2065  0046CA                     
  2066                           ; BSR set to: 1
  2067  0046CA  0012               	return		;funcret
  2068  0046CC                     __end_of_sprintf:
  2069                           	opt callstack 0
  2070                           
  2071 ;; *************** function _vfprintf *****************
  2072 ;; Defined at:
  2073 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  fp              2  153[BANK0 ] PTR struct _IO_FILE
  2076 ;;		 -> sprintf@f(6), 
  2077 ;;  fmt             2  155[BANK0 ] PTR const unsigned char 
  2078 ;;		 -> STR_8(3), STR_7(3), STR_2(5), STR_1(6), 
  2079 ;;  ap              2  157[BANK0 ] PTR PTR void 
  2080 ;;		 -> sprintf@ap(2), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  cfmt            2   20[BANK1 ] PTR unsigned char 
  2083 ;;		 -> STR_8(3), STR_7(3), STR_2(5), STR_1(6), 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2  153[BANK0 ] int 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       6       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       2       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0       6       2       0       0       0       0       0       0
  2097 ;;Total ram usage:        8 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   10
  2100 ;; This function calls:
  2101 ;;		_vfpfcnvrt
  2102 ;; This function is called by:
  2103 ;;		_sprintf
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text5
  2108  0043DC                     __ptext5:
  2109                           	opt callstack 0
  2110  0043DC                     _vfprintf:
  2111                           	opt callstack 18
  2112  0043DC                     
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2114  0043DC  C0FB  F18A         	movff	vfprintf@fmt,vfprintf@cfmt
  2115  0043E0  C0FC  F18B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2116  0043E4                     
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2118  0043E4  0E00               	movlw	0
  2119  0043E6  6E2E               	movwf	(_nout+1)^0,c
  2120  0043E8  0E00               	movlw	0
  2121  0043EA  6E2D               	movwf	_nout^0,c
  2122                           
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2124  0043EC  EF0C  F022         	goto	l6613
  2125  0043F0                     l6611:
  2126                           
  2127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2128  0043F0  C0F9  F0EF         	movff	vfprintf@fp,vfpfcnvrt@fp
  2129  0043F4  C0FA  F0F0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2130  0043F8  0E8A               	movlw	low vfprintf@cfmt
  2131  0043FA  0100               	movlb	0	; () banked
  2132  0043FC  6FF1               	movwf	vfpfcnvrt@fmt& (0+255),b
  2133  0043FE  0E01               	movlw	high vfprintf@cfmt
  2134  004400  6FF2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2135  004402  C0FD  F0F3         	movff	vfprintf@ap,vfpfcnvrt@ap
  2136  004406  C0FE  F0F4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2137  00440A  EC0A  F00A         	call	_vfpfcnvrt	;wreg free
  2138  00440E  0100               	movlb	0	; () banked
  2139  004410  51EF               	movf	?_vfpfcnvrt& (0+255),w,b
  2140  004412  262D               	addwf	_nout^0,f,c
  2141  004414  51F0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2142  004416  222E               	addwfc	(_nout+1)^0,f,c
  2143  004418                     l6613:
  2144                           
  2145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2146  004418  C18A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2147  00441C  C18B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2148  004420                     	if	0	;tblptru may be non-zero
  2149  004420                     	endif
  2150  004420                     	if	0	;tblptru may be non-zero
  2151  004420                     	endif
  2152  004420  0008               	tblrd		*
  2153  004422  50F5               	movf	tablat,w,c
  2154  004424  0900               	iorlw	0
  2155  004426  A4D8               	btfss	status,2,c
  2156  004428  EF18  F022         	goto	u9391
  2157  00442C  EF1A  F022         	goto	u9390
  2158  004430                     u9391:
  2159  004430  EFF8  F021         	goto	l6611
  2160  004434                     u9390:
  2161  004434                     
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2163  004434  C02D  F0F9         	movff	_nout,?_vfprintf
  2164  004438  C02E  F0FA         	movff	_nout+1,?_vfprintf+1
  2165  00443C  0012               	return		;funcret
  2166  00443E                     __end_of_vfprintf:
  2167                           	opt callstack 0
  2168                           
  2169 ;; *************** function _vfpfcnvrt *****************
  2170 ;; Defined at:
  2171 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  fp              2  143[BANK0 ] PTR struct _IO_FILE
  2174 ;;		 -> sprintf@f(6), 
  2175 ;;  fmt             2  145[BANK0 ] PTR PTR unsigned char 
  2176 ;;		 -> vfprintf@cfmt(2), 
  2177 ;;  ap              2  147[BANK0 ] PTR PTR void 
  2178 ;;		 -> sprintf@ap(2), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  ll              8    0[BANK1 ] long long 
  2181 ;;  llu             8    0        unsigned long long 
  2182 ;;  f               4   12[BANK1 ] unsigned long long 
  2183 ;;  ct              3   16[BANK1 ] unsigned char [3]
  2184 ;;  vp              3    0        PTR void 
  2185 ;;  cp              3    0        PTR unsigned char 
  2186 ;;  i               2    0        int 
  2187 ;;  done            2    0        int 
  2188 ;;  c               1   19[BANK1 ] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2  143[BANK0 ] int 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       6       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0      20       0       0       0       0       0       0
  2200 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2201 ;;      Totals:         0      10      20       0       0       0       0       0       0
  2202 ;;Total ram usage:       30 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    9
  2205 ;; This function calls:
  2206 ;;		_atoi
  2207 ;;		_dtoa
  2208 ;;		_efgtoa
  2209 ;;		_fputc
  2210 ;;		_isdigit
  2211 ;;		_isupper
  2212 ;;		_strncmp
  2213 ;;		_tolower
  2214 ;; This function is called by:
  2215 ;;		_vfprintf
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text6
  2220  001414                     __ptext6:
  2221                           	opt callstack 0
  2222  001414                     _vfpfcnvrt:
  2223                           	opt callstack 18
  2224  001414                     
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2226  001414  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2227  001418  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2228  00141C  CFDE FFF6          	movff	postinc2,tblptrl
  2229  001420  CFDD FFF7          	movff	postdec2,tblptrh
  2230  001424                     	if	0	;tblptru may be non-zero
  2231  001424                     	endif
  2232  001424                     	if	0	;tblptru may be non-zero
  2233  001424                     	endif
  2234  001424  0008               	tblrd		*
  2235  001426  50F5               	movf	tablat,w,c
  2236  001428  0A25               	xorlw	37
  2237  00142A  A4D8               	btfss	status,2,c
  2238  00142C  EF1A  F00A         	goto	u9201
  2239  001430  EF1C  F00A         	goto	u9200
  2240  001434                     u9201:
  2241  001434  EF90  F00C         	goto	l6581
  2242  001438                     u9200:
  2243  001438                     
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2245  001438  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  00143C  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  001440  2ADE               	incf	postinc2,f,c
  2248  001442  0E00               	movlw	0
  2249  001444  22DD               	addwfc	postdec2,f,c
  2250  001446                     
  2251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2252  001446  0E00               	movlw	0
  2253  001448  6E30               	movwf	(_width+1)^0,c
  2254  00144A  0E00               	movlw	0
  2255  00144C  6E2F               	movwf	_width^0,c
  2256  00144E  C02F  F033         	movff	_width,_flags
  2257  001452  C030  F034         	movff	_width+1,_flags+1
  2258  001456                     
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2260  001456  6831               	setf	_prec^0,c
  2261  001458  6832               	setf	(_prec+1)^0,c
  2262  00145A                     
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2264  00145A  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2265  00145E  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2266  001462  CFDE FFF6          	movff	postinc2,tblptrl
  2267  001466  CFDD FFF7          	movff	postdec2,tblptrh
  2268  00146A                     	if	0	;tblptru may be non-zero
  2269  00146A                     	endif
  2270  00146A                     	if	0	;tblptru may be non-zero
  2271  00146A                     	endif
  2272  00146A  0008               	tblrd		*
  2273  00146C  50F5               	movf	tablat,w,c
  2274  00146E  0A2E               	xorlw	46
  2275  001470  A4D8               	btfss	status,2,c
  2276  001472  EF3D  F00A         	goto	u9211
  2277  001476  EF3F  F00A         	goto	u9210
  2278  00147A                     u9211:
  2279  00147A  EFBE  F00A         	goto	l6517
  2280  00147E                     u9210:
  2281  00147E                     
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2283  00147E  0E00               	movlw	0
  2284  001480  6E32               	movwf	(_prec+1)^0,c
  2285  001482  0E00               	movlw	0
  2286  001484  6E31               	movwf	_prec^0,c
  2287  001486                     
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2289  001486  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  00148A  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  00148E  2ADE               	incf	postinc2,f,c
  2292  001490  0E00               	movlw	0
  2293  001492  22DD               	addwfc	postdec2,f,c
  2294  001494                     
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2296  001494  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  001498  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  00149C  CFDE FFF6          	movff	postinc2,tblptrl
  2299  0014A0  CFDD FFF7          	movff	postdec2,tblptrh
  2300  0014A4                     	if	0	;tblptru may be non-zero
  2301  0014A4                     	endif
  2302  0014A4                     	if	0	;tblptru may be non-zero
  2303  0014A4                     	endif
  2304  0014A4  0008               	tblrd		*
  2305  0014A6  50F5               	movf	tablat,w,c
  2306  0014A8  0A2A               	xorlw	42
  2307  0014AA  A4D8               	btfss	status,2,c
  2308  0014AC  EF5A  F00A         	goto	u9221
  2309  0014B0  EF5C  F00A         	goto	u9220
  2310  0014B4                     u9221:
  2311  0014B4  EF79  F00A         	goto	l6507
  2312  0014B8                     u9220:
  2313  0014B8                     
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2315  0014B8  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  0014BC  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  0014C0  2ADE               	incf	postinc2,f,c
  2318  0014C2  0E00               	movlw	0
  2319  0014C4  22DD               	addwfc	postdec2,f,c
  2320                           
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2322  0014C6  C0F3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2323  0014CA  C0F4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2324  0014CE  CFDF F0F5          	movff	indf2,??_vfpfcnvrt
  2325  0014D2  0E02               	movlw	2
  2326  0014D4  26DE               	addwf	postinc2,f,c
  2327  0014D6  CFDF F0F6          	movff	indf2,??_vfpfcnvrt+1
  2328  0014DA  0E00               	movlw	0
  2329  0014DC  22DD               	addwfc	postdec2,f,c
  2330  0014DE  C0F5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2331  0014E2  C0F6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2332  0014E6  CFDE F031          	movff	postinc2,_prec
  2333  0014EA  CFDD F032          	movff	postdec2,_prec+1
  2334                           
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2336  0014EE  EFBE  F00A         	goto	l6517
  2337  0014F2                     l6507:
  2338                           
  2339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2340  0014F2  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  0014F6  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  0014FA  CFDE F067          	movff	postinc2,atoi@s
  2343  0014FE  CFDD F068          	movff	postdec2,atoi@s+1
  2344  001502  EC7A  F016         	call	_atoi	;wreg free
  2345  001506  C067  F031         	movff	?_atoi,_prec
  2346  00150A  C068  F032         	movff	?_atoi+1,_prec+1
  2347                           
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2349  00150E  EF90  F00A         	goto	l6511
  2350  001512                     l6509:
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2354  001512  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355  001516  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356  00151A  2ADE               	incf	postinc2,f,c
  2357  00151C  0E00               	movlw	0
  2358  00151E  22DD               	addwfc	postdec2,f,c
  2359  001520                     l6511:
  2360  001520  0ED0               	movlw	208
  2361  001522  0100               	movlb	0	; () banked
  2362  001524  6FF5               	movwf	??_vfpfcnvrt& (0+255),b
  2363  001526  0EFF               	movlw	255
  2364  001528  6FF6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2365  00152A  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  00152E  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  001532  CFDE FFF6          	movff	postinc2,tblptrl
  2368  001536  CFDD FFF7          	movff	postdec2,tblptrh
  2369  00153A                     	if	0	;tblptru may be non-zero
  2370  00153A                     	endif
  2371  00153A                     	if	0	;tblptru may be non-zero
  2372  00153A                     	endif
  2373  00153A  0008               	tblrd		*
  2374  00153C  50F5               	movf	tablat,w,c
  2375  00153E  6FF7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2376  001540  6BF8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2377  001542  51F5               	movf	??_vfpfcnvrt& (0+255),w,b
  2378  001544  27F7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2379  001546  51F6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2380  001548  23F8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2381  00154A  51F8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2382  00154C  E10A               	bnz	u9230
  2383  00154E  0E0A               	movlw	10
  2384  001550  5DF7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2385  001552  A0D8               	btfss	status,0,c
  2386  001554  EFAE  F00A         	goto	u9231
  2387  001558  EFB1  F00A         	goto	u9230
  2388  00155C                     u9231:
  2389  00155C  0E01               	movlw	1
  2390  00155E  EFB2  F00A         	goto	u9240
  2391  001562                     u9230:
  2392  001562  0E00               	movlw	0
  2393  001564                     u9240:
  2394  001564  0101               	movlb	1	; () banked
  2395  001566  6F7E               	movwf	_vfpfcnvrt$786& (0+255),b
  2396  001568  6B7F               	clrf	(_vfpfcnvrt$786+1)& (0+255),b
  2397  00156A                     
  2398                           ; BSR set to: 1
  2399  00156A  517E               	movf	_vfpfcnvrt$786& (0+255),w,b
  2400  00156C  117F               	iorwf	(_vfpfcnvrt$786+1)& (0+255),w,b
  2401  00156E  A4D8               	btfss	status,2,c
  2402  001570  EFBC  F00A         	goto	u9251
  2403  001574  EFBE  F00A         	goto	u9250
  2404  001578                     u9251:
  2405  001578  EF89  F00A         	goto	l6509
  2406  00157C                     u9250:
  2407  00157C                     l6517:
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2410  00157C  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  001580  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  001584  CFDE FFF6          	movff	postinc2,tblptrl
  2413  001588  CFDD FFF7          	movff	postdec2,tblptrh
  2414  00158C                     	if	0	;tblptru may be non-zero
  2415  00158C                     	endif
  2416  00158C                     	if	0	;tblptru may be non-zero
  2417  00158C                     	endif
  2418  00158C  0008               	tblrd		*
  2419  00158E  50F5               	movf	tablat,w,c
  2420  001590  0100               	movlb	0	; () banked
  2421  001592  6F66               	movwf	tolower@c& (0+255),b
  2422  001594  6B67               	clrf	(tolower@c+1)& (0+255),b
  2423  001596  EC1F  F022         	call	_tolower	;wreg free
  2424  00159A  0100               	movlb	0	; () banked
  2425  00159C  5166               	movf	?_tolower& (0+255),w,b
  2426  00159E  0101               	movlb	1	; () banked
  2427  0015A0  6F86               	movwf	vfpfcnvrt@ct& (0+255),b
  2428  0015A2                     
  2429                           ; BSR set to: 1
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2431  0015A2  5186               	movf	vfpfcnvrt@ct& (0+255),w,b
  2432  0015A4  B4D8               	btfsc	status,2,c
  2433  0015A6  EFD7  F00A         	goto	u9261
  2434  0015AA  EFD9  F00A         	goto	u9260
  2435  0015AE                     u9261:
  2436  0015AE  EF17  F00B         	goto	l6527
  2437  0015B2                     u9260:
  2438  0015B2                     
  2439                           ; BSR set to: 1
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2441  0015B2  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442  0015B6  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443  0015BA  CFDE F0F5          	movff	postinc2,??_vfpfcnvrt
  2444  0015BE  CFDD F0F6          	movff	postdec2,??_vfpfcnvrt+1
  2445  0015C2  0E01               	movlw	1
  2446  0015C4  0100               	movlb	0	; () banked
  2447  0015C6  27F5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2448  0015C8  0E00               	movlw	0
  2449  0015CA  23F6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2450  0015CC  C0F5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2451  0015D0  C0F6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2452  0015D4                     	if	0	;tblptru may be non-zero
  2453  0015D4                     	endif
  2454  0015D4                     	if	0	;tblptru may be non-zero
  2455  0015D4                     	endif
  2456  0015D4  0008               	tblrd		*
  2457  0015D6  50F5               	movf	tablat,w,c
  2458  0015D8  6F66               	movwf	tolower@c& (0+255),b
  2459  0015DA  6B67               	clrf	(tolower@c+1)& (0+255),b
  2460  0015DC  EC1F  F022         	call	_tolower	;wreg free
  2461  0015E0  0100               	movlb	0	; () banked
  2462  0015E2  5166               	movf	?_tolower& (0+255),w,b
  2463  0015E4  0101               	movlb	1	; () banked
  2464  0015E6  6F87               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2465  0015E8                     
  2466                           ; BSR set to: 1
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2468  0015E8  5187               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2469  0015EA  B4D8               	btfsc	status,2,c
  2470  0015EC  EFFA  F00A         	goto	u9271
  2471  0015F0  EFFC  F00A         	goto	u9270
  2472  0015F4                     u9271:
  2473  0015F4  EF17  F00B         	goto	l6527
  2474  0015F8                     u9270:
  2475  0015F8                     
  2476                           ; BSR set to: 1
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2478  0015F8  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2479  0015FC  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2480  001600  CFDE F0F5          	movff	postinc2,??_vfpfcnvrt
  2481  001604  CFDD F0F6          	movff	postdec2,??_vfpfcnvrt+1
  2482  001608  0E02               	movlw	2
  2483  00160A  0100               	movlb	0	; () banked
  2484  00160C  27F5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2485  00160E  0E00               	movlw	0
  2486  001610  23F6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2487  001612  C0F5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2488  001616  C0F6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2489  00161A                     	if	0	;tblptru may be non-zero
  2490  00161A                     	endif
  2491  00161A                     	if	0	;tblptru may be non-zero
  2492  00161A                     	endif
  2493  00161A  0008               	tblrd		*
  2494  00161C  50F5               	movf	tablat,w,c
  2495  00161E  6F66               	movwf	tolower@c& (0+255),b
  2496  001620  6B67               	clrf	(tolower@c+1)& (0+255),b
  2497  001622  EC1F  F022         	call	_tolower	;wreg free
  2498  001626  0100               	movlb	0	; () banked
  2499  001628  5166               	movf	?_tolower& (0+255),w,b
  2500  00162A  0101               	movlb	1	; () banked
  2501  00162C  6F88               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2502  00162E                     l6527:
  2503                           
  2504                           ; BSR set to: 1
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2506  00162E  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2507  001632  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2508  001636  CFDE FFF6          	movff	postinc2,tblptrl
  2509  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  2510  00163E                     	if	0	;tblptru may be non-zero
  2511  00163E                     	endif
  2512  00163E                     	if	0	;tblptru may be non-zero
  2513  00163E                     	endif
  2514  00163E  0008               	tblrd		*
  2515  001640  50F5               	movf	tablat,w,c
  2516  001642  0A64               	xorlw	100
  2517  001644  B4D8               	btfsc	status,2,c
  2518  001646  EF27  F00B         	goto	u9281
  2519  00164A  EF29  F00B         	goto	u9280
  2520  00164E                     u9281:
  2521  00164E  EF3B  F00B         	goto	l6531
  2522  001652                     u9280:
  2523  001652                     
  2524                           ; BSR set to: 1
  2525  001652  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526  001656  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527  00165A  CFDE FFF6          	movff	postinc2,tblptrl
  2528  00165E  CFDD FFF7          	movff	postdec2,tblptrh
  2529  001662                     	if	0	;tblptru may be non-zero
  2530  001662                     	endif
  2531  001662                     	if	0	;tblptru may be non-zero
  2532  001662                     	endif
  2533  001662  0008               	tblrd		*
  2534  001664  50F5               	movf	tablat,w,c
  2535  001666  0A69               	xorlw	105
  2536  001668  A4D8               	btfss	status,2,c
  2537  00166A  EF39  F00B         	goto	u9291
  2538  00166E  EF3B  F00B         	goto	u9290
  2539  001672                     u9291:
  2540  001672  EF7B  F00B         	goto	l6537
  2541  001676                     u9290:
  2542  001676                     l6531:
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2546  001676  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2547  00167A  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2548  00167E  2ADE               	incf	postinc2,f,c
  2549  001680  0E00               	movlw	0
  2550  001682  22DD               	addwfc	postdec2,f,c
  2551                           
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2553  001684  C0F3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2554  001688  C0F4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2555  00168C  CFDF F0F5          	movff	indf2,??_vfpfcnvrt
  2556  001690  0E02               	movlw	2
  2557  001692  26DE               	addwf	postinc2,f,c
  2558  001694  CFDF F0F6          	movff	indf2,??_vfpfcnvrt+1
  2559  001698  0E00               	movlw	0
  2560  00169A  22DD               	addwfc	postdec2,f,c
  2561  00169C  C0F5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2562  0016A0  C0F6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2563  0016A4  CFDE F176          	movff	postinc2,vfpfcnvrt@ll
  2564  0016A8  CFDD F177          	movff	postdec2,vfpfcnvrt@ll+1
  2565  0016AC  0E00               	movlw	0
  2566  0016AE  BF77               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2567  0016B0  0EFF               	movlw	-1
  2568  0016B2  6F78               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2569  0016B4  6F79               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2570  0016B6  6F7A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2571  0016B8  6F7B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2572  0016BA  6F7C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2573  0016BC  6F7D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2574  0016BE                     
  2575                           ; BSR set to: 1
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2577  0016BE  C0EF  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  2578  0016C2  C0F0  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2579  0016C6  C176  F07D         	movff	vfpfcnvrt@ll,dtoa@d
  2580  0016CA  C177  F07E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2581  0016CE  C178  F07F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2582  0016D2  C179  F080         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2583  0016D6  C17A  F081         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2584  0016DA  C17B  F082         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2585  0016DE  C17C  F083         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2586  0016E2  C17D  F084         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2587  0016E6  ECF2  F012         	call	_dtoa	;wreg free
  2588  0016EA  C07B  F0EF         	movff	?_dtoa,?_vfpfcnvrt
  2589  0016EE  C07C  F0F0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2590  0016F2  EFAC  F00C         	goto	l498
  2591  0016F6                     l6537:
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2595  0016F6  0E66               	movlw	102
  2596  0016F8  1986               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2597  0016FA  A4D8               	btfss	status,2,c
  2598  0016FC  EF82  F00B         	goto	u9301
  2599  001700  EF84  F00B         	goto	u9300
  2600  001704                     u9301:
  2601  001704  EFC4  F00B         	goto	l6549
  2602  001708                     u9300:
  2603  001708                     
  2604                           ; BSR set to: 1
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2606  001708  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2607  00170C  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2608  001710  CFDE FFF6          	movff	postinc2,tblptrl
  2609  001714  CFDD FFF7          	movff	postdec2,tblptrh
  2610  001718                     	if	0	;tblptru may be non-zero
  2611  001718                     	endif
  2612  001718                     	if	0	;tblptru may be non-zero
  2613  001718                     	endif
  2614  001718  0008               	tblrd		*
  2615  00171A  CFF5 F189          	movff	tablat,vfpfcnvrt@c
  2616  00171E                     
  2617                           ; BSR set to: 1
  2618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2619  00171E  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2620  001722  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2621  001726  2ADE               	incf	postinc2,f,c
  2622  001728  0E00               	movlw	0
  2623  00172A  22DD               	addwfc	postdec2,f,c
  2624  00172C                     
  2625                           ; BSR set to: 1
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2627  00172C  C0F3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2628  001730  C0F4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2629  001734  CFDF F0F5          	movff	indf2,??_vfpfcnvrt
  2630  001738  0E04               	movlw	4
  2631  00173A  26DE               	addwf	postinc2,f,c
  2632  00173C  CFDF F0F6          	movff	indf2,??_vfpfcnvrt+1
  2633  001740  0E00               	movlw	0
  2634  001742  22DD               	addwfc	postdec2,f,c
  2635  001744  C0F5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2636  001748  C0F6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2637  00174C  CFDE F182          	movff	postinc2,vfpfcnvrt@f
  2638  001750  CFDE F183          	movff	postinc2,vfpfcnvrt@f+1
  2639  001754  CFDE F184          	movff	postinc2,vfpfcnvrt@f+2
  2640  001758  CFDE F185          	movff	postinc2,vfpfcnvrt@f+3
  2641  00175C                     l6545:
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2645  00175C  C0EF  F0AB         	movff	vfpfcnvrt@fp,efgtoa@fp
  2646  001760  C0F0  F0AC         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2647  001764  C182  F0AD         	movff	vfpfcnvrt@f,efgtoa@f
  2648  001768  C183  F0AE         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2649  00176C  C184  F0AF         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2650  001770  C185  F0B0         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2651  001774  C189  F0B1         	movff	vfpfcnvrt@c,efgtoa@c
  2652  001778  EC2B  F004         	call	_efgtoa	;wreg free
  2653  00177C  C0AB  F0EF         	movff	?_efgtoa,?_vfpfcnvrt
  2654  001780  C0AC  F0F0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2655  001784  EFAC  F00C         	goto	l498
  2656  001788                     l6549:
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2660  001788  0E86               	movlw	low vfpfcnvrt@ct
  2661  00178A  0100               	movlb	0	; () banked
  2662  00178C  6F60               	movwf	strncmp@_l& (0+255),b
  2663  00178E  0E01               	movlw	high vfpfcnvrt@ct
  2664  001790  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2665  001792  0E4C               	movlw	low STR_21
  2666  001794  6F62               	movwf	strncmp@_r& (0+255),b
  2667  001796  0E08               	movlw	high STR_21
  2668  001798  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2669  00179A  0E00               	movlw	0
  2670  00179C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2671  00179E  0E02               	movlw	2
  2672  0017A0  6F64               	movwf	strncmp@n& (0+255),b
  2673  0017A2  ECF6  F01D         	call	_strncmp	;wreg free
  2674  0017A6  0100               	movlb	0	; () banked
  2675  0017A8  5160               	movf	?_strncmp& (0+255),w,b
  2676  0017AA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2677  0017AC  A4D8               	btfss	status,2,c
  2678  0017AE  EFDB  F00B         	goto	u9311
  2679  0017B2  EFDD  F00B         	goto	u9310
  2680  0017B6                     u9311:
  2681  0017B6  EF59  F00C         	goto	l6565
  2682  0017BA                     u9310:
  2683  0017BA                     
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2686  0017BA  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2687  0017BE  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2688  0017C2  CFDE F0F5          	movff	postinc2,??_vfpfcnvrt
  2689  0017C6  CFDD F0F6          	movff	postdec2,??_vfpfcnvrt+1
  2690  0017CA  0E01               	movlw	1
  2691  0017CC  27F5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2692  0017CE  0E00               	movlw	0
  2693  0017D0  23F6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2694  0017D2  C0F5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2695  0017D6  C0F6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2696  0017DA                     	if	0	;tblptru may be non-zero
  2697  0017DA                     	endif
  2698  0017DA                     	if	0	;tblptru may be non-zero
  2699  0017DA                     	endif
  2700  0017DA  0008               	tblrd		*
  2701  0017DC  CFF5 F189          	movff	tablat,vfpfcnvrt@c
  2702  0017E0  0EBF               	movlw	191
  2703  0017E2  6FF5               	movwf	??_vfpfcnvrt& (0+255),b
  2704  0017E4  0EFF               	movlw	255
  2705  0017E6  6FF6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2706  0017E8  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2707  0017EC  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  0017F0  CFDE FFF6          	movff	postinc2,tblptrl
  2709  0017F4  CFDD FFF7          	movff	postdec2,tblptrh
  2710  0017F8                     	if	0	;tblptru may be non-zero
  2711  0017F8                     	endif
  2712  0017F8                     	if	0	;tblptru may be non-zero
  2713  0017F8                     	endif
  2714  0017F8  0008               	tblrd		*
  2715  0017FA  50F5               	movf	tablat,w,c
  2716  0017FC  6FF7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2717  0017FE  6BF8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2718  001800  51F5               	movf	??_vfpfcnvrt& (0+255),w,b
  2719  001802  27F7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2720  001804  51F6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2721  001806  23F8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2722  001808  51F8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2723  00180A  E10A               	bnz	u9320
  2724  00180C  0E1A               	movlw	26
  2725  00180E  5DF7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2726  001810  A0D8               	btfss	status,0,c
  2727  001812  EF0D  F00C         	goto	u9321
  2728  001816  EF10  F00C         	goto	u9320
  2729  00181A                     u9321:
  2730  00181A  0E01               	movlw	1
  2731  00181C  EF11  F00C         	goto	u9330
  2732  001820                     u9320:
  2733  001820  0E00               	movlw	0
  2734  001822                     u9330:
  2735  001822  0101               	movlb	1	; () banked
  2736  001824  6F80               	movwf	_vfpfcnvrt$791& (0+255),b
  2737  001826  6B81               	clrf	(_vfpfcnvrt$791+1)& (0+255),b
  2738  001828                     
  2739                           ; BSR set to: 1
  2740  001828  5180               	movf	_vfpfcnvrt$791& (0+255),w,b
  2741  00182A  1181               	iorwf	(_vfpfcnvrt$791+1)& (0+255),w,b
  2742  00182C  B4D8               	btfsc	status,2,c
  2743  00182E  EF1B  F00C         	goto	u9341
  2744  001832  EF1D  F00C         	goto	u9340
  2745  001836                     u9341:
  2746  001836  EF37  F00C         	goto	l6559
  2747  00183A                     u9340:
  2748  00183A                     
  2749                           ; BSR set to: 1
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2751  00183A  C0F3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2752  00183E  C0F4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2753  001842  CFDF F0F5          	movff	indf2,??_vfpfcnvrt
  2754  001846  0E04               	movlw	4
  2755  001848  26DE               	addwf	postinc2,f,c
  2756  00184A  CFDF F0F6          	movff	indf2,??_vfpfcnvrt+1
  2757  00184E  0E00               	movlw	0
  2758  001850  22DD               	addwfc	postdec2,f,c
  2759  001852  C0F5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2760  001856  C0F6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2761  00185A  CFDE F182          	movff	postinc2,vfpfcnvrt@f
  2762  00185E  CFDE F183          	movff	postinc2,vfpfcnvrt@f+1
  2763  001862  CFDE F184          	movff	postinc2,vfpfcnvrt@f+2
  2764  001866  CFDE F185          	movff	postinc2,vfpfcnvrt@f+3
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2767  00186A  EF4F  F00C         	goto	l506
  2768  00186E                     l6559:
  2769                           
  2770                           ; BSR set to: 1
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2772  00186E  C0F3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2773  001872  C0F4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2774  001876  CFDF F0F5          	movff	indf2,??_vfpfcnvrt
  2775  00187A  0E04               	movlw	4
  2776  00187C  26DE               	addwf	postinc2,f,c
  2777  00187E  CFDF F0F6          	movff	indf2,??_vfpfcnvrt+1
  2778  001882  0E00               	movlw	0
  2779  001884  22DD               	addwfc	postdec2,f,c
  2780  001886  C0F5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2781  00188A  C0F6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2782  00188E  CFDE F182          	movff	postinc2,vfpfcnvrt@f
  2783  001892  CFDE F183          	movff	postinc2,vfpfcnvrt@f+1
  2784  001896  CFDE F184          	movff	postinc2,vfpfcnvrt@f+2
  2785  00189A  CFDE F185          	movff	postinc2,vfpfcnvrt@f+3
  2786  00189E                     l506:
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2790  00189E  0E02               	movlw	2
  2791  0018A0  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2792  0018A4  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2793  0018A8  26DE               	addwf	postinc2,f,c
  2794  0018AA  0E00               	movlw	0
  2795  0018AC  22DD               	addwfc	postdec2,f,c
  2796  0018AE  EFAE  F00B         	goto	l6545
  2797  0018B2                     l6565:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2801  0018B2  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2802  0018B6  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2803  0018BA  CFDE FFF6          	movff	postinc2,tblptrl
  2804  0018BE  CFDD FFF7          	movff	postdec2,tblptrh
  2805  0018C2                     	if	0	;tblptru may be non-zero
  2806  0018C2                     	endif
  2807  0018C2                     	if	0	;tblptru may be non-zero
  2808  0018C2                     	endif
  2809  0018C2  0008               	tblrd		*
  2810  0018C4  50F5               	movf	tablat,w,c
  2811  0018C6  0A25               	xorlw	37
  2812  0018C8  A4D8               	btfss	status,2,c
  2813  0018CA  EF69  F00C         	goto	u9351
  2814  0018CE  EF6B  F00C         	goto	u9350
  2815  0018D2                     u9351:
  2816  0018D2  EF83  F00C         	goto	l6575
  2817  0018D6                     u9350:
  2818  0018D6                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2821  0018D6  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2822  0018DA  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2823  0018DE  2ADE               	incf	postinc2,f,c
  2824  0018E0  0E00               	movlw	0
  2825  0018E2  22DD               	addwfc	postdec2,f,c
  2826  0018E4                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2829  0018E4  0E00               	movlw	0
  2830  0018E6  6F61               	movwf	(fputc@c+1)& (0+255),b
  2831  0018E8  0E25               	movlw	37
  2832  0018EA  6F60               	movwf	fputc@c& (0+255),b
  2833  0018EC  C0EF  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2834  0018F0  C0F0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2835  0018F4  EC62  F01E         	call	_fputc	;wreg free
  2836  0018F8                     l6571:
  2837                           
  2838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2839  0018F8  0E00               	movlw	0
  2840  0018FA  0100               	movlb	0	; () banked
  2841  0018FC  6FF0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2842  0018FE  0E01               	movlw	1
  2843  001900  6FEF               	movwf	?_vfpfcnvrt& (0+255),b
  2844  001902  EFAC  F00C         	goto	l498
  2845  001906                     l6575:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2849  001906  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  00190A  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  00190E  2ADE               	incf	postinc2,f,c
  2852  001910  0E00               	movlw	0
  2853  001912  22DD               	addwfc	postdec2,f,c
  2854  001914                     
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2857  001914  0E00               	movlw	0
  2858  001916  6FF0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2859  001918  0E00               	movlw	0
  2860  00191A  6FEF               	movwf	?_vfpfcnvrt& (0+255),b
  2861  00191C  EFAC  F00C         	goto	l498
  2862  001920                     l6581:
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2865  001920  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866  001924  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867  001928  CFDE FFF6          	movff	postinc2,tblptrl
  2868  00192C  CFDD FFF7          	movff	postdec2,tblptrh
  2869  001930                     	if	0	;tblptru may be non-zero
  2870  001930                     	endif
  2871  001930                     	if	0	;tblptru may be non-zero
  2872  001930                     	endif
  2873  001930  0008               	tblrd		*
  2874  001932  50F5               	movf	tablat,w,c
  2875  001934  0100               	movlb	0	; () banked
  2876  001936  6F60               	movwf	fputc@c& (0+255),b
  2877  001938  6B61               	clrf	(fputc@c+1)& (0+255),b
  2878  00193A  C0EF  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2879  00193E  C0F0  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2880  001942  EC62  F01E         	call	_fputc	;wreg free
  2881  001946                     
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2883  001946  C0F1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2884  00194A  C0F2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2885  00194E  2ADE               	incf	postinc2,f,c
  2886  001950  0E00               	movlw	0
  2887  001952  22DD               	addwfc	postdec2,f,c
  2888  001954  EF7C  F00C         	goto	l6571
  2889  001958                     l498:
  2890  001958  0012               	return		;funcret
  2891  00195A                     __end_of_vfpfcnvrt:
  2892                           	opt callstack 0
  2893                           
  2894 ;; *************** function _strncmp *****************
  2895 ;; Defined at:
  2896 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2899 ;;		 -> vfpfcnvrt@ct(3), 
  2900 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2901 ;;		 -> STR_23(3), 
  2902 ;;  n               2    4[BANK0 ] unsigned int 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2905 ;;		 -> STR_23(3), 
  2906 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2907 ;;		 -> vfpfcnvrt@ct(3), 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    0[BANK0 ] int 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         0       6       0       0       0       0       0       0       0
  2918 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2919 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2920 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2921 ;;Total ram usage:       11 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    4
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_vfpfcnvrt
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text7
  2932  003BEC                     __ptext7:
  2933                           	opt callstack 0
  2934  003BEC                     _strncmp:
  2935                           	opt callstack 22
  2936  003BEC  C060  F067         	movff	strncmp@_l,strncmp@l
  2937  003BF0  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  2938  003BF4  C062  F069         	movff	strncmp@_r,strncmp@r
  2939  003BF8  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  2940  003BFC  0100               	movlb	0	; () banked
  2941  003BFE  0764               	decf	strncmp@n& (0+255),f,b
  2942  003C00  A0D8               	btfss	status,0,c
  2943  003C02  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2944  003C04  2964               	incf	strncmp@n& (0+255),w,b
  2945  003C06  E106               	bnz	u9151
  2946  003C08  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2947  003C0A  A4D8               	btfss	status,2,c
  2948  003C0C  EF0A  F01E         	goto	u9151
  2949  003C10  EF0C  F01E         	goto	u9150
  2950  003C14                     u9151:
  2951  003C14  EF19  F01E         	goto	l6467
  2952  003C18                     u9150:
  2953  003C18                     
  2954                           ; BSR set to: 0
  2955  003C18  0E00               	movlw	0
  2956  003C1A  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2957  003C1C  0E00               	movlw	0
  2958  003C1E  6F60               	movwf	?_strncmp& (0+255),b
  2959  003C20  EF61  F01E         	goto	l1315
  2960  003C24                     l6465:
  2961                           
  2962                           ; BSR set to: 0
  2963  003C24  4B67               	infsnz	strncmp@l& (0+255),f,b
  2964  003C26  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2965  003C28  4B69               	infsnz	strncmp@r& (0+255),f,b
  2966  003C2A  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2967  003C2C  0764               	decf	strncmp@n& (0+255),f,b
  2968  003C2E  A0D8               	btfss	status,0,c
  2969  003C30  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2970  003C32                     l6467:
  2971                           
  2972                           ; BSR set to: 0
  2973  003C32  C067  FFD9         	movff	strncmp@l,fsr2l
  2974  003C36  C068  FFDA         	movff	strncmp@l+1,fsr2h
  2975  003C3A  50DF               	movf	indf2,w,c
  2976  003C3C  B4D8               	btfsc	status,2,c
  2977  003C3E  EF23  F01E         	goto	u9161
  2978  003C42  EF25  F01E         	goto	u9160
  2979  003C46                     u9161:
  2980  003C46  EF50  F01E         	goto	l6475
  2981  003C4A                     u9160:
  2982  003C4A                     
  2983                           ; BSR set to: 0
  2984  003C4A  C069  FFF6         	movff	strncmp@r,tblptrl
  2985  003C4E  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  2986  003C52                     	if	0	;tblptru may be non-zero
  2987  003C52                     	endif
  2988  003C52                     	if	0	;tblptru may be non-zero
  2989  003C52                     	endif
  2990  003C52  0008               	tblrd		*
  2991  003C54  50F5               	movf	tablat,w,c
  2992  003C56  0900               	iorlw	0
  2993  003C58  B4D8               	btfsc	status,2,c
  2994  003C5A  EF31  F01E         	goto	u9171
  2995  003C5E  EF33  F01E         	goto	u9170
  2996  003C62                     u9171:
  2997  003C62  EF50  F01E         	goto	l6475
  2998  003C66                     u9170:
  2999  003C66                     
  3000                           ; BSR set to: 0
  3001  003C66  5164               	movf	strncmp@n& (0+255),w,b
  3002  003C68  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3003  003C6A  B4D8               	btfsc	status,2,c
  3004  003C6C  EF3A  F01E         	goto	u9181
  3005  003C70  EF3C  F01E         	goto	u9180
  3006  003C74                     u9181:
  3007  003C74  EF50  F01E         	goto	l6475
  3008  003C78                     u9180:
  3009  003C78                     
  3010                           ; BSR set to: 0
  3011  003C78  C067  FFD9         	movff	strncmp@l,fsr2l
  3012  003C7C  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3013  003C80  50DF               	movf	indf2,w,c
  3014  003C82  6F66               	movwf	??_strncmp& (0+255),b
  3015  003C84  C069  FFF6         	movff	strncmp@r,tblptrl
  3016  003C88  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3017  003C8C                     	if	0	;tblptru may be non-zero
  3018  003C8C                     	endif
  3019  003C8C                     	if	0	;tblptru may be non-zero
  3020  003C8C                     	endif
  3021  003C8C  0008               	tblrd		*
  3022  003C8E  50F5               	movf	tablat,w,c
  3023  003C90  1966               	xorwf	??_strncmp& (0+255),w,b
  3024  003C92  B4D8               	btfsc	status,2,c
  3025  003C94  EF4E  F01E         	goto	u9191
  3026  003C98  EF50  F01E         	goto	u9190
  3027  003C9C                     u9191:
  3028  003C9C  EF12  F01E         	goto	l6465
  3029  003CA0                     u9190:
  3030  003CA0                     l6475:
  3031                           
  3032                           ; BSR set to: 0
  3033  003CA0  C067  FFD9         	movff	strncmp@l,fsr2l
  3034  003CA4  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3035  003CA8  50DF               	movf	indf2,w,c
  3036  003CAA  6F66               	movwf	??_strncmp& (0+255),b
  3037  003CAC  C069  FFF6         	movff	strncmp@r,tblptrl
  3038  003CB0  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3039  003CB4                     	if	0	;tblptru may be non-zero
  3040  003CB4                     	endif
  3041  003CB4                     	if	0	;tblptru may be non-zero
  3042  003CB4                     	endif
  3043  003CB4  0008               	tblrd		*
  3044  003CB6  50F5               	movf	tablat,w,c
  3045  003CB8  5D66               	subwf	??_strncmp& (0+255),w,b
  3046  003CBA  6F60               	movwf	?_strncmp& (0+255),b
  3047  003CBC  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3048  003CBE  A0D8               	btfss	status,0,c
  3049  003CC0  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3050  003CC2                     l1315:
  3051                           
  3052                           ; BSR set to: 0
  3053  003CC2  0012               	return		;funcret
  3054  003CC4                     __end_of_strncmp:
  3055                           	opt callstack 0
  3056                           
  3057 ;; *************** function _efgtoa *****************
  3058 ;; Defined at:
  3059 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  fp              2   75[BANK0 ] PTR struct _IO_FILE
  3062 ;;		 -> sprintf@f(6), 
  3063 ;;  f               4   77[BANK0 ] PTR struct _IO_FILE
  3064 ;;  c               1   81[BANK0 ] unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  u               4  139[BANK0 ] unsigned char 
  3067 ;;  g               4  131[BANK0 ] unsigned char 
  3068 ;;  l               4  125[BANK0 ] unsigned char 
  3069 ;;  h               4  121[BANK0 ] unsigned char 
  3070 ;;  ou              4   87[BANK0 ] unsigned char 
  3071 ;;  n               2  137[BANK0 ] int 
  3072 ;;  e               2  135[BANK0 ] int 
  3073 ;;  i               2  129[BANK0 ] int 
  3074 ;;  w               2  118[BANK0 ] int 
  3075 ;;  p               2  115[BANK0 ] int 
  3076 ;;  sign            2  113[BANK0 ] int 
  3077 ;;  d               2  111[BANK0 ] int 
  3078 ;;  ne              2  109[BANK0 ] int 
  3079 ;;  m               2  107[BANK0 ] int 
  3080 ;;  pp              2  105[BANK0 ] int 
  3081 ;;  t               2  103[BANK0 ] int 
  3082 ;;  mode            1  120[BANK0 ] unsigned char 
  3083 ;;  nmode           1  117[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2   75[BANK0 ] int 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3093 ;;      Params:         0       7       0       0       0       0       0       0       0
  3094 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3096 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3097 ;;Total ram usage:       68 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    8
  3100 ;; This function calls:
  3101 ;;		___awdiv
  3102 ;;		___awmod
  3103 ;;		___fladd
  3104 ;;		___fldiv
  3105 ;;		___fleq
  3106 ;;		___flge
  3107 ;;		___flmul
  3108 ;;		___flneg
  3109 ;;		___flsub
  3110 ;;		___fltol
  3111 ;;		___fpclassifyf
  3112 ;;		_floorf
  3113 ;;		_isupper
  3114 ;;		_pad
  3115 ;;		_strcpy
  3116 ;;		_tolower
  3117 ;; This function is called by:
  3118 ;;		_vfpfcnvrt
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text8
  3123  000856                     __ptext8:
  3124                           	opt callstack 0
  3125  000856                     _efgtoa:
  3126                           	opt callstack 18
  3127  000856                     
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3129  000856  0E00               	movlw	0
  3130  000858  0100               	movlb	0	; () banked
  3131  00085A  6FD2               	movwf	(efgtoa@sign+1)& (0+255),b
  3132  00085C  0E00               	movlw	0
  3133  00085E  6FD1               	movwf	efgtoa@sign& (0+255),b
  3134  000860                     
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3137  000860  C0AD  F0E3         	movff	efgtoa@f,efgtoa@g
  3138  000864  C0AE  F0E4         	movff	efgtoa@f+1,efgtoa@g+1
  3139  000868  C0AF  F0E5         	movff	efgtoa@f+2,efgtoa@g+2
  3140  00086C  C0B0  F0E6         	movff	efgtoa@f+3,efgtoa@g+3
  3141  000870                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3144  000870  BFE6               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3145  000872  EF3F  F004         	goto	u8630
  3146  000876  EF3D  F004         	goto	u8631
  3147  00087A                     u8631:
  3148  00087A  EF55  F004         	goto	l6171
  3149  00087E                     u8630:
  3150  00087E                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3153  00087E  0E00               	movlw	0
  3154  000880  6FD2               	movwf	(efgtoa@sign+1)& (0+255),b
  3155  000882  0E01               	movlw	1
  3156  000884  6FD1               	movwf	efgtoa@sign& (0+255),b
  3157  000886                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3160  000886  C0E3  F060         	movff	efgtoa@g,___flneg@f1
  3161  00088A  C0E4  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3162  00088E  C0E5  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3163  000892  C0E6  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3164  000896  ECC5  F024         	call	___flneg	;wreg free
  3165  00089A  C060  F0E3         	movff	?___flneg,efgtoa@g
  3166  00089E  C061  F0E4         	movff	?___flneg+1,efgtoa@g+1
  3167  0008A2  C062  F0E5         	movff	?___flneg+2,efgtoa@g+2
  3168  0008A6  C063  F0E6         	movff	?___flneg+3,efgtoa@g+3
  3169  0008AA                     l6171:
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3172  0008AA  0E00               	movlw	0
  3173  0008AC  0100               	movlb	0	; () banked
  3174  0008AE  6FEA               	movwf	(efgtoa@n+1)& (0+255),b
  3175  0008B0  0E00               	movlw	0
  3176  0008B2  6FE9               	movwf	efgtoa@n& (0+255),b
  3177  0008B4                     
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3180  0008B4  C02F  F0D6         	movff	_width,efgtoa@w
  3181  0008B8  C030  F0D7         	movff	_width+1,efgtoa@w+1
  3182  0008BC                     
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3185  0008BC  51D1               	movf	efgtoa@sign& (0+255),w,b
  3186  0008BE  11D2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3187  0008C0  A4D8               	btfss	status,2,c
  3188  0008C2  EF65  F004         	goto	u8641
  3189  0008C6  EF67  F004         	goto	u8640
  3190  0008CA                     u8641:
  3191  0008CA  EF6E  F004         	goto	l6179
  3192  0008CE                     u8640:
  3193  0008CE                     
  3194                           ; BSR set to: 0
  3195  0008CE  A433               	btfss	_flags^0,2,c
  3196  0008D0  EF6C  F004         	goto	u8651
  3197  0008D4  EF6E  F004         	goto	u8650
  3198  0008D8                     u8651:
  3199  0008D8  EF88  F004         	goto	l6191
  3200  0008DC                     u8650:
  3201  0008DC                     l6179:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3205  0008DC  51D1               	movf	efgtoa@sign& (0+255),w,b
  3206  0008DE  11D2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3207  0008E0  A4D8               	btfss	status,2,c
  3208  0008E2  EF75  F004         	goto	u8661
  3209  0008E6  EF77  F004         	goto	u8660
  3210  0008EA                     u8661:
  3211  0008EA  EF7D  F004         	goto	l6183
  3212  0008EE                     u8660:
  3213  0008EE                     
  3214                           ; BSR set to: 0
  3215  0008EE  0E00               	movlw	0
  3216  0008F0  6FBC               	movwf	(_efgtoa$761+1)& (0+255),b
  3217  0008F2  0E2B               	movlw	43
  3218  0008F4  6FBB               	movwf	_efgtoa$761& (0+255),b
  3219  0008F6  EF81  F004         	goto	l6185
  3220  0008FA                     l6183:
  3221                           
  3222                           ; BSR set to: 0
  3223  0008FA  0E00               	movlw	0
  3224  0008FC  6FBC               	movwf	(_efgtoa$761+1)& (0+255),b
  3225  0008FE  0E2D               	movlw	45
  3226  000900  6FBB               	movwf	_efgtoa$761& (0+255),b
  3227  000902                     l6185:
  3228                           
  3229                           ; BSR set to: 0
  3230  000902  C0BB  F108         	movff	_efgtoa$761,_dbuf
  3231  000906                     
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3234  000906  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  3235  000908  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  3236  00090A                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3239  00090A  07D6               	decf	efgtoa@w& (0+255),f,b
  3240  00090C  A0D8               	btfss	status,0,c
  3241  00090E  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  3242  000910                     l6191:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3246  000910  C0E3  F060         	movff	efgtoa@g,___fpclassifyf@x
  3247  000914  C0E4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3248  000918  C0E5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3249  00091C  C0E6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3250  000920  ECF9  F01C         	call	___fpclassifyf	;wreg free
  3251  000924  0100               	movlb	0	; () banked
  3252  000926  0560               	decf	?___fpclassifyf& (0+255),w,b
  3253  000928  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3254  00092A  A4D8               	btfss	status,2,c
  3255  00092C  EF9A  F004         	goto	u8671
  3256  000930  EF9C  F004         	goto	u8670
  3257  000934                     u8671:
  3258  000934  EFF3  F004         	goto	l6209
  3259  000938                     u8670:
  3260  000938                     
  3261                           ; BSR set to: 0
  3262  000938  0EBF               	movlw	191
  3263  00093A  6FB2               	movwf	??_efgtoa& (0+255),b
  3264  00093C  0EFF               	movlw	255
  3265  00093E  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3266  000940  51B1               	movf	efgtoa@c& (0+255),w,b
  3267  000942  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  3268  000944  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  3269  000946  51B2               	movf	??_efgtoa& (0+255),w,b
  3270  000948  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3271  00094A  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3272  00094C  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3273  00094E  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3274  000950  E10A               	bnz	u8680
  3275  000952  0E1A               	movlw	26
  3276  000954  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3277  000956  A0D8               	btfss	status,0,c
  3278  000958  EFB0  F004         	goto	u8681
  3279  00095C  EFB3  F004         	goto	u8680
  3280  000960                     u8681:
  3281  000960  0E01               	movlw	1
  3282  000962  EFB4  F004         	goto	u8690
  3283  000966                     u8680:
  3284  000966  0E00               	movlw	0
  3285  000968                     u8690:
  3286  000968  6FBD               	movwf	_efgtoa$762& (0+255),b
  3287  00096A  6BBE               	clrf	(_efgtoa$762+1)& (0+255),b
  3288  00096C                     
  3289                           ; BSR set to: 0
  3290  00096C  51BD               	movf	_efgtoa$762& (0+255),w,b
  3291  00096E  11BE               	iorwf	(_efgtoa$762+1)& (0+255),w,b
  3292  000970  B4D8               	btfsc	status,2,c
  3293  000972  EFBD  F004         	goto	u8701
  3294  000976  EFBF  F004         	goto	u8700
  3295  00097A                     u8701:
  3296  00097A  EFCD  F004         	goto	l6201
  3297  00097E                     u8700:
  3298  00097E                     
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3301  00097E  0E08               	movlw	low _dbuf
  3302  000980  25E9               	addwf	efgtoa@n& (0+255),w,b
  3303  000982  6F60               	movwf	strcpy@dest& (0+255),b
  3304  000984  0E01               	movlw	high _dbuf
  3305  000986  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3306  000988  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3307  00098A  0E3C               	movlw	low STR_13
  3308  00098C  6F62               	movwf	strcpy@src& (0+255),b
  3309  00098E  0E08               	movlw	high STR_13
  3310  000990  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3311  000992  ECDF  F022         	call	_strcpy	;wreg free
  3312                           
  3313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3314  000996  EFD9  F004         	goto	l6203
  3315  00099A                     l6201:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3319  00099A  0E08               	movlw	low _dbuf
  3320  00099C  25E9               	addwf	efgtoa@n& (0+255),w,b
  3321  00099E  6F60               	movwf	strcpy@dest& (0+255),b
  3322  0009A0  0E01               	movlw	high _dbuf
  3323  0009A2  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3324  0009A4  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3325  0009A6  0E44               	movlw	low STR_14
  3326  0009A8  6F62               	movwf	strcpy@src& (0+255),b
  3327  0009AA  0E08               	movlw	high STR_14
  3328  0009AC  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3329  0009AE  ECDF  F022         	call	_strcpy	;wreg free
  3330  0009B2                     l6203:
  3331                           
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3333  0009B2  0100               	movlb	0	; () banked
  3334  0009B4  0EFD               	movlw	253
  3335  0009B6  27D6               	addwf	efgtoa@w& (0+255),f,b
  3336  0009B8  0EFF               	movlw	255
  3337  0009BA  23D7               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3338  0009BC                     l6205:
  3339                           
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3341  0009BC  C0AB  F070         	movff	efgtoa@fp,pad@fp
  3342  0009C0  C0AC  F071         	movff	efgtoa@fp+1,pad@fp+1
  3343  0009C4  0E08               	movlw	low _dbuf
  3344  0009C6  0100               	movlb	0	; () banked
  3345  0009C8  6F72               	movwf	pad@buf& (0+255),b
  3346  0009CA  0E01               	movlw	high _dbuf
  3347  0009CC  6F73               	movwf	(pad@buf+1)& (0+255),b
  3348  0009CE  C0D6  F074         	movff	efgtoa@w,pad@p
  3349  0009D2  C0D7  F075         	movff	efgtoa@w+1,pad@p+1
  3350  0009D6  ECC8  F01E         	call	_pad	;wreg free
  3351  0009DA  C070  F0AB         	movff	?_pad,?_efgtoa
  3352  0009DE  C071  F0AC         	movff	?_pad+1,?_efgtoa+1
  3353  0009E2  EF09  F00A         	goto	l406
  3354  0009E6                     l6209:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3358  0009E6  C0E3  F060         	movff	efgtoa@g,___fpclassifyf@x
  3359  0009EA  C0E4  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3360  0009EE  C0E5  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3361  0009F2  C0E6  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3362  0009F6  ECF9  F01C         	call	___fpclassifyf	;wreg free
  3363  0009FA  0100               	movlb	0	; () banked
  3364  0009FC  5160               	movf	?___fpclassifyf& (0+255),w,b
  3365  0009FE  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3366  000A00  A4D8               	btfss	status,2,c
  3367  000A02  EF05  F005         	goto	u8711
  3368  000A06  EF07  F005         	goto	u8710
  3369  000A0A                     u8711:
  3370  000A0A  EF46  F005         	goto	l6227
  3371  000A0E                     u8710:
  3372  000A0E                     
  3373                           ; BSR set to: 0
  3374  000A0E  0EBF               	movlw	191
  3375  000A10  6FB2               	movwf	??_efgtoa& (0+255),b
  3376  000A12  0EFF               	movlw	255
  3377  000A14  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3378  000A16  51B1               	movf	efgtoa@c& (0+255),w,b
  3379  000A18  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  3380  000A1A  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  3381  000A1C  51B2               	movf	??_efgtoa& (0+255),w,b
  3382  000A1E  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3383  000A20  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3384  000A22  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3385  000A24  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3386  000A26  E10A               	bnz	u8720
  3387  000A28  0E1A               	movlw	26
  3388  000A2A  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3389  000A2C  A0D8               	btfss	status,0,c
  3390  000A2E  EF1B  F005         	goto	u8721
  3391  000A32  EF1E  F005         	goto	u8720
  3392  000A36                     u8721:
  3393  000A36  0E01               	movlw	1
  3394  000A38  EF1F  F005         	goto	u8730
  3395  000A3C                     u8720:
  3396  000A3C  0E00               	movlw	0
  3397  000A3E                     u8730:
  3398  000A3E  6FBF               	movwf	_efgtoa$766& (0+255),b
  3399  000A40  6BC0               	clrf	(_efgtoa$766+1)& (0+255),b
  3400  000A42                     
  3401                           ; BSR set to: 0
  3402  000A42  51BF               	movf	_efgtoa$766& (0+255),w,b
  3403  000A44  11C0               	iorwf	(_efgtoa$766+1)& (0+255),w,b
  3404  000A46  B4D8               	btfsc	status,2,c
  3405  000A48  EF28  F005         	goto	u8741
  3406  000A4C  EF2A  F005         	goto	u8740
  3407  000A50                     u8741:
  3408  000A50  EF38  F005         	goto	l6219
  3409  000A54                     u8740:
  3410  000A54                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3413  000A54  0E08               	movlw	low _dbuf
  3414  000A56  25E9               	addwf	efgtoa@n& (0+255),w,b
  3415  000A58  6F60               	movwf	strcpy@dest& (0+255),b
  3416  000A5A  0E01               	movlw	high _dbuf
  3417  000A5C  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3418  000A5E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3419  000A60  0E40               	movlw	low STR_17
  3420  000A62  6F62               	movwf	strcpy@src& (0+255),b
  3421  000A64  0E08               	movlw	high STR_17
  3422  000A66  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3423  000A68  ECDF  F022         	call	_strcpy	;wreg free
  3424                           
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3426  000A6C  EFD9  F004         	goto	l6203
  3427  000A70                     l6219:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3431  000A70  0E08               	movlw	low _dbuf
  3432  000A72  25E9               	addwf	efgtoa@n& (0+255),w,b
  3433  000A74  6F60               	movwf	strcpy@dest& (0+255),b
  3434  000A76  0E01               	movlw	high _dbuf
  3435  000A78  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3436  000A7A  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3437  000A7C  0E48               	movlw	low STR_18
  3438  000A7E  6F62               	movwf	strcpy@src& (0+255),b
  3439  000A80  0E08               	movlw	high STR_18
  3440  000A82  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3441  000A84  ECDF  F022         	call	_strcpy	;wreg free
  3442  000A88  EFD9  F004         	goto	l6203
  3443  000A8C                     l6227:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3447  000A8C  0E00               	movlw	0
  3448  000A8E  6FEB               	movwf	efgtoa@u& (0+255),b
  3449  000A90  0E00               	movlw	0
  3450  000A92  6FEC               	movwf	(efgtoa@u+1)& (0+255),b
  3451  000A94  0E80               	movlw	128
  3452  000A96  6FED               	movwf	(efgtoa@u+2)& (0+255),b
  3453  000A98  0E3F               	movlw	63
  3454  000A9A  6FEE               	movwf	(efgtoa@u+3)& (0+255),b
  3455                           
  3456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3457  000A9C  0E00               	movlw	0
  3458  000A9E  6FE8               	movwf	(efgtoa@e+1)& (0+255),b
  3459  000AA0  0E00               	movlw	0
  3460  000AA2  6FE7               	movwf	efgtoa@e& (0+255),b
  3461  000AA4                     
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3464  000AA4  C0E3  F060         	movff	efgtoa@g,___fleq@ff1
  3465  000AA8  C0E4  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  3466  000AAC  C0E5  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  3467  000AB0  C0E6  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  3468  000AB4  0E00               	movlw	0
  3469  000AB6  6F64               	movwf	___fleq@ff2& (0+255),b
  3470  000AB8  0E00               	movlw	0
  3471  000ABA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  3472  000ABC  0E00               	movlw	0
  3473  000ABE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  3474  000AC0  0E00               	movlw	0
  3475  000AC2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  3476  000AC4  EC4A  F020         	call	___fleq	;wreg free
  3477  000AC8  0100               	movlb	0	; () banked
  3478  000ACA  B0D8               	btfsc	status,0,c
  3479  000ACC  EF6A  F005         	goto	u8751
  3480  000AD0  EF6C  F005         	goto	u8750
  3481  000AD4                     u8751:
  3482  000AD4  EFF1  F005         	goto	l6245
  3483  000AD8                     u8750:
  3484  000AD8  EF8B  F005         	goto	l6237
  3485  000ADC                     l6233:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3489  000ADC  C0EB  F076         	movff	efgtoa@u,___flmul@b
  3490  000AE0  C0EC  F077         	movff	efgtoa@u+1,___flmul@b+1
  3491  000AE4  C0ED  F078         	movff	efgtoa@u+2,___flmul@b+2
  3492  000AE8  C0EE  F079         	movff	efgtoa@u+3,___flmul@b+3
  3493  000AEC  0E00               	movlw	0
  3494  000AEE  6F7A               	movwf	___flmul@a& (0+255),b
  3495  000AF0  0E00               	movlw	0
  3496  000AF2  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  3497  000AF4  0E20               	movlw	32
  3498  000AF6  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  3499  000AF8  0E41               	movlw	65
  3500  000AFA  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  3501  000AFC  EC0E  F00F         	call	___flmul	;wreg free
  3502  000B00  C076  F0EB         	movff	?___flmul,efgtoa@u
  3503  000B04  C077  F0EC         	movff	?___flmul+1,efgtoa@u+1
  3504  000B08  C078  F0ED         	movff	?___flmul+2,efgtoa@u+2
  3505  000B0C  C079  F0EE         	movff	?___flmul+3,efgtoa@u+3
  3506  000B10                     
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3508  000B10  0100               	movlb	0	; () banked
  3509  000B12  4BE7               	infsnz	efgtoa@e& (0+255),f,b
  3510  000B14  2BE8               	incf	(efgtoa@e+1)& (0+255),f,b
  3511  000B16                     l6237:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3515  000B16  C0E3  F09F         	movff	efgtoa@g,___flge@ff1
  3516  000B1A  C0E4  F0A0         	movff	efgtoa@g+1,___flge@ff1+1
  3517  000B1E  C0E5  F0A1         	movff	efgtoa@g+2,___flge@ff1+2
  3518  000B22  C0E6  F0A2         	movff	efgtoa@g+3,___flge@ff1+3
  3519  000B26  0E00               	movlw	0
  3520  000B28  6F7A               	movwf	___flmul@a& (0+255),b
  3521  000B2A  0E00               	movlw	0
  3522  000B2C  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  3523  000B2E  0E20               	movlw	32
  3524  000B30  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  3525  000B32  0E41               	movlw	65
  3526  000B34  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  3527  000B36  C0EB  F076         	movff	efgtoa@u,___flmul@b
  3528  000B3A  C0EC  F077         	movff	efgtoa@u+1,___flmul@b+1
  3529  000B3E  C0ED  F078         	movff	efgtoa@u+2,___flmul@b+2
  3530  000B42  C0EE  F079         	movff	efgtoa@u+3,___flmul@b+3
  3531  000B46  EC0E  F00F         	call	___flmul	;wreg free
  3532  000B4A  C076  F0A3         	movff	?___flmul,___flge@ff2
  3533  000B4E  C077  F0A4         	movff	?___flmul+1,___flge@ff2+1
  3534  000B52  C078  F0A5         	movff	?___flmul+2,___flge@ff2+2
  3535  000B56  C079  F0A6         	movff	?___flmul+3,___flge@ff2+3
  3536  000B5A  EC76  F01C         	call	___flge	;wreg free
  3537  000B5E  0100               	movlb	0	; () banked
  3538  000B60  B0D8               	btfsc	status,0,c
  3539  000B62  EFB5  F005         	goto	u8761
  3540  000B66  EFB7  F005         	goto	u8760
  3541  000B6A                     u8761:
  3542  000B6A  EF6E  F005         	goto	l6233
  3543  000B6E                     u8760:
  3544  000B6E  EFD7  F005         	goto	l6243
  3545  000B72                     l6239:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3549  000B72  C0EB  F076         	movff	efgtoa@u,___fldiv@b
  3550  000B76  C0EC  F077         	movff	efgtoa@u+1,___fldiv@b+1
  3551  000B7A  C0ED  F078         	movff	efgtoa@u+2,___fldiv@b+2
  3552  000B7E  C0EE  F079         	movff	efgtoa@u+3,___fldiv@b+3
  3553  000B82  0E00               	movlw	0
  3554  000B84  6F7A               	movwf	___fldiv@a& (0+255),b
  3555  000B86  0E00               	movlw	0
  3556  000B88  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  3557  000B8A  0E20               	movlw	32
  3558  000B8C  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  3559  000B8E  0E41               	movlw	65
  3560  000B90  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  3561  000B92  EC24  F011         	call	___fldiv	;wreg free
  3562  000B96  C076  F0EB         	movff	?___fldiv,efgtoa@u
  3563  000B9A  C077  F0EC         	movff	?___fldiv+1,efgtoa@u+1
  3564  000B9E  C078  F0ED         	movff	?___fldiv+2,efgtoa@u+2
  3565  000BA2  C079  F0EE         	movff	?___fldiv+3,efgtoa@u+3
  3566  000BA6                     
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3568  000BA6  0100               	movlb	0	; () banked
  3569  000BA8  07E7               	decf	efgtoa@e& (0+255),f,b
  3570  000BAA  A0D8               	btfss	status,0,c
  3571  000BAC  07E8               	decf	(efgtoa@e+1)& (0+255),f,b
  3572  000BAE                     l6243:
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3576  000BAE  C0E3  F09F         	movff	efgtoa@g,___flge@ff1
  3577  000BB2  C0E4  F0A0         	movff	efgtoa@g+1,___flge@ff1+1
  3578  000BB6  C0E5  F0A1         	movff	efgtoa@g+2,___flge@ff1+2
  3579  000BBA  C0E6  F0A2         	movff	efgtoa@g+3,___flge@ff1+3
  3580  000BBE  C0EB  F0A3         	movff	efgtoa@u,___flge@ff2
  3581  000BC2  C0EC  F0A4         	movff	efgtoa@u+1,___flge@ff2+1
  3582  000BC6  C0ED  F0A5         	movff	efgtoa@u+2,___flge@ff2+2
  3583  000BCA  C0EE  F0A6         	movff	efgtoa@u+3,___flge@ff2+3
  3584  000BCE  EC76  F01C         	call	___flge	;wreg free
  3585  000BD2  0100               	movlb	0	; () banked
  3586  000BD4  A0D8               	btfss	status,0,c
  3587  000BD6  EFEF  F005         	goto	u8771
  3588  000BDA  EFF1  F005         	goto	u8770
  3589  000BDE                     u8771:
  3590  000BDE  EFB9  F005         	goto	l6239
  3591  000BE2                     u8770:
  3592  000BE2                     l6245:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3596  000BE2  C0B1  F066         	movff	efgtoa@c,tolower@c
  3597  000BE6  6B67               	clrf	(tolower@c+1)& (0+255),b
  3598  000BE8  EC1F  F022         	call	_tolower	;wreg free
  3599  000BEC  0100               	movlb	0	; () banked
  3600  000BEE  5166               	movf	?_tolower& (0+255),w,b
  3601  000BF0  6FD8               	movwf	efgtoa@mode& (0+255),b
  3602  000BF2                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3605  000BF2  C0D8  F0D5         	movff	efgtoa@mode,efgtoa@nmode
  3606  000BF6                     
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3609  000BF6  0E67               	movlw	103
  3610  000BF8  19D8               	xorwf	efgtoa@mode& (0+255),w,b
  3611  000BFA  A4D8               	btfss	status,2,c
  3612  000BFC  EF02  F006         	goto	u8781
  3613  000C00  EF04  F006         	goto	u8780
  3614  000C04                     u8781:
  3615  000C04  EF2A  F006         	goto	l6259
  3616  000C08                     u8780:
  3617  000C08                     
  3618                           ; BSR set to: 0
  3619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3620  000C08  5031               	movf	_prec^0,w,c
  3621  000C0A  1032               	iorwf	(_prec+1)^0,w,c
  3622  000C0C  A4D8               	btfss	status,2,c
  3623  000C0E  EF0B  F006         	goto	u8791
  3624  000C12  EF0D  F006         	goto	u8790
  3625  000C16                     u8791:
  3626  000C16  EF11  F006         	goto	l6255
  3627  000C1A                     u8790:
  3628  000C1A                     
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3631  000C1A  0E00               	movlw	0
  3632  000C1C  6E32               	movwf	(_prec+1)^0,c
  3633  000C1E  0E01               	movlw	1
  3634  000C20  6E31               	movwf	_prec^0,c
  3635  000C22                     l6255:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3639  000C22  BE32               	btfsc	(_prec+1)^0,7,c
  3640  000C24  EF1E  F006         	goto	u8800
  3641  000C28  5032               	movf	(_prec+1)^0,w,c
  3642  000C2A  E106               	bnz	u8801
  3643  000C2C  0431               	decf	_prec^0,w,c
  3644  000C2E  B0D8               	btfsc	status,0,c
  3645  000C30  EF1C  F006         	goto	u8801
  3646  000C34  EF1E  F006         	goto	u8800
  3647  000C38                     u8801:
  3648  000C38  EF24  F006         	goto	l424
  3649  000C3C                     u8800:
  3650  000C3C                     l6257:
  3651                           
  3652                           ; BSR set to: 0
  3653  000C3C  0E00               	movlw	0
  3654  000C3E  6FD4               	movwf	(efgtoa@p+1)& (0+255),b
  3655  000C40  0E06               	movlw	6
  3656  000C42  6FD3               	movwf	efgtoa@p& (0+255),b
  3657  000C44  EF33  F006         	goto	l6265
  3658  000C48                     l424:
  3659                           
  3660                           ; BSR set to: 0
  3661  000C48  C031  F0D3         	movff	_prec,efgtoa@p
  3662  000C4C  C032  F0D4         	movff	_prec+1,efgtoa@p+1
  3663  000C50  EF33  F006         	goto	l6265
  3664  000C54                     l6259:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3668  000C54  BE32               	btfsc	(_prec+1)^0,7,c
  3669  000C56  EF2F  F006         	goto	u8811
  3670  000C5A  EF31  F006         	goto	u8810
  3671  000C5E                     u8811:
  3672  000C5E  EF1E  F006         	goto	l6257
  3673  000C62                     u8810:
  3674  000C62  EF24  F006         	goto	l424
  3675  000C66                     l6265:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3679  000C66  0E67               	movlw	103
  3680  000C68  19D8               	xorwf	efgtoa@mode& (0+255),w,b
  3681  000C6A  A4D8               	btfss	status,2,c
  3682  000C6C  EF3A  F006         	goto	u8821
  3683  000C70  EF3C  F006         	goto	u8820
  3684  000C74                     u8821:
  3685  000C74  EF6B  F006         	goto	l6275
  3686  000C78                     u8820:
  3687  000C78                     
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3690  000C78  AFE8               	btfss	(efgtoa@e+1)& (0+255),7,b
  3691  000C7A  EF4A  F006         	goto	u8830
  3692  000C7E  0EFC               	movlw	252
  3693  000C80  5DE7               	subwf	efgtoa@e& (0+255),w,b
  3694  000C82  0EFF               	movlw	255
  3695  000C84  59E8               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3696  000C86  A0D8               	btfss	status,0,c
  3697  000C88  EF48  F006         	goto	u8831
  3698  000C8C  EF4A  F006         	goto	u8830
  3699  000C90                     u8831:
  3700  000C90  EF69  F006         	goto	l6273
  3701  000C94                     u8830:
  3702  000C94                     
  3703                           ; BSR set to: 0
  3704  000C94  0EFF               	movlw	255
  3705  000C96  6FB2               	movwf	??_efgtoa& (0+255),b
  3706  000C98  0EFF               	movlw	255
  3707  000C9A  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3708  000C9C  C0D3  F0B4         	movff	efgtoa@p,??_efgtoa+2
  3709  000CA0  C0D4  F0B5         	movff	efgtoa@p+1,??_efgtoa+3
  3710  000CA4  51B2               	movf	??_efgtoa& (0+255),w,b
  3711  000CA6  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3712  000CA8  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3713  000CAA  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3714  000CAC  51E7               	movf	efgtoa@e& (0+255),w,b
  3715  000CAE  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3716  000CB0  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3717  000CB2  0A80               	xorlw	128
  3718  000CB4  6FB6               	movwf	(??_efgtoa+4)& (0+255),b
  3719  000CB6  51E8               	movf	(efgtoa@e+1)& (0+255),w,b
  3720  000CB8  0A80               	xorlw	128
  3721  000CBA  59B6               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3722  000CBC  A0D8               	btfss	status,0,c
  3723  000CBE  EF63  F006         	goto	u8841
  3724  000CC2  EF65  F006         	goto	u8840
  3725  000CC6                     u8841:
  3726  000CC6  EF69  F006         	goto	l6273
  3727  000CCA                     u8840:
  3728  000CCA                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3731  000CCA  0E66               	movlw	102
  3732  000CCC  6FD5               	movwf	efgtoa@nmode& (0+255),b
  3733                           
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3735  000CCE  EF6B  F006         	goto	l6275
  3736  000CD2                     l6273:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3740  000CD2  0E65               	movlw	101
  3741  000CD4  6FD5               	movwf	efgtoa@nmode& (0+255),b
  3742  000CD6                     l6275:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3746  000CD6  C0D3  F0CB         	movff	efgtoa@p,efgtoa@m
  3747  000CDA  C0D4  F0CC         	movff	efgtoa@p+1,efgtoa@m+1
  3748  000CDE                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3751  000CDE  0E67               	movlw	103
  3752  000CE0  19D8               	xorwf	efgtoa@mode& (0+255),w,b
  3753  000CE2  A4D8               	btfss	status,2,c
  3754  000CE4  EF76  F006         	goto	u8851
  3755  000CE8  EF78  F006         	goto	u8850
  3756  000CEC                     u8851:
  3757  000CEC  EF88  F006         	goto	l6283
  3758  000CF0                     u8850:
  3759  000CF0                     
  3760                           ; BSR set to: 0
  3761  000CF0  0E66               	movlw	102
  3762  000CF2  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3763  000CF4  A4D8               	btfss	status,2,c
  3764  000CF6  EF7F  F006         	goto	u8861
  3765  000CFA  EF81  F006         	goto	u8860
  3766  000CFE                     u8861:
  3767  000CFE  EF8A  F006         	goto	l6285
  3768  000D02                     u8860:
  3769  000D02                     
  3770                           ; BSR set to: 0
  3771  000D02  BFE8               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3772  000D04  EF88  F006         	goto	u8870
  3773  000D08  EF86  F006         	goto	u8871
  3774  000D0C                     u8871:
  3775  000D0C  EF8A  F006         	goto	l6285
  3776  000D10                     u8870:
  3777  000D10                     l6283:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3781  000D10  4BCB               	infsnz	efgtoa@m& (0+255),f,b
  3782  000D12  2BCC               	incf	(efgtoa@m+1)& (0+255),f,b
  3783  000D14                     l6285:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3787  000D14  0E66               	movlw	102
  3788  000D16  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  3789  000D18  A4D8               	btfss	status,2,c
  3790  000D1A  EF91  F006         	goto	u8881
  3791  000D1E  EF93  F006         	goto	u8880
  3792  000D22                     u8881:
  3793  000D22  EFB3  F006         	goto	l6295
  3794  000D26                     u8880:
  3795  000D26                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3798  000D26  BFE8               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3799  000D28  EF9A  F006         	goto	u8890
  3800  000D2C  EF98  F006         	goto	u8891
  3801  000D30                     u8891:
  3802  000D30  EFA6  F006         	goto	l6291
  3803  000D34                     u8890:
  3804  000D34                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3807  000D34  0E00               	movlw	0
  3808  000D36  6FEB               	movwf	efgtoa@u& (0+255),b
  3809  000D38  0E00               	movlw	0
  3810  000D3A  6FEC               	movwf	(efgtoa@u+1)& (0+255),b
  3811  000D3C  0E80               	movlw	128
  3812  000D3E  6FED               	movwf	(efgtoa@u+2)& (0+255),b
  3813  000D40  0E3F               	movlw	63
  3814  000D42  6FEE               	movwf	(efgtoa@u+3)& (0+255),b
  3815                           
  3816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3817  000D44  0E00               	movlw	0
  3818  000D46  6FE8               	movwf	(efgtoa@e+1)& (0+255),b
  3819  000D48  0E00               	movlw	0
  3820  000D4A  6FE7               	movwf	efgtoa@e& (0+255),b
  3821  000D4C                     l6291:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3825  000D4C  0E67               	movlw	103
  3826  000D4E  19D8               	xorwf	efgtoa@mode& (0+255),w,b
  3827  000D50  B4D8               	btfsc	status,2,c
  3828  000D52  EFAD  F006         	goto	u8901
  3829  000D56  EFAF  F006         	goto	u8900
  3830  000D5A                     u8901:
  3831  000D5A  EFB3  F006         	goto	l6295
  3832  000D5E                     u8900:
  3833  000D5E                     
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3836  000D5E  51E7               	movf	efgtoa@e& (0+255),w,b
  3837  000D60  27CB               	addwf	efgtoa@m& (0+255),f,b
  3838  000D62  51E8               	movf	(efgtoa@e+1)& (0+255),w,b
  3839  000D64  23CC               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3840  000D66                     l6295:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3844  000D66  0E00               	movlw	0
  3845  000D68  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  3846  000D6A  0E00               	movlw	0
  3847  000D6C  6FE1               	movwf	efgtoa@i& (0+255),b
  3848  000D6E                     
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3851  000D6E  C0E3  F0D9         	movff	efgtoa@g,efgtoa@h
  3852  000D72  C0E4  F0DA         	movff	efgtoa@g+1,efgtoa@h+1
  3853  000D76  C0E5  F0DB         	movff	efgtoa@g+2,efgtoa@h+2
  3854  000D7A  C0E6  F0DC         	movff	efgtoa@g+3,efgtoa@h+3
  3855  000D7E                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3858  000D7E  C0EB  F0B7         	movff	efgtoa@u,efgtoa@ou
  3859  000D82  C0EC  F0B8         	movff	efgtoa@u+1,efgtoa@ou+1
  3860  000D86  C0ED  F0B9         	movff	efgtoa@u+2,efgtoa@ou+2
  3861  000D8A  C0EE  F0BA         	movff	efgtoa@u+3,efgtoa@ou+3
  3862                           
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3864  000D8E  EF45  F007         	goto	l6309
  3865  000D92                     l6301:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3869  000D92  C0D9  F076         	movff	efgtoa@h,___fldiv@b
  3870  000D96  C0DA  F077         	movff	efgtoa@h+1,___fldiv@b+1
  3871  000D9A  C0DB  F078         	movff	efgtoa@h+2,___fldiv@b+2
  3872  000D9E  C0DC  F079         	movff	efgtoa@h+3,___fldiv@b+3
  3873  000DA2  C0EB  F07A         	movff	efgtoa@u,___fldiv@a
  3874  000DA6  C0EC  F07B         	movff	efgtoa@u+1,___fldiv@a+1
  3875  000DAA  C0ED  F07C         	movff	efgtoa@u+2,___fldiv@a+2
  3876  000DAE  C0EE  F07D         	movff	efgtoa@u+3,___fldiv@a+3
  3877  000DB2  EC24  F011         	call	___fldiv	;wreg free
  3878  000DB6  C076  F08F         	movff	?___fldiv,floorf@x
  3879  000DBA  C077  F090         	movff	?___fldiv+1,floorf@x+1
  3880  000DBE  C078  F091         	movff	?___fldiv+2,floorf@x+2
  3881  000DC2  C079  F092         	movff	?___fldiv+3,floorf@x+3
  3882  000DC6  EC6F  F015         	call	_floorf	;wreg free
  3883  000DCA  C08F  F0DD         	movff	?_floorf,efgtoa@l
  3884  000DCE  C090  F0DE         	movff	?_floorf+1,efgtoa@l+1
  3885  000DD2  C091  F0DF         	movff	?_floorf+2,efgtoa@l+2
  3886  000DD6  C092  F0E0         	movff	?_floorf+3,efgtoa@l+3
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3889  000DDA  C0DD  F060         	movff	efgtoa@l,___fltol@f1
  3890  000DDE  C0DE  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3891  000DE2  C0DF  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3892  000DE6  C0E0  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3893  000DEA  ECF2  F01B         	call	___fltol	;wreg free
  3894  000DEE  C060  F0CF         	movff	?___fltol,efgtoa@d
  3895  000DF2  C061  F0D0         	movff	?___fltol+1,efgtoa@d+1
  3896  000DF6                     
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3898  000DF6  C0D9  F09F         	movff	efgtoa@h,___flsub@b
  3899  000DFA  C0DA  F0A0         	movff	efgtoa@h+1,___flsub@b+1
  3900  000DFE  C0DB  F0A1         	movff	efgtoa@h+2,___flsub@b+2
  3901  000E02  C0DC  F0A2         	movff	efgtoa@h+3,___flsub@b+3
  3902  000E06  C0EB  F07A         	movff	efgtoa@u,___flmul@a
  3903  000E0A  C0EC  F07B         	movff	efgtoa@u+1,___flmul@a+1
  3904  000E0E  C0ED  F07C         	movff	efgtoa@u+2,___flmul@a+2
  3905  000E12  C0EE  F07D         	movff	efgtoa@u+3,___flmul@a+3
  3906  000E16  C0DD  F076         	movff	efgtoa@l,___flmul@b
  3907  000E1A  C0DE  F077         	movff	efgtoa@l+1,___flmul@b+1
  3908  000E1E  C0DF  F078         	movff	efgtoa@l+2,___flmul@b+2
  3909  000E22  C0E0  F079         	movff	efgtoa@l+3,___flmul@b+3
  3910  000E26  EC0E  F00F         	call	___flmul	;wreg free
  3911  000E2A  C076  F0A3         	movff	?___flmul,___flsub@a
  3912  000E2E  C077  F0A4         	movff	?___flmul+1,___flsub@a+1
  3913  000E32  C078  F0A5         	movff	?___flmul+2,___flsub@a+2
  3914  000E36  C079  F0A6         	movff	?___flmul+3,___flsub@a+3
  3915  000E3A  ECDF  F023         	call	___flsub	;wreg free
  3916  000E3E  C09F  F0D9         	movff	?___flsub,efgtoa@h
  3917  000E42  C0A0  F0DA         	movff	?___flsub+1,efgtoa@h+1
  3918  000E46  C0A1  F0DB         	movff	?___flsub+2,efgtoa@h+2
  3919  000E4A  C0A2  F0DC         	movff	?___flsub+3,efgtoa@h+3
  3920  000E4E                     
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3922  000E4E  C0EB  F076         	movff	efgtoa@u,___fldiv@b
  3923  000E52  C0EC  F077         	movff	efgtoa@u+1,___fldiv@b+1
  3924  000E56  C0ED  F078         	movff	efgtoa@u+2,___fldiv@b+2
  3925  000E5A  C0EE  F079         	movff	efgtoa@u+3,___fldiv@b+3
  3926  000E5E  0E00               	movlw	0
  3927  000E60  0100               	movlb	0	; () banked
  3928  000E62  6F7A               	movwf	___fldiv@a& (0+255),b
  3929  000E64  0E00               	movlw	0
  3930  000E66  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  3931  000E68  0E20               	movlw	32
  3932  000E6A  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  3933  000E6C  0E41               	movlw	65
  3934  000E6E  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  3935  000E70  EC24  F011         	call	___fldiv	;wreg free
  3936  000E74  C076  F0EB         	movff	?___fldiv,efgtoa@u
  3937  000E78  C077  F0EC         	movff	?___fldiv+1,efgtoa@u+1
  3938  000E7C  C078  F0ED         	movff	?___fldiv+2,efgtoa@u+2
  3939  000E80  C079  F0EE         	movff	?___fldiv+3,efgtoa@u+3
  3940  000E84                     
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3942  000E84  0100               	movlb	0	; () banked
  3943  000E86  4BE1               	infsnz	efgtoa@i& (0+255),f,b
  3944  000E88  2BE2               	incf	(efgtoa@i+1)& (0+255),f,b
  3945  000E8A                     l6309:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3949  000E8A  51CB               	movf	efgtoa@m& (0+255),w,b
  3950  000E8C  5DE1               	subwf	efgtoa@i& (0+255),w,b
  3951  000E8E  51E2               	movf	(efgtoa@i+1)& (0+255),w,b
  3952  000E90  0A80               	xorlw	128
  3953  000E92  6FB2               	movwf	??_efgtoa& (0+255),b
  3954  000E94  51CC               	movf	(efgtoa@m+1)& (0+255),w,b
  3955  000E96  0A80               	xorlw	128
  3956  000E98  59B2               	subwfb	??_efgtoa& (0+255),w,b
  3957  000E9A  A0D8               	btfss	status,0,c
  3958  000E9C  EF52  F007         	goto	u8911
  3959  000EA0  EF54  F007         	goto	u8910
  3960  000EA4                     u8911:
  3961  000EA4  EFC9  F006         	goto	l6301
  3962  000EA8                     u8910:
  3963  000EA8                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3966  000EA8  C0EB  F076         	movff	efgtoa@u,___flmul@b
  3967  000EAC  C0EC  F077         	movff	efgtoa@u+1,___flmul@b+1
  3968  000EB0  C0ED  F078         	movff	efgtoa@u+2,___flmul@b+2
  3969  000EB4  C0EE  F079         	movff	efgtoa@u+3,___flmul@b+3
  3970  000EB8  0E00               	movlw	0
  3971  000EBA  6F7A               	movwf	___flmul@a& (0+255),b
  3972  000EBC  0E00               	movlw	0
  3973  000EBE  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  3974  000EC0  0EA0               	movlw	160
  3975  000EC2  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  3976  000EC4  0E40               	movlw	64
  3977  000EC6  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  3978  000EC8  EC0E  F00F         	call	___flmul	;wreg free
  3979  000ECC  C076  F0DD         	movff	?___flmul,efgtoa@l
  3980  000ED0  C077  F0DE         	movff	?___flmul+1,efgtoa@l+1
  3981  000ED4  C078  F0DF         	movff	?___flmul+2,efgtoa@l+2
  3982  000ED8  C079  F0E0         	movff	?___flmul+3,efgtoa@l+3
  3983  000EDC                     
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3985  000EDC  C0D9  F09F         	movff	efgtoa@h,___flge@ff1
  3986  000EE0  C0DA  F0A0         	movff	efgtoa@h+1,___flge@ff1+1
  3987  000EE4  C0DB  F0A1         	movff	efgtoa@h+2,___flge@ff1+2
  3988  000EE8  C0DC  F0A2         	movff	efgtoa@h+3,___flge@ff1+3
  3989  000EEC  C0DD  F0A3         	movff	efgtoa@l,___flge@ff2
  3990  000EF0  C0DE  F0A4         	movff	efgtoa@l+1,___flge@ff2+1
  3991  000EF4  C0DF  F0A5         	movff	efgtoa@l+2,___flge@ff2+2
  3992  000EF8  C0E0  F0A6         	movff	efgtoa@l+3,___flge@ff2+3
  3993  000EFC  EC76  F01C         	call	___flge	;wreg free
  3994  000F00  0100               	movlb	0	; () banked
  3995  000F02  B0D8               	btfsc	status,0,c
  3996  000F04  EF86  F007         	goto	u8921
  3997  000F08  EF88  F007         	goto	u8920
  3998  000F0C                     u8921:
  3999  000F0C  EF92  F007         	goto	l6317
  4000  000F10                     u8920:
  4001  000F10                     
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4004  000F10  0E00               	movlw	0
  4005  000F12  6FDD               	movwf	efgtoa@l& (0+255),b
  4006  000F14  0E00               	movlw	0
  4007  000F16  6FDE               	movwf	(efgtoa@l+1)& (0+255),b
  4008  000F18  0E00               	movlw	0
  4009  000F1A  6FDF               	movwf	(efgtoa@l+2)& (0+255),b
  4010  000F1C  0E00               	movlw	0
  4011  000F1E  6FE0               	movwf	(efgtoa@l+3)& (0+255),b
  4012                           
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4014  000F20  EFBB  F007         	goto	l6323
  4015  000F24                     l6317:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4019  000F24  C0D9  F060         	movff	efgtoa@h,___fleq@ff1
  4020  000F28  C0DA  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  4021  000F2C  C0DB  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  4022  000F30  C0DC  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  4023  000F34  C0DD  F064         	movff	efgtoa@l,___fleq@ff2
  4024  000F38  C0DE  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  4025  000F3C  C0DF  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  4026  000F40  C0E0  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  4027  000F44  EC4A  F020         	call	___fleq	;wreg free
  4028  000F48  0100               	movlb	0	; () banked
  4029  000F4A  A0D8               	btfss	status,0,c
  4030  000F4C  EFAA  F007         	goto	u8931
  4031  000F50  EFAC  F007         	goto	u8930
  4032  000F54                     u8931:
  4033  000F54  EFBB  F007         	goto	l6323
  4034  000F58                     u8930:
  4035  000F58                     
  4036                           ; BSR set to: 0
  4037  000F58  B1CF               	btfsc	efgtoa@d& (0+255),0,b
  4038  000F5A  EFB1  F007         	goto	u8941
  4039  000F5E  EFB3  F007         	goto	u8940
  4040  000F62                     u8941:
  4041  000F62  EFBB  F007         	goto	l6323
  4042  000F66                     u8940:
  4043  000F66                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4046  000F66  0E00               	movlw	0
  4047  000F68  6FDD               	movwf	efgtoa@l& (0+255),b
  4048  000F6A  0E00               	movlw	0
  4049  000F6C  6FDE               	movwf	(efgtoa@l+1)& (0+255),b
  4050  000F6E  0E00               	movlw	0
  4051  000F70  6FDF               	movwf	(efgtoa@l+2)& (0+255),b
  4052  000F72  0E00               	movlw	0
  4053  000F74  6FE0               	movwf	(efgtoa@l+3)& (0+255),b
  4054  000F76                     l6323:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4058  000F76  C0E3  F08F         	movff	efgtoa@g,___fladd@b
  4059  000F7A  C0E4  F090         	movff	efgtoa@g+1,___fladd@b+1
  4060  000F7E  C0E5  F091         	movff	efgtoa@g+2,___fladd@b+2
  4061  000F82  C0E6  F092         	movff	efgtoa@g+3,___fladd@b+3
  4062  000F86  C0DD  F093         	movff	efgtoa@l,___fladd@a
  4063  000F8A  C0DE  F094         	movff	efgtoa@l+1,___fladd@a+1
  4064  000F8E  C0DF  F095         	movff	efgtoa@l+2,___fladd@a+2
  4065  000F92  C0E0  F096         	movff	efgtoa@l+3,___fladd@a+3
  4066  000F96  ECAD  F00C         	call	___fladd	;wreg free
  4067  000F9A  C08F  F0D9         	movff	?___fladd,efgtoa@h
  4068  000F9E  C090  F0DA         	movff	?___fladd+1,efgtoa@h+1
  4069  000FA2  C091  F0DB         	movff	?___fladd+2,efgtoa@h+2
  4070  000FA6  C092  F0DC         	movff	?___fladd+3,efgtoa@h+3
  4071  000FAA                     
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4073  000FAA  C0B7  F0EB         	movff	efgtoa@ou,efgtoa@u
  4074  000FAE  C0B8  F0EC         	movff	efgtoa@ou+1,efgtoa@u+1
  4075  000FB2  C0B9  F0ED         	movff	efgtoa@ou+2,efgtoa@u+2
  4076  000FB6  C0BA  F0EE         	movff	efgtoa@ou+3,efgtoa@u+3
  4077  000FBA                     
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4079  000FBA  0E65               	movlw	101
  4080  000FBC  0100               	movlb	0	; () banked
  4081  000FBE  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  4082  000FC0  B4D8               	btfsc	status,2,c
  4083  000FC2  EFE5  F007         	goto	u8951
  4084  000FC6  EFE7  F007         	goto	u8950
  4085  000FCA                     u8951:
  4086  000FCA  EFED  F007         	goto	l6331
  4087  000FCE                     u8950:
  4088  000FCE                     
  4089                           ; BSR set to: 0
  4090  000FCE  C0E7  F0CD         	movff	efgtoa@e,efgtoa@ne
  4091  000FD2  C0E8  F0CE         	movff	efgtoa@e+1,efgtoa@ne+1
  4092  000FD6  EFF1  F007         	goto	l450
  4093  000FDA                     l6331:
  4094                           
  4095                           ; BSR set to: 0
  4096  000FDA  0E00               	movlw	0
  4097  000FDC  6FCE               	movwf	(efgtoa@ne+1)& (0+255),b
  4098  000FDE  0E00               	movlw	0
  4099  000FE0  6FCD               	movwf	efgtoa@ne& (0+255),b
  4100  000FE2                     l450:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4104  000FE2  0E00               	movlw	0
  4105  000FE4  6FCA               	movwf	(efgtoa@pp+1)& (0+255),b
  4106  000FE6  0E00               	movlw	0
  4107  000FE8  6FC9               	movwf	efgtoa@pp& (0+255),b
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4110  000FEA  0E00               	movlw	0
  4111  000FEC  6FC8               	movwf	(efgtoa@t+1)& (0+255),b
  4112  000FEE  0E00               	movlw	0
  4113  000FF0  6FC7               	movwf	efgtoa@t& (0+255),b
  4114                           
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4116  000FF2  0E00               	movlw	0
  4117  000FF4  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  4118  000FF6  0E00               	movlw	0
  4119  000FF8  6FE1               	movwf	efgtoa@i& (0+255),b
  4120                           
  4121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4122  000FFA  EFEE  F008         	goto	l6381
  4123  000FFE                     l6333:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4127  000FFE  C0D9  F076         	movff	efgtoa@h,___fldiv@b
  4128  001002  C0DA  F077         	movff	efgtoa@h+1,___fldiv@b+1
  4129  001006  C0DB  F078         	movff	efgtoa@h+2,___fldiv@b+2
  4130  00100A  C0DC  F079         	movff	efgtoa@h+3,___fldiv@b+3
  4131  00100E  C0EB  F07A         	movff	efgtoa@u,___fldiv@a
  4132  001012  C0EC  F07B         	movff	efgtoa@u+1,___fldiv@a+1
  4133  001016  C0ED  F07C         	movff	efgtoa@u+2,___fldiv@a+2
  4134  00101A  C0EE  F07D         	movff	efgtoa@u+3,___fldiv@a+3
  4135  00101E  EC24  F011         	call	___fldiv	;wreg free
  4136  001022  C076  F08F         	movff	?___fldiv,floorf@x
  4137  001026  C077  F090         	movff	?___fldiv+1,floorf@x+1
  4138  00102A  C078  F091         	movff	?___fldiv+2,floorf@x+2
  4139  00102E  C079  F092         	movff	?___fldiv+3,floorf@x+3
  4140  001032  EC6F  F015         	call	_floorf	;wreg free
  4141  001036  C08F  F0DD         	movff	?_floorf,efgtoa@l
  4142  00103A  C090  F0DE         	movff	?_floorf+1,efgtoa@l+1
  4143  00103E  C091  F0DF         	movff	?_floorf+2,efgtoa@l+2
  4144  001042  C092  F0E0         	movff	?_floorf+3,efgtoa@l+3
  4145                           
  4146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4147  001046  C0DD  F060         	movff	efgtoa@l,___fltol@f1
  4148  00104A  C0DE  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4149  00104E  C0DF  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4150  001052  C0E0  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4151  001056  ECF2  F01B         	call	___fltol	;wreg free
  4152  00105A  C060  F0CF         	movff	?___fltol,efgtoa@d
  4153  00105E  C061  F0D0         	movff	?___fltol+1,efgtoa@d+1
  4154  001062                     
  4155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4156  001062  B833               	btfsc	_flags^0,4,c
  4157  001064  EF36  F008         	goto	u8961
  4158  001068  EF38  F008         	goto	u8960
  4159  00106C                     u8961:
  4160  00106C  EF56  F008         	goto	l6345
  4161  001070                     u8960:
  4162  001070  0100               	movlb	0	; () banked
  4163  001072  51CF               	movf	efgtoa@d& (0+255),w,b
  4164  001074  11D0               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4165  001076  A4D8               	btfss	status,2,c
  4166  001078  EF40  F008         	goto	u8971
  4167  00107C  EF42  F008         	goto	u8970
  4168  001080                     u8971:
  4169  001080  EF56  F008         	goto	l6345
  4170  001084                     u8970:
  4171  001084                     
  4172                           ; BSR set to: 0
  4173  001084  0E67               	movlw	103
  4174  001086  19D8               	xorwf	efgtoa@mode& (0+255),w,b
  4175  001088  A4D8               	btfss	status,2,c
  4176  00108A  EF49  F008         	goto	u8981
  4177  00108E  EF4B  F008         	goto	u8980
  4178  001092                     u8981:
  4179  001092  EF56  F008         	goto	l6345
  4180  001096                     u8980:
  4181  001096                     
  4182                           ; BSR set to: 0
  4183  001096  BFCE               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4184  001098  EF52  F008         	goto	u8990
  4185  00109C  EF50  F008         	goto	u8991
  4186  0010A0                     u8991:
  4187  0010A0  EF56  F008         	goto	l6345
  4188  0010A4                     u8990:
  4189  0010A4                     
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4192  0010A4  4BC7               	infsnz	efgtoa@t& (0+255),f,b
  4193  0010A6  2BC8               	incf	(efgtoa@t+1)& (0+255),f,b
  4194                           
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4196  0010A8  EFA1  F008         	goto	l6373
  4197  0010AC                     l6345:
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4200  0010AC  0100               	movlb	0	; () banked
  4201  0010AE  51C9               	movf	efgtoa@pp& (0+255),w,b
  4202  0010B0  11CA               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4203  0010B2  A4D8               	btfss	status,2,c
  4204  0010B4  EF5E  F008         	goto	u9001
  4205  0010B8  EF60  F008         	goto	u9000
  4206  0010BC                     u9001:
  4207  0010BC  EF8A  F008         	goto	l6365
  4208  0010C0                     u9000:
  4209  0010C0                     
  4210                           ; BSR set to: 0
  4211  0010C0  BFCE               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4212  0010C2  EF67  F008         	goto	u9010
  4213  0010C6  EF65  F008         	goto	u9011
  4214  0010CA                     u9011:
  4215  0010CA  EF8A  F008         	goto	l6365
  4216  0010CE                     u9010:
  4217  0010CE                     
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4220  0010CE  0E08               	movlw	low _dbuf
  4221  0010D0  25E9               	addwf	efgtoa@n& (0+255),w,b
  4222  0010D2  6ED9               	movwf	fsr2l,c
  4223  0010D4  0E01               	movlw	high _dbuf
  4224  0010D6  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4225  0010D8  6EDA               	movwf	fsr2h,c
  4226  0010DA  0E2E               	movlw	46
  4227  0010DC  6EDF               	movwf	indf2,c
  4228  0010DE                     
  4229                           ; BSR set to: 0
  4230  0010DE  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4231  0010E0  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4232  0010E2                     
  4233                           ; BSR set to: 0
  4234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4235  0010E2  07D6               	decf	efgtoa@w& (0+255),f,b
  4236  0010E4  A0D8               	btfss	status,0,c
  4237  0010E6  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4238  0010E8                     
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4241  0010E8  0E00               	movlw	0
  4242  0010EA  6FCA               	movwf	(efgtoa@pp+1)& (0+255),b
  4243  0010EC  0E01               	movlw	1
  4244  0010EE  6FC9               	movwf	efgtoa@pp& (0+255),b
  4245  0010F0  EF8A  F008         	goto	l6365
  4246  0010F4                     l6357:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4250  0010F4  0E08               	movlw	low _dbuf
  4251  0010F6  25E9               	addwf	efgtoa@n& (0+255),w,b
  4252  0010F8  6ED9               	movwf	fsr2l,c
  4253  0010FA  0E01               	movlw	high _dbuf
  4254  0010FC  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4255  0010FE  6EDA               	movwf	fsr2h,c
  4256  001100  0E30               	movlw	48
  4257  001102  6EDF               	movwf	indf2,c
  4258  001104                     
  4259                           ; BSR set to: 0
  4260  001104  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4261  001106  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4262  001108                     
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4265  001108  07D6               	decf	efgtoa@w& (0+255),f,b
  4266  00110A  A0D8               	btfss	status,0,c
  4267  00110C  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4268  00110E                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4271  00110E  07C7               	decf	efgtoa@t& (0+255),f,b
  4272  001110  A0D8               	btfss	status,0,c
  4273  001112  07C8               	decf	(efgtoa@t+1)& (0+255),f,b
  4274  001114                     l6365:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4278  001114  51C7               	movf	efgtoa@t& (0+255),w,b
  4279  001116  11C8               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4280  001118  A4D8               	btfss	status,2,c
  4281  00111A  EF91  F008         	goto	u9021
  4282  00111E  EF93  F008         	goto	u9020
  4283  001122                     u9021:
  4284  001122  EF7A  F008         	goto	l6357
  4285  001126                     u9020:
  4286  001126                     
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4289  001126  0E08               	movlw	low _dbuf
  4290  001128  25E9               	addwf	efgtoa@n& (0+255),w,b
  4291  00112A  6ED9               	movwf	fsr2l,c
  4292  00112C  0E01               	movlw	high _dbuf
  4293  00112E  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4294  001130  6EDA               	movwf	fsr2h,c
  4295  001132  51CF               	movf	efgtoa@d& (0+255),w,b
  4296  001134  0F30               	addlw	48
  4297  001136  6EDF               	movwf	indf2,c
  4298  001138                     
  4299                           ; BSR set to: 0
  4300  001138  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4301  00113A  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4302  00113C                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4305  00113C  07D6               	decf	efgtoa@w& (0+255),f,b
  4306  00113E  A0D8               	btfss	status,0,c
  4307  001140  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4308  001142                     l6373:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4312  001142  C0D9  F09F         	movff	efgtoa@h,___flsub@b
  4313  001146  C0DA  F0A0         	movff	efgtoa@h+1,___flsub@b+1
  4314  00114A  C0DB  F0A1         	movff	efgtoa@h+2,___flsub@b+2
  4315  00114E  C0DC  F0A2         	movff	efgtoa@h+3,___flsub@b+3
  4316  001152  C0EB  F07A         	movff	efgtoa@u,___flmul@a
  4317  001156  C0EC  F07B         	movff	efgtoa@u+1,___flmul@a+1
  4318  00115A  C0ED  F07C         	movff	efgtoa@u+2,___flmul@a+2
  4319  00115E  C0EE  F07D         	movff	efgtoa@u+3,___flmul@a+3
  4320  001162  C0DD  F076         	movff	efgtoa@l,___flmul@b
  4321  001166  C0DE  F077         	movff	efgtoa@l+1,___flmul@b+1
  4322  00116A  C0DF  F078         	movff	efgtoa@l+2,___flmul@b+2
  4323  00116E  C0E0  F079         	movff	efgtoa@l+3,___flmul@b+3
  4324  001172  EC0E  F00F         	call	___flmul	;wreg free
  4325  001176  C076  F0A3         	movff	?___flmul,___flsub@a
  4326  00117A  C077  F0A4         	movff	?___flmul+1,___flsub@a+1
  4327  00117E  C078  F0A5         	movff	?___flmul+2,___flsub@a+2
  4328  001182  C079  F0A6         	movff	?___flmul+3,___flsub@a+3
  4329  001186  ECDF  F023         	call	___flsub	;wreg free
  4330  00118A  C09F  F0D9         	movff	?___flsub,efgtoa@h
  4331  00118E  C0A0  F0DA         	movff	?___flsub+1,efgtoa@h+1
  4332  001192  C0A1  F0DB         	movff	?___flsub+2,efgtoa@h+2
  4333  001196  C0A2  F0DC         	movff	?___flsub+3,efgtoa@h+3
  4334  00119A                     
  4335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4336  00119A  C0EB  F076         	movff	efgtoa@u,___fldiv@b
  4337  00119E  C0EC  F077         	movff	efgtoa@u+1,___fldiv@b+1
  4338  0011A2  C0ED  F078         	movff	efgtoa@u+2,___fldiv@b+2
  4339  0011A6  C0EE  F079         	movff	efgtoa@u+3,___fldiv@b+3
  4340  0011AA  0E00               	movlw	0
  4341  0011AC  0100               	movlb	0	; () banked
  4342  0011AE  6F7A               	movwf	___fldiv@a& (0+255),b
  4343  0011B0  0E00               	movlw	0
  4344  0011B2  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  4345  0011B4  0E20               	movlw	32
  4346  0011B6  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  4347  0011B8  0E41               	movlw	65
  4348  0011BA  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  4349  0011BC  EC24  F011         	call	___fldiv	;wreg free
  4350  0011C0  C076  F0EB         	movff	?___fldiv,efgtoa@u
  4351  0011C4  C077  F0EC         	movff	?___fldiv+1,efgtoa@u+1
  4352  0011C8  C078  F0ED         	movff	?___fldiv+2,efgtoa@u+2
  4353  0011CC  C079  F0EE         	movff	?___fldiv+3,efgtoa@u+3
  4354  0011D0                     
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4356  0011D0  0100               	movlb	0	; () banked
  4357  0011D2  07CD               	decf	efgtoa@ne& (0+255),f,b
  4358  0011D4  A0D8               	btfss	status,0,c
  4359  0011D6  07CE               	decf	(efgtoa@ne+1)& (0+255),f,b
  4360  0011D8                     
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4363  0011D8  4BE1               	infsnz	efgtoa@i& (0+255),f,b
  4364  0011DA  2BE2               	incf	(efgtoa@i+1)& (0+255),f,b
  4365  0011DC                     l6381:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4369  0011DC  51CB               	movf	efgtoa@m& (0+255),w,b
  4370  0011DE  5DE1               	subwf	efgtoa@i& (0+255),w,b
  4371  0011E0  51E2               	movf	(efgtoa@i+1)& (0+255),w,b
  4372  0011E2  0A80               	xorlw	128
  4373  0011E4  6FB2               	movwf	??_efgtoa& (0+255),b
  4374  0011E6  51CC               	movf	(efgtoa@m+1)& (0+255),w,b
  4375  0011E8  0A80               	xorlw	128
  4376  0011EA  59B2               	subwfb	??_efgtoa& (0+255),w,b
  4377  0011EC  B0D8               	btfsc	status,0,c
  4378  0011EE  EFFB  F008         	goto	u9031
  4379  0011F2  EFFD  F008         	goto	u9030
  4380  0011F6                     u9031:
  4381  0011F6  EF0B  F009         	goto	l6385
  4382  0011FA                     u9030:
  4383  0011FA                     
  4384                           ; BSR set to: 0
  4385  0011FA  BFEA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4386  0011FC  EF09  F009         	goto	u9041
  4387  001200  51EA               	movf	(efgtoa@n+1)& (0+255),w,b
  4388  001202  E109               	bnz	u9040
  4389  001204  0E4B               	movlw	75
  4390  001206  5DE9               	subwf	efgtoa@n& (0+255),w,b
  4391  001208  A0D8               	btfss	status,0,c
  4392  00120A  EF09  F009         	goto	u9041
  4393  00120E  EF0B  F009         	goto	u9040
  4394  001212                     u9041:
  4395  001212  EFFF  F007         	goto	l6333
  4396  001216                     u9040:
  4397  001216                     l6385:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4401  001216  51C9               	movf	efgtoa@pp& (0+255),w,b
  4402  001218  11CA               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4403  00121A  A4D8               	btfss	status,2,c
  4404  00121C  EF12  F009         	goto	u9051
  4405  001220  EF14  F009         	goto	u9050
  4406  001224                     u9051:
  4407  001224  EF25  F009         	goto	l6393
  4408  001228                     u9050:
  4409  001228                     
  4410                           ; BSR set to: 0
  4411  001228  A833               	btfss	_flags^0,4,c
  4412  00122A  EF19  F009         	goto	u9061
  4413  00122E  EF1B  F009         	goto	u9060
  4414  001232                     u9061:
  4415  001232  EF25  F009         	goto	l6393
  4416  001236                     u9060:
  4417  001236                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4420  001236  0E08               	movlw	low _dbuf
  4421  001238  25E9               	addwf	efgtoa@n& (0+255),w,b
  4422  00123A  6ED9               	movwf	fsr2l,c
  4423  00123C  0E01               	movlw	high _dbuf
  4424  00123E  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4425  001240  6EDA               	movwf	fsr2h,c
  4426  001242  0E2E               	movlw	46
  4427  001244  6EDF               	movwf	indf2,c
  4428  001246                     
  4429                           ; BSR set to: 0
  4430  001246  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4431  001248  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4432  00124A                     l6393:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4436  00124A  0E08               	movlw	low _dbuf
  4437  00124C  25E9               	addwf	efgtoa@n& (0+255),w,b
  4438  00124E  6ED9               	movwf	fsr2l,c
  4439  001250  0E01               	movlw	high _dbuf
  4440  001252  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4441  001254  6EDA               	movwf	fsr2h,c
  4442  001256  0E00               	movlw	0
  4443  001258  6EDF               	movwf	indf2,c
  4444  00125A                     
  4445                           ; BSR set to: 0
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4447  00125A  0E65               	movlw	101
  4448  00125C  19D5               	xorwf	efgtoa@nmode& (0+255),w,b
  4449  00125E  A4D8               	btfss	status,2,c
  4450  001260  EF34  F009         	goto	u9071
  4451  001264  EF36  F009         	goto	u9070
  4452  001268                     u9071:
  4453  001268  EFDE  F004         	goto	l6205
  4454  00126C                     u9070:
  4455  00126C                     
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4458  00126C  0E00               	movlw	0
  4459  00126E  6FE2               	movwf	(efgtoa@i+1)& (0+255),b
  4460  001270  0E4F               	movlw	79
  4461  001272  6FE1               	movwf	efgtoa@i& (0+255),b
  4462  001274                     
  4463                           ; BSR set to: 0
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4465  001274  0E08               	movlw	low _dbuf
  4466  001276  25E1               	addwf	efgtoa@i& (0+255),w,b
  4467  001278  6ED9               	movwf	fsr2l,c
  4468  00127A  0E01               	movlw	high _dbuf
  4469  00127C  21E2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4470  00127E  6EDA               	movwf	fsr2h,c
  4471  001280  0E00               	movlw	0
  4472  001282  6EDF               	movwf	indf2,c
  4473  001284                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4476  001284  0E00               	movlw	0
  4477  001286  6FD2               	movwf	(efgtoa@sign+1)& (0+255),b
  4478  001288  0E00               	movlw	0
  4479  00128A  6FD1               	movwf	efgtoa@sign& (0+255),b
  4480  00128C                     
  4481                           ; BSR set to: 0
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4483  00128C  BFE8               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4484  00128E  EF4D  F009         	goto	u9080
  4485  001292  EF4B  F009         	goto	u9081
  4486  001296                     u9081:
  4487  001296  EF55  F009         	goto	l6409
  4488  00129A                     u9080:
  4489  00129A                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4492  00129A  0E00               	movlw	0
  4493  00129C  6FD2               	movwf	(efgtoa@sign+1)& (0+255),b
  4494  00129E  0E01               	movlw	1
  4495  0012A0  6FD1               	movwf	efgtoa@sign& (0+255),b
  4496  0012A2                     
  4497                           ; BSR set to: 0
  4498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4499  0012A2  6DE7               	negf	efgtoa@e& (0+255),b
  4500  0012A4  1FE8               	comf	(efgtoa@e+1)& (0+255),f,b
  4501  0012A6  B0D8               	btfsc	status,0,c
  4502  0012A8  2BE8               	incf	(efgtoa@e+1)& (0+255),f,b
  4503  0012AA                     l6409:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4507  0012AA  0E00               	movlw	0
  4508  0012AC  6FD4               	movwf	(efgtoa@p+1)& (0+255),b
  4509  0012AE  0E02               	movlw	2
  4510  0012B0  6FD3               	movwf	efgtoa@p& (0+255),b
  4511                           
  4512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4513  0012B2  EF87  F009         	goto	l6421
  4514  0012B6                     l6411:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4518  0012B6  07E1               	decf	efgtoa@i& (0+255),f,b
  4519  0012B8  A0D8               	btfss	status,0,c
  4520  0012BA  07E2               	decf	(efgtoa@i+1)& (0+255),f,b
  4521  0012BC                     
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4524  0012BC  0E08               	movlw	low _dbuf
  4525  0012BE  25E1               	addwf	efgtoa@i& (0+255),w,b
  4526  0012C0  6ED9               	movwf	fsr2l,c
  4527  0012C2  0E01               	movlw	high _dbuf
  4528  0012C4  21E2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4529  0012C6  6EDA               	movwf	fsr2h,c
  4530  0012C8  C0E7  F060         	movff	efgtoa@e,___awmod@dividend
  4531  0012CC  C0E8  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  4532  0012D0  0E00               	movlw	0
  4533  0012D2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  4534  0012D4  0E0A               	movlw	10
  4535  0012D6  6F62               	movwf	___awmod@divisor& (0+255),b
  4536  0012D8  ECF1  F01F         	call	___awmod	;wreg free
  4537  0012DC  0100               	movlb	0	; () banked
  4538  0012DE  5160               	movf	?___awmod& (0+255),w,b
  4539  0012E0  0F30               	addlw	48
  4540  0012E2  6EDF               	movwf	indf2,c
  4541  0012E4                     
  4542                           ; BSR set to: 0
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4544  0012E4  C0E7  F060         	movff	efgtoa@e,___awdiv@dividend
  4545  0012E8  C0E8  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  4546  0012EC  0E00               	movlw	0
  4547  0012EE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4548  0012F0  0E0A               	movlw	10
  4549  0012F2  6F62               	movwf	___awdiv@divisor& (0+255),b
  4550  0012F4  EC2C  F01F         	call	___awdiv	;wreg free
  4551  0012F8  C060  F0E7         	movff	?___awdiv,efgtoa@e
  4552  0012FC  C061  F0E8         	movff	?___awdiv+1,efgtoa@e+1
  4553  001300                     
  4554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4555  001300  0100               	movlb	0	; () banked
  4556  001302  07D3               	decf	efgtoa@p& (0+255),f,b
  4557  001304  A0D8               	btfss	status,0,c
  4558  001306  07D4               	decf	(efgtoa@p+1)& (0+255),f,b
  4559  001308                     
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4562  001308  07D6               	decf	efgtoa@w& (0+255),f,b
  4563  00130A  A0D8               	btfss	status,0,c
  4564  00130C  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4565  00130E                     l6421:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4569  00130E  51E7               	movf	efgtoa@e& (0+255),w,b
  4570  001310  11E8               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4571  001312  A4D8               	btfss	status,2,c
  4572  001314  EF8E  F009         	goto	u9091
  4573  001318  EF90  F009         	goto	u9090
  4574  00131C                     u9091:
  4575  00131C  EF5B  F009         	goto	l6411
  4576  001320                     u9090:
  4577  001320                     
  4578                           ; BSR set to: 0
  4579  001320  BFD4               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4580  001322  EF9D  F009         	goto	u9100
  4581  001326  51D4               	movf	(efgtoa@p+1)& (0+255),w,b
  4582  001328  E106               	bnz	u9101
  4583  00132A  05D3               	decf	efgtoa@p& (0+255),w,b
  4584  00132C  B0D8               	btfsc	status,0,c
  4585  00132E  EF9B  F009         	goto	u9101
  4586  001332  EF9D  F009         	goto	u9100
  4587  001336                     u9101:
  4588  001336  EF5B  F009         	goto	l6411
  4589  00133A                     u9100:
  4590  00133A                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4593  00133A  07E1               	decf	efgtoa@i& (0+255),f,b
  4594  00133C  A0D8               	btfss	status,0,c
  4595  00133E  07E2               	decf	(efgtoa@i+1)& (0+255),f,b
  4596  001340                     
  4597                           ; BSR set to: 0
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4599  001340  51D1               	movf	efgtoa@sign& (0+255),w,b
  4600  001342  11D2               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4601  001344  A4D8               	btfss	status,2,c
  4602  001346  EFA7  F009         	goto	u9111
  4603  00134A  EFA9  F009         	goto	u9110
  4604  00134E                     u9111:
  4605  00134E  EFAF  F009         	goto	l6431
  4606  001352                     u9110:
  4607  001352                     
  4608                           ; BSR set to: 0
  4609  001352  0E00               	movlw	0
  4610  001354  6FC2               	movwf	(_efgtoa$770+1)& (0+255),b
  4611  001356  0E2B               	movlw	43
  4612  001358  6FC1               	movwf	_efgtoa$770& (0+255),b
  4613  00135A  EFB3  F009         	goto	l6433
  4614  00135E                     l6431:
  4615                           
  4616                           ; BSR set to: 0
  4617  00135E  0E00               	movlw	0
  4618  001360  6FC2               	movwf	(_efgtoa$770+1)& (0+255),b
  4619  001362  0E2D               	movlw	45
  4620  001364  6FC1               	movwf	_efgtoa$770& (0+255),b
  4621  001366                     l6433:
  4622                           
  4623                           ; BSR set to: 0
  4624  001366  0E08               	movlw	low _dbuf
  4625  001368  25E1               	addwf	efgtoa@i& (0+255),w,b
  4626  00136A  6ED9               	movwf	fsr2l,c
  4627  00136C  0E01               	movlw	high _dbuf
  4628  00136E  21E2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4629  001370  6EDA               	movwf	fsr2h,c
  4630  001372  C0C1  FFDF         	movff	_efgtoa$770,indf2
  4631  001376                     
  4632                           ; BSR set to: 0
  4633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4634  001376  07D6               	decf	efgtoa@w& (0+255),f,b
  4635  001378  A0D8               	btfss	status,0,c
  4636  00137A  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4637  00137C                     
  4638                           ; BSR set to: 0
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4640  00137C  07E1               	decf	efgtoa@i& (0+255),f,b
  4641  00137E  A0D8               	btfss	status,0,c
  4642  001380  07E2               	decf	(efgtoa@i+1)& (0+255),f,b
  4643  001382                     
  4644                           ; BSR set to: 0
  4645  001382  0EBF               	movlw	191
  4646  001384  6FB2               	movwf	??_efgtoa& (0+255),b
  4647  001386  0EFF               	movlw	255
  4648  001388  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  4649  00138A  51B1               	movf	efgtoa@c& (0+255),w,b
  4650  00138C  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  4651  00138E  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  4652  001390  51B2               	movf	??_efgtoa& (0+255),w,b
  4653  001392  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  4654  001394  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  4655  001396  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4656  001398  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  4657  00139A  E10A               	bnz	u9120
  4658  00139C  0E1A               	movlw	26
  4659  00139E  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  4660  0013A0  A0D8               	btfss	status,0,c
  4661  0013A2  EFD5  F009         	goto	u9121
  4662  0013A6  EFD8  F009         	goto	u9120
  4663  0013AA                     u9121:
  4664  0013AA  0E01               	movlw	1
  4665  0013AC  EFD9  F009         	goto	u9130
  4666  0013B0                     u9120:
  4667  0013B0  0E00               	movlw	0
  4668  0013B2                     u9130:
  4669  0013B2  6FC5               	movwf	_efgtoa$772& (0+255),b
  4670  0013B4  6BC6               	clrf	(_efgtoa$772+1)& (0+255),b
  4671  0013B6                     
  4672                           ; BSR set to: 0
  4673  0013B6  51C5               	movf	_efgtoa$772& (0+255),w,b
  4674  0013B8  11C6               	iorwf	(_efgtoa$772+1)& (0+255),w,b
  4675  0013BA  A4D8               	btfss	status,2,c
  4676  0013BC  EFE2  F009         	goto	u9141
  4677  0013C0  EFE4  F009         	goto	u9140
  4678  0013C4                     u9141:
  4679  0013C4  EFEA  F009         	goto	l6447
  4680  0013C8                     u9140:
  4681  0013C8                     
  4682                           ; BSR set to: 0
  4683  0013C8  0E00               	movlw	0
  4684  0013CA  6FC4               	movwf	(_efgtoa$771+1)& (0+255),b
  4685  0013CC  0E65               	movlw	101
  4686  0013CE  6FC3               	movwf	_efgtoa$771& (0+255),b
  4687  0013D0  EFEE  F009         	goto	l6449
  4688  0013D4                     l6447:
  4689                           
  4690                           ; BSR set to: 0
  4691  0013D4  0E00               	movlw	0
  4692  0013D6  6FC4               	movwf	(_efgtoa$771+1)& (0+255),b
  4693  0013D8  0E45               	movlw	69
  4694  0013DA  6FC3               	movwf	_efgtoa$771& (0+255),b
  4695  0013DC                     l6449:
  4696                           
  4697                           ; BSR set to: 0
  4698  0013DC  0E08               	movlw	low _dbuf
  4699  0013DE  25E1               	addwf	efgtoa@i& (0+255),w,b
  4700  0013E0  6ED9               	movwf	fsr2l,c
  4701  0013E2  0E01               	movlw	high _dbuf
  4702  0013E4  21E2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4703  0013E6  6EDA               	movwf	fsr2h,c
  4704  0013E8  C0C3  FFDF         	movff	_efgtoa$771,indf2
  4705  0013EC                     
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4708  0013EC  07D6               	decf	efgtoa@w& (0+255),f,b
  4709  0013EE  A0D8               	btfss	status,0,c
  4710  0013F0  07D7               	decf	(efgtoa@w+1)& (0+255),f,b
  4711  0013F2                     
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4714  0013F2  0E08               	movlw	low _dbuf
  4715  0013F4  25E9               	addwf	efgtoa@n& (0+255),w,b
  4716  0013F6  6F60               	movwf	strcpy@dest& (0+255),b
  4717  0013F8  0E01               	movlw	high _dbuf
  4718  0013FA  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4719  0013FC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4720  0013FE  0E08               	movlw	low _dbuf
  4721  001400  25E1               	addwf	efgtoa@i& (0+255),w,b
  4722  001402  6F62               	movwf	strcpy@src& (0+255),b
  4723  001404  0E01               	movlw	high _dbuf
  4724  001406  21E2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4725  001408  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4726  00140A  ECDF  F022         	call	_strcpy	;wreg free
  4727  00140E  EFDE  F004         	goto	l6205
  4728  001412                     l406:
  4729  001412  0012               	return		;funcret
  4730  001414                     __end_of_efgtoa:
  4731                           	opt callstack 0
  4732                           
  4733 ;; *************** function _tolower *****************
  4734 ;; Defined at:
  4735 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  c               2    6[BANK0 ] int 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  2    6[BANK0 ] int 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         0       2       0       0       0       0       0       0       0
  4750 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4751 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4752 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4753 ;;Total ram usage:        8 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    5
  4756 ;; This function calls:
  4757 ;;		_isupper
  4758 ;; This function is called by:
  4759 ;;		_efgtoa
  4760 ;;		_vfpfcnvrt
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text9
  4765  00443E                     __ptext9:
  4766                           	opt callstack 0
  4767  00443E                     _tolower:
  4768                           	opt callstack 21
  4769  00443E  0EBF               	movlw	191
  4770  004440  0100               	movlb	0	; () banked
  4771  004442  6F68               	movwf	??_tolower& (0+255),b
  4772  004444  0EFF               	movlw	255
  4773  004446  6F69               	movwf	(??_tolower+1)& (0+255),b
  4774  004448  C066  F06A         	movff	tolower@c,??_tolower+2
  4775  00444C  C067  F06B         	movff	tolower@c+1,??_tolower+3
  4776  004450  5168               	movf	??_tolower& (0+255),w,b
  4777  004452  276A               	addwf	(??_tolower+2)& (0+255),f,b
  4778  004454  5169               	movf	(??_tolower+1)& (0+255),w,b
  4779  004456  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  4780  004458  516B               	movf	(??_tolower+3)& (0+255),w,b
  4781  00445A  E10A               	bnz	u7340
  4782  00445C  0E1A               	movlw	26
  4783  00445E  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  4784  004460  A0D8               	btfss	status,0,c
  4785  004462  EF35  F022         	goto	u7341
  4786  004466  EF38  F022         	goto	u7340
  4787  00446A                     u7341:
  4788  00446A  0E01               	movlw	1
  4789  00446C  EF39  F022         	goto	u7350
  4790  004470                     u7340:
  4791  004470  0E00               	movlw	0
  4792  004472                     u7350:
  4793  004472  6F6C               	movwf	_tolower$1380& (0+255),b
  4794  004474  6B6D               	clrf	(_tolower$1380+1)& (0+255),b
  4795  004476                     
  4796                           ; BSR set to: 0
  4797  004476  516C               	movf	_tolower$1380& (0+255),w,b
  4798  004478  116D               	iorwf	(_tolower$1380+1)& (0+255),w,b
  4799  00447A  B4D8               	btfsc	status,2,c
  4800  00447C  EF42  F022         	goto	u7361
  4801  004480  EF44  F022         	goto	u7360
  4802  004484                     u7361:
  4803  004484  EF4B  F022         	goto	l1325
  4804  004488                     u7360:
  4805  004488                     
  4806                           ; BSR set to: 0
  4807  004488  0E20               	movlw	32
  4808  00448A  1166               	iorwf	tolower@c& (0+255),w,b
  4809  00448C  6F66               	movwf	?_tolower& (0+255),b
  4810  00448E  5167               	movf	(tolower@c+1)& (0+255),w,b
  4811  004490  6F67               	movwf	(?_tolower+1)& (0+255),b
  4812  004492  EF4F  F022         	goto	l1330
  4813  004496                     l1325:
  4814                           
  4815                           ; BSR set to: 0
  4816  004496  C066  F066         	movff	tolower@c,?_tolower
  4817  00449A  C067  F067         	movff	tolower@c+1,?_tolower+1
  4818  00449E                     l1330:
  4819                           
  4820                           ; BSR set to: 0
  4821  00449E  0012               	return		;funcret
  4822  0044A0                     __end_of_tolower:
  4823                           	opt callstack 0
  4824                           
  4825 ;; *************** function _isupper *****************
  4826 ;; Defined at:
  4827 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  c               2    0[BANK0 ] int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2    0[BANK0 ] int 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4841 ;;      Params:         0       2       0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4843 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4844 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4845 ;;Total ram usage:        6 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    4
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_efgtoa
  4852 ;;		_vfpfcnvrt
  4853 ;;		_tolower
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text10
  4858  004950                     __ptext10:
  4859                           	opt callstack 0
  4860  004950                     _isupper:
  4861                           	opt callstack 21
  4862  004950  0EBF               	movlw	191
  4863  004952  0100               	movlb	0	; () banked
  4864  004954  6F62               	movwf	??_isupper& (0+255),b
  4865  004956  0EFF               	movlw	255
  4866  004958  6F63               	movwf	(??_isupper+1)& (0+255),b
  4867  00495A  C060  F064         	movff	isupper@c,??_isupper+2
  4868  00495E  C061  F065         	movff	isupper@c+1,??_isupper+3
  4869  004962  5162               	movf	??_isupper& (0+255),w,b
  4870  004964  2764               	addwf	(??_isupper+2)& (0+255),f,b
  4871  004966  5163               	movf	(??_isupper+1)& (0+255),w,b
  4872  004968  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  4873  00496A  5165               	movf	(??_isupper+3)& (0+255),w,b
  4874  00496C  E10A               	bnz	u6790
  4875  00496E  0E1A               	movlw	26
  4876  004970  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  4877  004972  A0D8               	btfss	status,0,c
  4878  004974  EFBE  F024         	goto	u6791
  4879  004978  EFC1  F024         	goto	u6790
  4880  00497C                     u6791:
  4881  00497C  0E01               	movlw	1
  4882  00497E  EFC2  F024         	goto	u6800
  4883  004982                     u6790:
  4884  004982  0E00               	movlw	0
  4885  004984                     u6800:
  4886  004984  6F60               	movwf	?_isupper& (0+255),b
  4887  004986  6B61               	clrf	(?_isupper+1)& (0+255),b
  4888  004988                     
  4889                           ; BSR set to: 0
  4890  004988  0012               	return		;funcret
  4891  00498A                     __end_of_isupper:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _strcpy *****************
  4895 ;; Defined at:
  4896 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4899 ;;		 -> dbuf(80), 
  4900 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4901 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  4902 ;;		 -> dbuf(80), 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4905 ;;		 -> dbuf(80), 
  4906 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4907 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  4908 ;;		 -> dbuf(80), 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  2    0[BANK0 ] PTR unsigned char 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4918 ;;      Params:         0       4       0       0       0       0       0       0       0
  4919 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4920 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4921 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4922 ;;Total ram usage:       10 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    4
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_efgtoa
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text11
  4933  0045BE                     __ptext11:
  4934                           	opt callstack 0
  4935  0045BE                     _strcpy:
  4936                           	opt callstack 21
  4937  0045BE  C062  F066         	movff	strcpy@src,strcpy@s
  4938  0045C2  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  4939  0045C6  C060  F068         	movff	strcpy@dest,strcpy@d
  4940  0045CA  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  4941  0045CE                     l5455:
  4942  0045CE  0100               	movlb	0	; () banked
  4943  0045D0  5166               	movf	strcpy@s& (0+255),w,b
  4944  0045D2  6F64               	movwf	??_strcpy& (0+255),b
  4945  0045D4  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4946  0045D6  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4947  0045D8  4B66               	infsnz	strcpy@s& (0+255),f,b
  4948  0045DA  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4949  0045DC  C064  FFF6         	movff	??_strcpy,tblptrl
  4950  0045E0  C065  FFF7         	movff	??_strcpy+1,tblptrh
  4951  0045E4  6AF8               	clrf	tblptru,c
  4952  0045E6  C068  FFD9         	movff	strcpy@d,fsr2l
  4953  0045EA  C069  FFDA         	movff	strcpy@d+1,fsr2h
  4954  0045EE  4B68               	infsnz	strcpy@d& (0+255),f,b
  4955  0045F0  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4956  0045F2  0E07               	movlw	(high __ramtop+-1)
  4957  0045F4  64F7               	cpfsgt	tblptrh,c
  4958  0045F6  D003               	bra	u7327
  4959  0045F8  0008               	tblrd		*
  4960  0045FA  50F5               	movf	tablat,w,c
  4961  0045FC  D005               	bra	u7320
  4962  0045FE                     u7327:
  4963  0045FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4964  004602  CFF7 FFE2          	movff	tblptrh,fsr1h
  4965  004606  50E7               	movf	indf1,w,c
  4966  004608                     u7320:
  4967  004608  6EDF               	movwf	indf2,c
  4968  00460A  50DF               	movf	indf2,w,c
  4969  00460C  A4D8               	btfss	status,2,c
  4970  00460E  EF0B  F023         	goto	u7331
  4971  004612  EF0D  F023         	goto	u7330
  4972  004616                     u7331:
  4973  004616  EFE7  F022         	goto	l5455
  4974  00461A                     u7330:
  4975  00461A  0012               	return		;funcret
  4976  00461C                     __end_of_strcpy:
  4977                           	opt callstack 0
  4978                           
  4979 ;; *************** function _floorf *****************
  4980 ;; Defined at:
  4981 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  x               4   47[BANK0 ] float 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  u               4   63[BANK0 ] struct .
  4986 ;;  m               4   57[BANK0 ] unsigned long 
  4987 ;;  e               2   61[BANK0 ] int 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  4   47[BANK0 ] float 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4997 ;;      Params:         0       4       0       0       0       0       0       0       0
  4998 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4999 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5000 ;;      Totals:         0      20       0       0       0       0       0       0       0
  5001 ;;Total ram usage:       20 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    4
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_efgtoa
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text12
  5012  002ADE                     __ptext12:
  5013                           	opt callstack 0
  5014  002ADE                     _floorf:
  5015                           	opt callstack 21
  5016  002ADE  C025  F09F         	movff	floorf@F524,floorf@u
  5017  002AE2  C026  F0A0         	movff	floorf@F524+1,floorf@u+1
  5018  002AE6  C027  F0A1         	movff	floorf@F524+2,floorf@u+2
  5019  002AEA  C028  F0A2         	movff	floorf@F524+3,floorf@u+3
  5020  002AEE  C08F  F09F         	movff	floorf@x,floorf@u
  5021  002AF2  C090  F0A0         	movff	floorf@x+1,floorf@u+1
  5022  002AF6  C091  F0A1         	movff	floorf@x+2,floorf@u+2
  5023  002AFA  C092  F0A2         	movff	floorf@x+3,floorf@u+3
  5024  002AFE  0E81               	movlw	129
  5025  002B00  0100               	movlb	0	; () banked
  5026  002B02  6F93               	movwf	??_floorf& (0+255),b
  5027  002B04  0EFF               	movlw	255
  5028  002B06  6F94               	movwf	(??_floorf+1)& (0+255),b
  5029  002B08  C09F  F095         	movff	floorf@u,??_floorf+2
  5030  002B0C  C0A0  F096         	movff	floorf@u+1,??_floorf+3
  5031  002B10  C0A1  F097         	movff	floorf@u+2,??_floorf+4
  5032  002B14  C0A2  F098         	movff	floorf@u+3,??_floorf+5
  5033  002B18  0E18               	movlw	24
  5034  002B1A  EF94  F015         	goto	u7370
  5035  002B1E                     u7375:
  5036  002B1E  90D8               	bcf	status,0,c
  5037  002B20  3398               	rrcf	(??_floorf+5)& (0+255),f,b
  5038  002B22  3397               	rrcf	(??_floorf+4)& (0+255),f,b
  5039  002B24  3396               	rrcf	(??_floorf+3)& (0+255),f,b
  5040  002B26  3395               	rrcf	(??_floorf+2)& (0+255),f,b
  5041  002B28                     u7370:
  5042  002B28  2EE8               	decfsz	wreg,f,c
  5043  002B2A  EF8F  F015         	goto	u7375
  5044  002B2E  5195               	movf	(??_floorf+2)& (0+255),w,b
  5045  002B30  2593               	addwf	??_floorf& (0+255),w,b
  5046  002B32  6F9D               	movwf	floorf@e& (0+255),b
  5047  002B34  0E00               	movlw	0
  5048  002B36  2194               	addwfc	(??_floorf+1)& (0+255),w,b
  5049  002B38  6F9E               	movwf	(floorf@e+1)& (0+255),b
  5050  002B3A  BF9E               	btfsc	(floorf@e+1)& (0+255),7,b
  5051  002B3C  EFA9  F015         	goto	u7381
  5052  002B40  519E               	movf	(floorf@e+1)& (0+255),w,b
  5053  002B42  E109               	bnz	u7380
  5054  002B44  0E17               	movlw	23
  5055  002B46  5D9D               	subwf	floorf@e& (0+255),w,b
  5056  002B48  A0D8               	btfss	status,0,c
  5057  002B4A  EFA9  F015         	goto	u7381
  5058  002B4E  EFAB  F015         	goto	u7380
  5059  002B52                     u7381:
  5060  002B52  EFB5  F015         	goto	l5473
  5061  002B56                     u7380:
  5062  002B56                     l5471:
  5063                           
  5064                           ; BSR set to: 0
  5065  002B56  C08F  F08F         	movff	floorf@x,?_floorf
  5066  002B5A  C090  F090         	movff	floorf@x+1,?_floorf+1
  5067  002B5E  C091  F091         	movff	floorf@x+2,?_floorf+2
  5068  002B62  C092  F092         	movff	floorf@x+3,?_floorf+3
  5069  002B66  EF79  F016         	goto	l1242
  5070  002B6A                     l5473:
  5071                           
  5072                           ; BSR set to: 0
  5073  002B6A  BF9E               	btfsc	(floorf@e+1)& (0+255),7,b
  5074  002B6C  EFBA  F015         	goto	u7391
  5075  002B70  EFBC  F015         	goto	u7390
  5076  002B74                     u7391:
  5077  002B74  EF2D  F016         	goto	l5483
  5078  002B78                     u7390:
  5079  002B78                     
  5080                           ; BSR set to: 0
  5081  002B78  C09D  F093         	movff	floorf@e,??_floorf
  5082  002B7C  0EFF               	movlw	255
  5083  002B7E  6F94               	movwf	(??_floorf+1)& (0+255),b
  5084  002B80  0EFF               	movlw	255
  5085  002B82  6F95               	movwf	(??_floorf+2)& (0+255),b
  5086  002B84  0E7F               	movlw	127
  5087  002B86  6F96               	movwf	(??_floorf+3)& (0+255),b
  5088  002B88  0E00               	movlw	0
  5089  002B8A  6F97               	movwf	(??_floorf+4)& (0+255),b
  5090  002B8C                     u7405:
  5091  002B8C  6793               	tstfsz	??_floorf& (0+255),b
  5092  002B8E  EFCB  F015         	goto	u7406
  5093  002B92  EFD3  F015         	goto	u7407
  5094  002B96                     u7406:
  5095  002B96  3597               	rlcf	(??_floorf+4)& (0+255),w,b
  5096  002B98  3397               	rrcf	(??_floorf+4)& (0+255),f,b
  5097  002B9A  3396               	rrcf	(??_floorf+3)& (0+255),f,b
  5098  002B9C  3395               	rrcf	(??_floorf+2)& (0+255),f,b
  5099  002B9E  3394               	rrcf	(??_floorf+1)& (0+255),f,b
  5100  002BA0  2F93               	decfsz	??_floorf& (0+255),f,b
  5101  002BA2  EFC6  F015         	goto	u7405
  5102  002BA6                     u7407:
  5103  002BA6  C094  F099         	movff	??_floorf+1,floorf@m
  5104  002BAA  C095  F09A         	movff	??_floorf+2,floorf@m+1
  5105  002BAE  C096  F09B         	movff	??_floorf+3,floorf@m+2
  5106  002BB2  C097  F09C         	movff	??_floorf+4,floorf@m+3
  5107  002BB6  0100               	movlb	0	; () banked
  5108  002BB8  5199               	movf	floorf@m& (0+255),w,b
  5109  002BBA  159F               	andwf	floorf@u& (0+255),w,b
  5110  002BBC  6F93               	movwf	??_floorf& (0+255),b
  5111  002BBE  519A               	movf	(floorf@m+1)& (0+255),w,b
  5112  002BC0  15A0               	andwf	(floorf@u+1)& (0+255),w,b
  5113  002BC2  6F94               	movwf	(??_floorf+1)& (0+255),b
  5114  002BC4  519B               	movf	(floorf@m+2)& (0+255),w,b
  5115  002BC6  15A1               	andwf	(floorf@u+2)& (0+255),w,b
  5116  002BC8  6F95               	movwf	(??_floorf+2)& (0+255),b
  5117  002BCA  519C               	movf	(floorf@m+3)& (0+255),w,b
  5118  002BCC  15A2               	andwf	(floorf@u+3)& (0+255),w,b
  5119  002BCE  6F96               	movwf	(??_floorf+3)& (0+255),b
  5120  002BD0  5193               	movf	??_floorf& (0+255),w,b
  5121  002BD2  1194               	iorwf	(??_floorf+1)& (0+255),w,b
  5122  002BD4  1195               	iorwf	(??_floorf+2)& (0+255),w,b
  5123  002BD6  1196               	iorwf	(??_floorf+3)& (0+255),w,b
  5124  002BD8  A4D8               	btfss	status,2,c
  5125  002BDA  EFF1  F015         	goto	u7411
  5126  002BDE  EFF3  F015         	goto	u7410
  5127  002BE2                     u7411:
  5128  002BE2  EFF5  F015         	goto	l5479
  5129  002BE6                     u7410:
  5130  002BE6  EFAB  F015         	goto	l5471
  5131  002BEA                     l5479:
  5132                           
  5133                           ; BSR set to: 0
  5134  002BEA  C09F  F093         	movff	floorf@u,??_floorf
  5135  002BEE  C0A0  F094         	movff	floorf@u+1,??_floorf+1
  5136  002BF2  C0A1  F095         	movff	floorf@u+2,??_floorf+2
  5137  002BF6  C0A2  F096         	movff	floorf@u+3,??_floorf+3
  5138  002BFA  0E20               	movlw	32
  5139  002BFC  EF05  F016         	goto	u7420
  5140  002C00                     u7425:
  5141  002C00  90D8               	bcf	status,0,c
  5142  002C02  3396               	rrcf	(??_floorf+3)& (0+255),f,b
  5143  002C04  3395               	rrcf	(??_floorf+2)& (0+255),f,b
  5144  002C06  3394               	rrcf	(??_floorf+1)& (0+255),f,b
  5145  002C08  3393               	rrcf	??_floorf& (0+255),f,b
  5146  002C0A                     u7420:
  5147  002C0A  2EE8               	decfsz	wreg,f,c
  5148  002C0C  EF00  F016         	goto	u7425
  5149  002C10  5193               	movf	??_floorf& (0+255),w,b
  5150  002C12  1194               	iorwf	(??_floorf+1)& (0+255),w,b
  5151  002C14  1195               	iorwf	(??_floorf+2)& (0+255),w,b
  5152  002C16  1196               	iorwf	(??_floorf+3)& (0+255),w,b
  5153  002C18  B4D8               	btfsc	status,2,c
  5154  002C1A  EF11  F016         	goto	u7431
  5155  002C1E  EF13  F016         	goto	u7430
  5156  002C22                     u7431:
  5157  002C22  EF1B  F016         	goto	l1245
  5158  002C26                     u7430:
  5159  002C26                     
  5160                           ; BSR set to: 0
  5161  002C26  5199               	movf	floorf@m& (0+255),w,b
  5162  002C28  279F               	addwf	floorf@u& (0+255),f,b
  5163  002C2A  519A               	movf	(floorf@m+1)& (0+255),w,b
  5164  002C2C  23A0               	addwfc	(floorf@u+1)& (0+255),f,b
  5165  002C2E  519B               	movf	(floorf@m+2)& (0+255),w,b
  5166  002C30  23A1               	addwfc	(floorf@u+2)& (0+255),f,b
  5167  002C32  519C               	movf	(floorf@m+3)& (0+255),w,b
  5168  002C34  23A2               	addwfc	(floorf@u+3)& (0+255),f,b
  5169  002C36                     l1245:
  5170                           
  5171                           ; BSR set to: 0
  5172  002C36  1D99               	comf	floorf@m& (0+255),w,b
  5173  002C38  6F93               	movwf	??_floorf& (0+255),b
  5174  002C3A  1D9A               	comf	(floorf@m+1)& (0+255),w,b
  5175  002C3C  6F94               	movwf	(??_floorf+1)& (0+255),b
  5176  002C3E  1D9B               	comf	(floorf@m+2)& (0+255),w,b
  5177  002C40  6F95               	movwf	(??_floorf+2)& (0+255),b
  5178  002C42  1D9C               	comf	(floorf@m+3)& (0+255),w,b
  5179  002C44  6F96               	movwf	(??_floorf+3)& (0+255),b
  5180  002C46  5193               	movf	??_floorf& (0+255),w,b
  5181  002C48  179F               	andwf	floorf@u& (0+255),f,b
  5182  002C4A  5194               	movf	(??_floorf+1)& (0+255),w,b
  5183  002C4C  17A0               	andwf	(floorf@u+1)& (0+255),f,b
  5184  002C4E  5195               	movf	(??_floorf+2)& (0+255),w,b
  5185  002C50  17A1               	andwf	(floorf@u+2)& (0+255),f,b
  5186  002C52  5196               	movf	(??_floorf+3)& (0+255),w,b
  5187  002C54  17A2               	andwf	(floorf@u+3)& (0+255),f,b
  5188  002C56  EF71  F016         	goto	l5491
  5189  002C5A                     l5483:
  5190                           
  5191                           ; BSR set to: 0
  5192  002C5A  C09F  F093         	movff	floorf@u,??_floorf
  5193  002C5E  C0A0  F094         	movff	floorf@u+1,??_floorf+1
  5194  002C62  C0A1  F095         	movff	floorf@u+2,??_floorf+2
  5195  002C66  C0A2  F096         	movff	floorf@u+3,??_floorf+3
  5196  002C6A  0E20               	movlw	32
  5197  002C6C  EF3D  F016         	goto	u7440
  5198  002C70                     u7445:
  5199  002C70  90D8               	bcf	status,0,c
  5200  002C72  3396               	rrcf	(??_floorf+3)& (0+255),f,b
  5201  002C74  3395               	rrcf	(??_floorf+2)& (0+255),f,b
  5202  002C76  3394               	rrcf	(??_floorf+1)& (0+255),f,b
  5203  002C78  3393               	rrcf	??_floorf& (0+255),f,b
  5204  002C7A                     u7440:
  5205  002C7A  2EE8               	decfsz	wreg,f,c
  5206  002C7C  EF38  F016         	goto	u7445
  5207  002C80  5193               	movf	??_floorf& (0+255),w,b
  5208  002C82  1194               	iorwf	(??_floorf+1)& (0+255),w,b
  5209  002C84  1195               	iorwf	(??_floorf+2)& (0+255),w,b
  5210  002C86  1196               	iorwf	(??_floorf+3)& (0+255),w,b
  5211  002C88  A4D8               	btfss	status,2,c
  5212  002C8A  EF49  F016         	goto	u7451
  5213  002C8E  EF4B  F016         	goto	u7450
  5214  002C92                     u7451:
  5215  002C92  EF55  F016         	goto	l5487
  5216  002C96                     u7450:
  5217  002C96                     
  5218                           ; BSR set to: 0
  5219  002C96  0E00               	movlw	0
  5220  002C98  6F9F               	movwf	floorf@u& (0+255),b
  5221  002C9A  0E00               	movlw	0
  5222  002C9C  6FA0               	movwf	(floorf@u+1)& (0+255),b
  5223  002C9E  0E00               	movlw	0
  5224  002CA0  6FA1               	movwf	(floorf@u+2)& (0+255),b
  5225  002CA2  0E00               	movlw	0
  5226  002CA4  6FA2               	movwf	(floorf@u+3)& (0+255),b
  5227  002CA6  EF71  F016         	goto	l5491
  5228  002CAA                     l5487:
  5229                           
  5230                           ; BSR set to: 0
  5231  002CAA  90D8               	bcf	status,0,c
  5232  002CAC  359F               	rlcf	floorf@u& (0+255),w,b
  5233  002CAE  6F93               	movwf	??_floorf& (0+255),b
  5234  002CB0  35A0               	rlcf	(floorf@u+1)& (0+255),w,b
  5235  002CB2  6F94               	movwf	(??_floorf+1)& (0+255),b
  5236  002CB4  35A1               	rlcf	(floorf@u+2)& (0+255),w,b
  5237  002CB6  6F95               	movwf	(??_floorf+2)& (0+255),b
  5238  002CB8  35A2               	rlcf	(floorf@u+3)& (0+255),w,b
  5239  002CBA  6F96               	movwf	(??_floorf+3)& (0+255),b
  5240  002CBC  5193               	movf	??_floorf& (0+255),w,b
  5241  002CBE  1194               	iorwf	(??_floorf+1)& (0+255),w,b
  5242  002CC0  1195               	iorwf	(??_floorf+2)& (0+255),w,b
  5243  002CC2  1196               	iorwf	(??_floorf+3)& (0+255),w,b
  5244  002CC4  B4D8               	btfsc	status,2,c
  5245  002CC6  EF67  F016         	goto	u7461
  5246  002CCA  EF69  F016         	goto	u7460
  5247  002CCE                     u7461:
  5248  002CCE  EF71  F016         	goto	l5491
  5249  002CD2                     u7460:
  5250  002CD2                     
  5251                           ; BSR set to: 0
  5252  002CD2  0E00               	movlw	0
  5253  002CD4  6F9F               	movwf	floorf@u& (0+255),b
  5254  002CD6  0E00               	movlw	0
  5255  002CD8  6FA0               	movwf	(floorf@u+1)& (0+255),b
  5256  002CDA  0E80               	movlw	128
  5257  002CDC  6FA1               	movwf	(floorf@u+2)& (0+255),b
  5258  002CDE  0EBF               	movlw	191
  5259  002CE0  6FA2               	movwf	(floorf@u+3)& (0+255),b
  5260  002CE2                     l5491:
  5261                           
  5262                           ; BSR set to: 0
  5263  002CE2  C09F  F08F         	movff	floorf@u,?_floorf
  5264  002CE6  C0A0  F090         	movff	floorf@u+1,?_floorf+1
  5265  002CEA  C0A1  F091         	movff	floorf@u+2,?_floorf+2
  5266  002CEE  C0A2  F092         	movff	floorf@u+3,?_floorf+3
  5267  002CF2                     l1242:
  5268                           
  5269                           ; BSR set to: 0
  5270  002CF2  0012               	return		;funcret
  5271  002CF4                     __end_of_floorf:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function ___fpclassifyf *****************
  5275 ;; Defined at:
  5276 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  x               4    0[BANK0 ] float 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  u               4   10[BANK0 ] struct .
  5281 ;;  e               2    8[BANK0 ] int 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  2    0[BANK0 ] int 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5291 ;;      Params:         0       4       0       0       0       0       0       0       0
  5292 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5293 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5294 ;;      Totals:         0      14       0       0       0       0       0       0       0
  5295 ;;Total ram usage:       14 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    4
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_efgtoa
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text13
  5306  0039F2                     __ptext13:
  5307                           	opt callstack 0
  5308  0039F2                     ___fpclassifyf:
  5309                           	opt callstack 21
  5310  0039F2  C029  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5311  0039F6  C02A  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5312  0039FA  C02B  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5313  0039FE  C02C  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5314  003A02  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5315  003A06  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5316  003A0A  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5317  003A0E  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5318  003A12  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5319  003A16  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5320  003A1A  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5321  003A1E  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5322  003A22  0E18               	movlw	24
  5323  003A24  EF1A  F01D         	goto	u7250
  5324  003A28                     u7255:
  5325  003A28  0100               	movlb	0	; () banked
  5326  003A2A  90D8               	bcf	status,0,c
  5327  003A2C  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5328  003A2E  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5329  003A30  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5330  003A32  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5331  003A34                     u7250:
  5332  003A34  2EE8               	decfsz	wreg,f,c
  5333  003A36  EF14  F01D         	goto	u7255
  5334  003A3A  5164               	movf	??___fpclassifyf& (0+255),w,b
  5335  003A3C  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5336  003A3E  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5337  003A40  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5338  003A42  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5339  003A44  A4D8               	btfss	status,2,c
  5340  003A46  EF27  F01D         	goto	u7261
  5341  003A4A  EF29  F01D         	goto	u7260
  5342  003A4E                     u7261:
  5343  003A4E  EF49  F01D         	goto	l5443
  5344  003A52                     u7260:
  5345  003A52                     
  5346                           ; BSR set to: 0
  5347  003A52  90D8               	bcf	status,0,c
  5348  003A54  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5349  003A56  6F64               	movwf	??___fpclassifyf& (0+255),b
  5350  003A58  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5351  003A5A  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5352  003A5C  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5353  003A5E  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5354  003A60  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5355  003A62  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5356  003A64  5164               	movf	??___fpclassifyf& (0+255),w,b
  5357  003A66  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5358  003A68  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5359  003A6A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5360  003A6C  A4D8               	btfss	status,2,c
  5361  003A6E  EF3B  F01D         	goto	u7271
  5362  003A72  EF3D  F01D         	goto	u7270
  5363  003A76                     u7271:
  5364  003A76  EF43  F01D         	goto	l5439
  5365  003A7A                     u7270:
  5366  003A7A                     
  5367                           ; BSR set to: 0
  5368  003A7A  0E00               	movlw	0
  5369  003A7C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5370  003A7E  0E02               	movlw	2
  5371  003A80  6F60               	movwf	?___fpclassifyf& (0+255),b
  5372  003A82  EF78  F01D         	goto	l1197
  5373  003A86                     l5439:
  5374                           
  5375                           ; BSR set to: 0
  5376  003A86  0E00               	movlw	0
  5377  003A88  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5378  003A8A  0E03               	movlw	3
  5379  003A8C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5380  003A8E  EF78  F01D         	goto	l1197
  5381  003A92                     l5443:
  5382                           
  5383                           ; BSR set to: 0
  5384  003A92  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5385  003A94  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5386  003A96  A4D8               	btfss	status,2,c
  5387  003A98  EF50  F01D         	goto	u7281
  5388  003A9C  EF52  F01D         	goto	u7280
  5389  003AA0                     u7281:
  5390  003AA0  EF74  F01D         	goto	l5449
  5391  003AA4                     u7280:
  5392  003AA4                     
  5393                           ; BSR set to: 0
  5394  003AA4  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5395  003AA8  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5396  003AAC  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5397  003AB0  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5398  003AB4  0E09               	movlw	9
  5399  003AB6                     u7295:
  5400  003AB6  90D8               	bcf	status,0,c
  5401  003AB8  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5402  003ABA  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5403  003ABC  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5404  003ABE  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5405  003AC0  2EE8               	decfsz	wreg,f,c
  5406  003AC2  EF5B  F01D         	goto	u7295
  5407  003AC6  5164               	movf	??___fpclassifyf& (0+255),w,b
  5408  003AC8  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5409  003ACA  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5410  003ACC  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5411  003ACE  B4D8               	btfsc	status,2,c
  5412  003AD0  EF6C  F01D         	goto	u7301
  5413  003AD4  EF6F  F01D         	goto	u7300
  5414  003AD8                     u7301:
  5415  003AD8  0E01               	movlw	1
  5416  003ADA  EF70  F01D         	goto	u7310
  5417  003ADE                     u7300:
  5418  003ADE  0E00               	movlw	0
  5419  003AE0                     u7310:
  5420  003AE0  6F60               	movwf	?___fpclassifyf& (0+255),b
  5421  003AE2  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5422  003AE4  EF78  F01D         	goto	l1197
  5423  003AE8                     l5449:
  5424                           
  5425                           ; BSR set to: 0
  5426  003AE8  0E00               	movlw	0
  5427  003AEA  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5428  003AEC  0E04               	movlw	4
  5429  003AEE  6F60               	movwf	?___fpclassifyf& (0+255),b
  5430  003AF0                     l1197:
  5431                           
  5432                           ; BSR set to: 0
  5433  003AF0  0012               	return		;funcret
  5434  003AF2                     __end_of___fpclassifyf:
  5435                           	opt callstack 0
  5436                           
  5437 ;; *************** function ___flsub *****************
  5438 ;; Defined at:
  5439 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  b               4   63[BANK0 ] int 
  5442 ;;  a               4   67[BANK0 ] int 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  4   63[BANK0 ] int 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5454 ;;      Params:         0       8       0       0       0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5457 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5458 ;;Total ram usage:        8 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    5
  5461 ;; This function calls:
  5462 ;;		___fladd
  5463 ;; This function is called by:
  5464 ;;		_efgtoa
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text14
  5469  0047BE                     __ptext14:
  5470                           	opt callstack 0
  5471  0047BE                     ___flsub:
  5472                           	opt callstack 20
  5473  0047BE  0E00               	movlw	0
  5474  0047C0  0100               	movlb	0	; () banked
  5475  0047C2  1BA3               	xorwf	___flsub@a& (0+255),f,b
  5476  0047C4  0E00               	movlw	0
  5477  0047C6  1BA4               	xorwf	(___flsub@a+1)& (0+255),f,b
  5478  0047C8  0E00               	movlw	0
  5479  0047CA  1BA5               	xorwf	(___flsub@a+2)& (0+255),f,b
  5480  0047CC  0E80               	movlw	128
  5481  0047CE  1BA6               	xorwf	(___flsub@a+3)& (0+255),f,b
  5482  0047D0                     
  5483                           ; BSR set to: 0
  5484  0047D0  C09F  F08F         	movff	___flsub@b,___fladd@b
  5485  0047D4  C0A0  F090         	movff	___flsub@b+1,___fladd@b+1
  5486  0047D8  C0A1  F091         	movff	___flsub@b+2,___fladd@b+2
  5487  0047DC  C0A2  F092         	movff	___flsub@b+3,___fladd@b+3
  5488  0047E0  C0A3  F093         	movff	___flsub@a,___fladd@a
  5489  0047E4  C0A4  F094         	movff	___flsub@a+1,___fladd@a+1
  5490  0047E8  C0A5  F095         	movff	___flsub@a+2,___fladd@a+2
  5491  0047EC  C0A6  F096         	movff	___flsub@a+3,___fladd@a+3
  5492  0047F0  ECAD  F00C         	call	___fladd	;wreg free
  5493  0047F4  C08F  F09F         	movff	?___fladd,?___flsub
  5494  0047F8  C090  F0A0         	movff	?___fladd+1,?___flsub+1
  5495  0047FC  C091  F0A1         	movff	?___fladd+2,?___flsub+2
  5496  004800  C092  F0A2         	movff	?___fladd+3,?___flsub+3
  5497  004804  0012               	return		;funcret
  5498  004806                     __end_of___flsub:
  5499                           	opt callstack 0
  5500                           
  5501 ;; *************** function ___flneg *****************
  5502 ;; Defined at:
  5503 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  f1              4    0[BANK0 ] int 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4    0[BANK0 ] int 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5517 ;;      Params:         0       4       0       0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        4 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    4
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_efgtoa
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text15
  5532  00498A                     __ptext15:
  5533                           	opt callstack 0
  5534  00498A                     ___flneg:
  5535                           	opt callstack 21
  5536  00498A  0100               	movlb	0	; () banked
  5537  00498C  5160               	movf	___flneg@f1& (0+255),w,b
  5538  00498E  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5539  004990  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5540  004992  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5541  004994  B4D8               	btfsc	status,2,c
  5542  004996  EFCF  F024         	goto	u8241
  5543  00499A  EFD1  F024         	goto	u8240
  5544  00499E                     u8241:
  5545  00499E  EFD9  F024         	goto	l5981
  5546  0049A2                     u8240:
  5547  0049A2                     
  5548                           ; BSR set to: 0
  5549  0049A2  0E00               	movlw	0
  5550  0049A4  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5551  0049A6  0E00               	movlw	0
  5552  0049A8  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5553  0049AA  0E00               	movlw	0
  5554  0049AC  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5555  0049AE  0E80               	movlw	128
  5556  0049B0  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5557  0049B2                     l5981:
  5558                           
  5559                           ; BSR set to: 0
  5560  0049B2  C060  F060         	movff	___flneg@f1,?___flneg
  5561  0049B6  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5562  0049BA  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5563  0049BE  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5564  0049C2                     
  5565                           ; BSR set to: 0
  5566  0049C2  0012               	return		;funcret
  5567  0049C4                     __end_of___flneg:
  5568                           	opt callstack 0
  5569                           
  5570 ;; *************** function ___flmul *****************
  5571 ;; Defined at:
  5572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  b               4   22[BANK0 ] int 
  5575 ;;  a               4   26[BANK0 ] int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  prod            4   41[BANK0 ] struct .
  5578 ;;  grs             4   36[BANK0 ] unsigned long 
  5579 ;;  temp            2   45[BANK0 ] struct .
  5580 ;;  bexp            1   40[BANK0 ] unsigned char 
  5581 ;;  aexp            1   35[BANK0 ] unsigned char 
  5582 ;;  sign            1   34[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  4   22[BANK0 ] unsigned char 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0, prodl, prodh
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5592 ;;      Params:         0       8       0       0       0       0       0       0       0
  5593 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5594 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5595 ;;      Totals:         0      25       0       0       0       0       0       0       0
  5596 ;;Total ram usage:       25 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    4
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_letemp
  5603 ;;		_efgtoa
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text16
  5608  001E1C                     __ptext16:
  5609                           	opt callstack 0
  5610  001E1C                     ___flmul:
  5611                           	opt callstack 25
  5612  001E1C  0100               	movlb	0	; () banked
  5613  001E1E  5179               	movf	(___flmul@b+3)& (0+255),w,b
  5614  001E20  0B80               	andlw	128
  5615  001E22  6F82               	movwf	___flmul@sign& (0+255),b
  5616  001E24  5179               	movf	(___flmul@b+3)& (0+255),w,b
  5617  001E26  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  5618  001E28  6F88               	movwf	___flmul@bexp& (0+255),b
  5619  001E2A                     
  5620                           ; BSR set to: 0
  5621  001E2A  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  5622  001E2C  EF1A  F00F         	goto	u7851
  5623  001E30  EF1C  F00F         	goto	u7850
  5624  001E34                     u7851:
  5625  001E34  EF1D  F00F         	goto	l5729
  5626  001E38                     u7850:
  5627  001E38                     
  5628                           ; BSR set to: 0
  5629  001E38  8188               	bsf	___flmul@bexp& (0+255),0,b
  5630  001E3A                     l5729:
  5631                           
  5632                           ; BSR set to: 0
  5633  001E3A  5188               	movf	___flmul@bexp& (0+255),w,b
  5634  001E3C  B4D8               	btfsc	status,2,c
  5635  001E3E  EF23  F00F         	goto	u7861
  5636  001E42  EF25  F00F         	goto	u7860
  5637  001E46                     u7861:
  5638  001E46  EF38  F00F         	goto	l5737
  5639  001E4A                     u7860:
  5640  001E4A                     
  5641                           ; BSR set to: 0
  5642  001E4A  2988               	incf	___flmul@bexp& (0+255),w,b
  5643  001E4C  A4D8               	btfss	status,2,c
  5644  001E4E  EF2B  F00F         	goto	u7871
  5645  001E52  EF2D  F00F         	goto	u7870
  5646  001E56                     u7871:
  5647  001E56  EF35  F00F         	goto	l5735
  5648  001E5A                     u7870:
  5649  001E5A                     
  5650                           ; BSR set to: 0
  5651  001E5A  0E00               	movlw	0
  5652  001E5C  6F76               	movwf	___flmul@b& (0+255),b
  5653  001E5E  0E00               	movlw	0
  5654  001E60  6F77               	movwf	(___flmul@b+1)& (0+255),b
  5655  001E62  0E00               	movlw	0
  5656  001E64  6F78               	movwf	(___flmul@b+2)& (0+255),b
  5657  001E66  0E00               	movlw	0
  5658  001E68  6F79               	movwf	(___flmul@b+3)& (0+255),b
  5659  001E6A                     l5735:
  5660                           
  5661                           ; BSR set to: 0
  5662  001E6A  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  5663  001E6C  EF40  F00F         	goto	l5739
  5664  001E70                     l5737:
  5665                           
  5666                           ; BSR set to: 0
  5667  001E70  0E00               	movlw	0
  5668  001E72  6F76               	movwf	___flmul@b& (0+255),b
  5669  001E74  0E00               	movlw	0
  5670  001E76  6F77               	movwf	(___flmul@b+1)& (0+255),b
  5671  001E78  0E00               	movlw	0
  5672  001E7A  6F78               	movwf	(___flmul@b+2)& (0+255),b
  5673  001E7C  0E00               	movlw	0
  5674  001E7E  6F79               	movwf	(___flmul@b+3)& (0+255),b
  5675  001E80                     l5739:
  5676                           
  5677                           ; BSR set to: 0
  5678  001E80  517D               	movf	(___flmul@a+3)& (0+255),w,b
  5679  001E82  0B80               	andlw	128
  5680  001E84  1B82               	xorwf	___flmul@sign& (0+255),f,b
  5681  001E86                     
  5682                           ; BSR set to: 0
  5683  001E86  517D               	movf	(___flmul@a+3)& (0+255),w,b
  5684  001E88  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  5685  001E8A  6F83               	movwf	___flmul@aexp& (0+255),b
  5686  001E8C                     
  5687                           ; BSR set to: 0
  5688  001E8C  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  5689  001E8E  EF4B  F00F         	goto	u7881
  5690  001E92  EF4D  F00F         	goto	u7880
  5691  001E96                     u7881:
  5692  001E96  EF4E  F00F         	goto	l5747
  5693  001E9A                     u7880:
  5694  001E9A                     
  5695                           ; BSR set to: 0
  5696  001E9A  8183               	bsf	___flmul@aexp& (0+255),0,b
  5697  001E9C                     l5747:
  5698                           
  5699                           ; BSR set to: 0
  5700  001E9C  5183               	movf	___flmul@aexp& (0+255),w,b
  5701  001E9E  B4D8               	btfsc	status,2,c
  5702  001EA0  EF54  F00F         	goto	u7891
  5703  001EA4  EF56  F00F         	goto	u7890
  5704  001EA8                     u7891:
  5705  001EA8  EF69  F00F         	goto	l5755
  5706  001EAC                     u7890:
  5707  001EAC                     
  5708                           ; BSR set to: 0
  5709  001EAC  2983               	incf	___flmul@aexp& (0+255),w,b
  5710  001EAE  A4D8               	btfss	status,2,c
  5711  001EB0  EF5C  F00F         	goto	u7901
  5712  001EB4  EF5E  F00F         	goto	u7900
  5713  001EB8                     u7901:
  5714  001EB8  EF66  F00F         	goto	l5753
  5715  001EBC                     u7900:
  5716  001EBC                     
  5717                           ; BSR set to: 0
  5718  001EBC  0E00               	movlw	0
  5719  001EBE  6F7A               	movwf	___flmul@a& (0+255),b
  5720  001EC0  0E00               	movlw	0
  5721  001EC2  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5722  001EC4  0E00               	movlw	0
  5723  001EC6  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5724  001EC8  0E00               	movlw	0
  5725  001ECA  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5726  001ECC                     l5753:
  5727                           
  5728                           ; BSR set to: 0
  5729  001ECC  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  5730  001ECE  EF71  F00F         	goto	l1130
  5731  001ED2                     l5755:
  5732                           
  5733                           ; BSR set to: 0
  5734  001ED2  0E00               	movlw	0
  5735  001ED4  6F7A               	movwf	___flmul@a& (0+255),b
  5736  001ED6  0E00               	movlw	0
  5737  001ED8  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5738  001EDA  0E00               	movlw	0
  5739  001EDC  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5740  001EDE  0E00               	movlw	0
  5741  001EE0  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5742  001EE2                     l1130:
  5743                           
  5744                           ; BSR set to: 0
  5745  001EE2  5183               	movf	___flmul@aexp& (0+255),w,b
  5746  001EE4  B4D8               	btfsc	status,2,c
  5747  001EE6  EF77  F00F         	goto	u7911
  5748  001EEA  EF79  F00F         	goto	u7910
  5749  001EEE                     u7911:
  5750  001EEE  EF81  F00F         	goto	l5759
  5751  001EF2                     u7910:
  5752  001EF2                     
  5753                           ; BSR set to: 0
  5754  001EF2  5188               	movf	___flmul@bexp& (0+255),w,b
  5755  001EF4  A4D8               	btfss	status,2,c
  5756  001EF6  EF7F  F00F         	goto	u7921
  5757  001EFA  EF81  F00F         	goto	u7920
  5758  001EFE                     u7921:
  5759  001EFE  EF8B  F00F         	goto	l5763
  5760  001F02                     u7920:
  5761  001F02                     l5759:
  5762                           
  5763                           ; BSR set to: 0
  5764  001F02  0E00               	movlw	0
  5765  001F04  6F76               	movwf	?___flmul& (0+255),b
  5766  001F06  0E00               	movlw	0
  5767  001F08  6F77               	movwf	(?___flmul+1)& (0+255),b
  5768  001F0A  0E00               	movlw	0
  5769  001F0C  6F78               	movwf	(?___flmul+2)& (0+255),b
  5770  001F0E  0E00               	movlw	0
  5771  001F10  6F79               	movwf	(?___flmul+3)& (0+255),b
  5772  001F12  EF23  F011         	goto	l1134
  5773  001F16                     l5763:
  5774                           
  5775                           ; BSR set to: 0
  5776  001F16  517C               	movf	(___flmul@a+2)& (0+255),w,b
  5777  001F18  0376               	mulwf	___flmul@b& (0+255),b
  5778  001F1A  CFF3 F08D          	movff	prodl,___flmul@temp
  5779  001F1E  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5780  001F22                     
  5781                           ; BSR set to: 0
  5782  001F22  518D               	movf	___flmul@temp& (0+255),w,b
  5783  001F24  6F84               	movwf	___flmul@grs& (0+255),b
  5784  001F26  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  5785  001F28  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  5786  001F2A  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  5787  001F2C                     
  5788                           ; BSR set to: 0
  5789  001F2C  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5790  001F2E  6F89               	movwf	___flmul@prod& (0+255),b
  5791  001F30  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  5792  001F32  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  5793  001F34  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  5794  001F36  517B               	movf	(___flmul@a+1)& (0+255),w,b
  5795  001F38  0377               	mulwf	(___flmul@b+1)& (0+255),b
  5796  001F3A  CFF3 F08D          	movff	prodl,___flmul@temp
  5797  001F3E  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5798  001F42                     
  5799                           ; BSR set to: 0
  5800  001F42  518D               	movf	___flmul@temp& (0+255),w,b
  5801  001F44  2784               	addwf	___flmul@grs& (0+255),f,b
  5802  001F46  0E00               	movlw	0
  5803  001F48  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5804  001F4A  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5805  001F4C  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5806  001F4E                     
  5807                           ; BSR set to: 0
  5808  001F4E  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5809  001F50  2789               	addwf	___flmul@prod& (0+255),f,b
  5810  001F52  0E00               	movlw	0
  5811  001F54  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5812  001F56  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5813  001F58  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5814  001F5A  517A               	movf	___flmul@a& (0+255),w,b
  5815  001F5C  0378               	mulwf	(___flmul@b+2)& (0+255),b
  5816  001F5E  CFF3 F08D          	movff	prodl,___flmul@temp
  5817  001F62  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5818  001F66                     
  5819                           ; BSR set to: 0
  5820  001F66  518D               	movf	___flmul@temp& (0+255),w,b
  5821  001F68  2784               	addwf	___flmul@grs& (0+255),f,b
  5822  001F6A  0E00               	movlw	0
  5823  001F6C  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5824  001F6E  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5825  001F70  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5826  001F72                     
  5827                           ; BSR set to: 0
  5828  001F72  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5829  001F74  2789               	addwf	___flmul@prod& (0+255),f,b
  5830  001F76  0E00               	movlw	0
  5831  001F78  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5832  001F7A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5833  001F7C  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5834  001F7E                     
  5835                           ; BSR set to: 0
  5836  001F7E  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  5837  001F82  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  5838  001F86  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  5839  001F8A  6B84               	clrf	___flmul@grs& (0+255),b
  5840  001F8C                     
  5841                           ; BSR set to: 0
  5842  001F8C  517A               	movf	___flmul@a& (0+255),w,b
  5843  001F8E  0377               	mulwf	(___flmul@b+1)& (0+255),b
  5844  001F90  CFF3 F08D          	movff	prodl,___flmul@temp
  5845  001F94  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5846  001F98                     
  5847                           ; BSR set to: 0
  5848  001F98  518D               	movf	___flmul@temp& (0+255),w,b
  5849  001F9A  2784               	addwf	___flmul@grs& (0+255),f,b
  5850  001F9C  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5851  001F9E  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5852  001FA0  0E00               	movlw	0
  5853  001FA2  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5854  001FA4  0E00               	movlw	0
  5855  001FA6  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5856  001FA8                     
  5857                           ; BSR set to: 0
  5858  001FA8  517B               	movf	(___flmul@a+1)& (0+255),w,b
  5859  001FAA  0376               	mulwf	___flmul@b& (0+255),b
  5860  001FAC  CFF3 F08D          	movff	prodl,___flmul@temp
  5861  001FB0  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5862  001FB4                     
  5863                           ; BSR set to: 0
  5864  001FB4  518D               	movf	___flmul@temp& (0+255),w,b
  5865  001FB6  2784               	addwf	___flmul@grs& (0+255),f,b
  5866  001FB8  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5867  001FBA  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5868  001FBC  0E00               	movlw	0
  5869  001FBE  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5870  001FC0  0E00               	movlw	0
  5871  001FC2  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5872  001FC4                     
  5873                           ; BSR set to: 0
  5874  001FC4  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  5875  001FC8  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  5876  001FCC  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  5877  001FD0  6B84               	clrf	___flmul@grs& (0+255),b
  5878  001FD2  517A               	movf	___flmul@a& (0+255),w,b
  5879  001FD4  0376               	mulwf	___flmul@b& (0+255),b
  5880  001FD6  CFF3 F08D          	movff	prodl,___flmul@temp
  5881  001FDA  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5882  001FDE                     
  5883                           ; BSR set to: 0
  5884  001FDE  518D               	movf	___flmul@temp& (0+255),w,b
  5885  001FE0  2784               	addwf	___flmul@grs& (0+255),f,b
  5886  001FE2  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5887  001FE4  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5888  001FE6  0E00               	movlw	0
  5889  001FE8  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5890  001FEA  0E00               	movlw	0
  5891  001FEC  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5892  001FEE                     
  5893                           ; BSR set to: 0
  5894  001FEE  517C               	movf	(___flmul@a+2)& (0+255),w,b
  5895  001FF0  0377               	mulwf	(___flmul@b+1)& (0+255),b
  5896  001FF2  CFF3 F08D          	movff	prodl,___flmul@temp
  5897  001FF6  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5898  001FFA  518D               	movf	___flmul@temp& (0+255),w,b
  5899  001FFC  2789               	addwf	___flmul@prod& (0+255),f,b
  5900  001FFE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5901  002000  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5902  002002  0E00               	movlw	0
  5903  002004  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5904  002006  0E00               	movlw	0
  5905  002008  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5906  00200A                     
  5907                           ; BSR set to: 0
  5908  00200A  517B               	movf	(___flmul@a+1)& (0+255),w,b
  5909  00200C  0378               	mulwf	(___flmul@b+2)& (0+255),b
  5910  00200E  CFF3 F08D          	movff	prodl,___flmul@temp
  5911  002012  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5912  002016                     
  5913                           ; BSR set to: 0
  5914  002016  518D               	movf	___flmul@temp& (0+255),w,b
  5915  002018  2789               	addwf	___flmul@prod& (0+255),f,b
  5916  00201A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5917  00201C  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5918  00201E  0E00               	movlw	0
  5919  002020  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5920  002022  0E00               	movlw	0
  5921  002024  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5922  002026  517C               	movf	(___flmul@a+2)& (0+255),w,b
  5923  002028  0378               	mulwf	(___flmul@b+2)& (0+255),b
  5924  00202A  CFF3 F08D          	movff	prodl,___flmul@temp
  5925  00202E  CFF4 F08E          	movff	prodh,___flmul@temp+1
  5926  002032                     
  5927                           ; BSR set to: 0
  5928  002032  518D               	movf	___flmul@temp& (0+255),w,b
  5929  002034  6F7E               	movwf	??___flmul& (0+255),b
  5930  002036  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  5931  002038  6F7F               	movwf	(??___flmul+1)& (0+255),b
  5932  00203A  6B80               	clrf	(??___flmul+2)& (0+255),b
  5933  00203C  6B81               	clrf	(??___flmul+3)& (0+255),b
  5934  00203E  C080  F081         	movff	??___flmul+2,??___flmul+3
  5935  002042  C07F  F080         	movff	??___flmul+1,??___flmul+2
  5936  002046  C07E  F07F         	movff	??___flmul,??___flmul+1
  5937  00204A  6B7E               	clrf	??___flmul& (0+255),b
  5938  00204C  517E               	movf	??___flmul& (0+255),w,b
  5939  00204E  2789               	addwf	___flmul@prod& (0+255),f,b
  5940  002050  517F               	movf	(??___flmul+1)& (0+255),w,b
  5941  002052  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5942  002054  5180               	movf	(??___flmul+2)& (0+255),w,b
  5943  002056  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5944  002058  5181               	movf	(??___flmul+3)& (0+255),w,b
  5945  00205A  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5946  00205C                     
  5947                           ; BSR set to: 0
  5948  00205C  C084  F07E         	movff	___flmul@grs,??___flmul
  5949  002060  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  5950  002064  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  5951  002068  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  5952  00206C  0E19               	movlw	25
  5953  00206E  EF3E  F010         	goto	u7930
  5954  002072                     u7935:
  5955  002072  90D8               	bcf	status,0,c
  5956  002074  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  5957  002076  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  5958  002078  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  5959  00207A  337E               	rrcf	??___flmul& (0+255),f,b
  5960  00207C                     u7930:
  5961  00207C  2EE8               	decfsz	wreg,f,c
  5962  00207E  EF39  F010         	goto	u7935
  5963  002082  517E               	movf	??___flmul& (0+255),w,b
  5964  002084  2789               	addwf	___flmul@prod& (0+255),f,b
  5965  002086  517F               	movf	(??___flmul+1)& (0+255),w,b
  5966  002088  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5967  00208A  5180               	movf	(??___flmul+2)& (0+255),w,b
  5968  00208C  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5969  00208E  5181               	movf	(??___flmul+3)& (0+255),w,b
  5970  002090  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5971  002092                     
  5972                           ; BSR set to: 0
  5973  002092  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  5974  002096  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  5975  00209A  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  5976  00209E  6B84               	clrf	___flmul@grs& (0+255),b
  5977  0020A0                     
  5978                           ; BSR set to: 0
  5979  0020A0  5183               	movf	___flmul@aexp& (0+255),w,b
  5980  0020A2  C088  F07E         	movff	___flmul@bexp,??___flmul
  5981  0020A6  6B7F               	clrf	(??___flmul+1)& (0+255),b
  5982  0020A8  277E               	addwf	??___flmul& (0+255),f,b
  5983  0020AA  0E00               	movlw	0
  5984  0020AC  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  5985  0020AE  0E82               	movlw	130
  5986  0020B0  257E               	addwf	??___flmul& (0+255),w,b
  5987  0020B2  6F8D               	movwf	___flmul@temp& (0+255),b
  5988  0020B4  0EFF               	movlw	255
  5989  0020B6  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  5990  0020B8  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  5991  0020BA  EF74  F010         	goto	l5811
  5992  0020BE                     l5805:
  5993                           
  5994                           ; BSR set to: 0
  5995  0020BE  90D8               	bcf	status,0,c
  5996  0020C0  3789               	rlcf	___flmul@prod& (0+255),f,b
  5997  0020C2  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5998  0020C4  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5999  0020C6  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6000  0020C8                     
  6001                           ; BSR set to: 0
  6002  0020C8  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  6003  0020CA  EF69  F010         	goto	u7941
  6004  0020CE  EF6B  F010         	goto	u7940
  6005  0020D2                     u7941:
  6006  0020D2  EF6C  F010         	goto	l1137
  6007  0020D6                     u7940:
  6008  0020D6                     
  6009                           ; BSR set to: 0
  6010  0020D6  8189               	bsf	___flmul@prod& (0+255),0,b
  6011  0020D8                     l1137:
  6012                           
  6013                           ; BSR set to: 0
  6014  0020D8  90D8               	bcf	status,0,c
  6015  0020DA  3784               	rlcf	___flmul@grs& (0+255),f,b
  6016  0020DC  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6017  0020DE  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6018  0020E0  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6019  0020E2  078D               	decf	___flmul@temp& (0+255),f,b
  6020  0020E4  A0D8               	btfss	status,0,c
  6021  0020E6  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  6022  0020E8                     l5811:
  6023                           
  6024                           ; BSR set to: 0
  6025  0020E8  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  6026  0020EA  EF79  F010         	goto	u7951
  6027  0020EE  EF7B  F010         	goto	u7950
  6028  0020F2                     u7951:
  6029  0020F2  EF5F  F010         	goto	l5805
  6030  0020F6                     u7950:
  6031  0020F6                     
  6032                           ; BSR set to: 0
  6033  0020F6  0E00               	movlw	0
  6034  0020F8  6F83               	movwf	___flmul@aexp& (0+255),b
  6035  0020FA                     
  6036                           ; BSR set to: 0
  6037  0020FA  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  6038  0020FC  EF82  F010         	goto	u7961
  6039  002100  EF84  F010         	goto	u7960
  6040  002104                     u7961:
  6041  002104  EFA8  F010         	goto	l1139
  6042  002108                     u7960:
  6043  002108                     
  6044                           ; BSR set to: 0
  6045  002108  0EFF               	movlw	255
  6046  00210A  1584               	andwf	___flmul@grs& (0+255),w,b
  6047  00210C  6F7E               	movwf	??___flmul& (0+255),b
  6048  00210E  0EFF               	movlw	255
  6049  002110  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  6050  002112  6F7F               	movwf	(??___flmul+1)& (0+255),b
  6051  002114  0EFF               	movlw	255
  6052  002116  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  6053  002118  6F80               	movwf	(??___flmul+2)& (0+255),b
  6054  00211A  0E7F               	movlw	127
  6055  00211C  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  6056  00211E  6F81               	movwf	(??___flmul+3)& (0+255),b
  6057  002120  517E               	movf	??___flmul& (0+255),w,b
  6058  002122  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  6059  002124  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  6060  002126  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  6061  002128  B4D8               	btfsc	status,2,c
  6062  00212A  EF99  F010         	goto	u7971
  6063  00212E  EF9B  F010         	goto	u7970
  6064  002132                     u7971:
  6065  002132  EF9F  F010         	goto	l1140
  6066  002136                     u7970:
  6067  002136                     l5819:
  6068                           
  6069                           ; BSR set to: 0
  6070  002136  0E01               	movlw	1
  6071  002138  6F83               	movwf	___flmul@aexp& (0+255),b
  6072  00213A  EFA8  F010         	goto	l1139
  6073  00213E                     l1140:
  6074                           
  6075                           ; BSR set to: 0
  6076  00213E  A189               	btfss	___flmul@prod& (0+255),0,b
  6077  002140  EFA4  F010         	goto	u7981
  6078  002144  EFA6  F010         	goto	u7980
  6079  002148                     u7981:
  6080  002148  EFA8  F010         	goto	l1139
  6081  00214C                     u7980:
  6082  00214C  EF9B  F010         	goto	l5819
  6083  002150                     l1139:
  6084                           
  6085                           ; BSR set to: 0
  6086  002150  5183               	movf	___flmul@aexp& (0+255),w,b
  6087  002152  B4D8               	btfsc	status,2,c
  6088  002154  EFAE  F010         	goto	u7991
  6089  002158  EFB0  F010         	goto	u7990
  6090  00215C                     u7991:
  6091  00215C  EFD4  F010         	goto	l5831
  6092  002160                     u7990:
  6093  002160                     
  6094                           ; BSR set to: 0
  6095  002160  0E01               	movlw	1
  6096  002162  2789               	addwf	___flmul@prod& (0+255),f,b
  6097  002164  0E00               	movlw	0
  6098  002166  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6099  002168  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6100  00216A  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6101  00216C                     
  6102                           ; BSR set to: 0
  6103  00216C  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  6104  00216E  EFBB  F010         	goto	u8001
  6105  002172  EFBD  F010         	goto	u8000
  6106  002176                     u8001:
  6107  002176  EFD4  F010         	goto	l5831
  6108  00217A                     u8000:
  6109  00217A                     
  6110                           ; BSR set to: 0
  6111  00217A  C089  F07E         	movff	___flmul@prod,??___flmul
  6112  00217E  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  6113  002182  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  6114  002186  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  6115  00218A  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  6116  00218C  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  6117  00218E  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  6118  002190  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  6119  002192  337E               	rrcf	??___flmul& (0+255),f,b
  6120  002194  C07E  F089         	movff	??___flmul,___flmul@prod
  6121  002198  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  6122  00219C  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  6123  0021A0  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  6124  0021A4                     
  6125                           ; BSR set to: 0
  6126  0021A4  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  6127  0021A6  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  6128  0021A8                     l5831:
  6129                           
  6130                           ; BSR set to: 0
  6131  0021A8  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6132  0021AA  EFDF  F010         	goto	u8011
  6133  0021AE  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  6134  0021B0  E108               	bnz	u8010
  6135  0021B2  298D               	incf	___flmul@temp& (0+255),w,b
  6136  0021B4  A0D8               	btfss	status,0,c
  6137  0021B6  EFDF  F010         	goto	u8011
  6138  0021BA  EFE1  F010         	goto	u8010
  6139  0021BE                     u8011:
  6140  0021BE  EFEB  F010         	goto	l5835
  6141  0021C2                     u8010:
  6142  0021C2                     
  6143                           ; BSR set to: 0
  6144  0021C2  0E00               	movlw	0
  6145  0021C4  6F89               	movwf	___flmul@prod& (0+255),b
  6146  0021C6  0E00               	movlw	0
  6147  0021C8  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  6148  0021CA  0E80               	movlw	128
  6149  0021CC  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  6150  0021CE  0E7F               	movlw	127
  6151  0021D0  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  6152  0021D2  EF19  F011         	goto	l5847
  6153  0021D6                     l5835:
  6154                           
  6155                           ; BSR set to: 0
  6156  0021D6  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6157  0021D8  EFF8  F010         	goto	u8020
  6158  0021DC  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  6159  0021DE  E106               	bnz	u8021
  6160  0021E0  058D               	decf	___flmul@temp& (0+255),w,b
  6161  0021E2  B0D8               	btfsc	status,0,c
  6162  0021E4  EFF6  F010         	goto	u8021
  6163  0021E8  EFF8  F010         	goto	u8020
  6164  0021EC                     u8021:
  6165  0021EC  EF04  F011         	goto	l1147
  6166  0021F0                     u8020:
  6167  0021F0                     
  6168                           ; BSR set to: 0
  6169  0021F0  0E00               	movlw	0
  6170  0021F2  6F89               	movwf	___flmul@prod& (0+255),b
  6171  0021F4  0E00               	movlw	0
  6172  0021F6  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  6173  0021F8  0E00               	movlw	0
  6174  0021FA  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  6175  0021FC  0E00               	movlw	0
  6176  0021FE  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  6177  002200  0E00               	movlw	0
  6178  002202  6F82               	movwf	___flmul@sign& (0+255),b
  6179  002204  EF19  F011         	goto	l5847
  6180  002208                     l1147:
  6181                           
  6182                           ; BSR set to: 0
  6183  002208  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  6184  00220C                     
  6185                           ; BSR set to: 0
  6186  00220C  0EFF               	movlw	255
  6187  00220E  1789               	andwf	___flmul@prod& (0+255),f,b
  6188  002210  0EFF               	movlw	255
  6189  002212  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  6190  002214  0E7F               	movlw	127
  6191  002216  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  6192  002218  0E00               	movlw	0
  6193  00221A  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  6194  00221C                     
  6195                           ; BSR set to: 0
  6196  00221C  A188               	btfss	___flmul@bexp& (0+255),0,b
  6197  00221E  EF13  F011         	goto	u8031
  6198  002222  EF15  F011         	goto	u8030
  6199  002226                     u8031:
  6200  002226  EF16  F011         	goto	l5845
  6201  00222A                     u8030:
  6202  00222A                     
  6203                           ; BSR set to: 0
  6204  00222A  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  6205  00222C                     l5845:
  6206                           
  6207                           ; BSR set to: 0
  6208  00222C  90D8               	bcf	status,0,c
  6209  00222E  3188               	rrcf	___flmul@bexp& (0+255),w,b
  6210  002230  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  6211  002232                     l5847:
  6212                           
  6213                           ; BSR set to: 0
  6214  002232  5182               	movf	___flmul@sign& (0+255),w,b
  6215  002234  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6216  002236                     
  6217                           ; BSR set to: 0
  6218  002236  C089  F076         	movff	___flmul@prod,?___flmul
  6219  00223A  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  6220  00223E  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  6221  002242  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  6222  002246                     l1134:
  6223                           
  6224                           ; BSR set to: 0
  6225  002246  0012               	return		;funcret
  6226  002248                     __end_of___flmul:
  6227                           	opt callstack 0
  6228                           
  6229 ;; *************** function ___fleq *****************
  6230 ;; Defined at:
  6231 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  ff1             4    0[BANK0 ] unsigned char 
  6234 ;;  ff2             4    4[BANK0 ] unsigned char 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;		None               void
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6246 ;;      Params:         0       8       0       0       0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6248 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6249 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6250 ;;Total ram usage:       12 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    4
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_efgtoa
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text17
  6261  004094                     __ptext17:
  6262                           	opt callstack 0
  6263  004094                     ___fleq:
  6264                           	opt callstack 21
  6265  004094  0E00               	movlw	0
  6266  004096  0100               	movlb	0	; () banked
  6267  004098  1560               	andwf	___fleq@ff1& (0+255),w,b
  6268  00409A  6F68               	movwf	??___fleq& (0+255),b
  6269  00409C  0E00               	movlw	0
  6270  00409E  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6271  0040A0  6F69               	movwf	(??___fleq+1)& (0+255),b
  6272  0040A2  0E80               	movlw	128
  6273  0040A4  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6274  0040A6  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6275  0040A8  0E7F               	movlw	127
  6276  0040AA  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6277  0040AC  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6278  0040AE  5168               	movf	??___fleq& (0+255),w,b
  6279  0040B0  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6280  0040B2  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6281  0040B4  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6282  0040B6  A4D8               	btfss	status,2,c
  6283  0040B8  EF60  F020         	goto	u8161
  6284  0040BC  EF62  F020         	goto	u8160
  6285  0040C0                     u8161:
  6286  0040C0  EF6A  F020         	goto	l5943
  6287  0040C4                     u8160:
  6288  0040C4                     
  6289                           ; BSR set to: 0
  6290  0040C4  0E00               	movlw	0
  6291  0040C6  6F60               	movwf	___fleq@ff1& (0+255),b
  6292  0040C8  0E00               	movlw	0
  6293  0040CA  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6294  0040CC  0E00               	movlw	0
  6295  0040CE  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6296  0040D0  0E00               	movlw	0
  6297  0040D2  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6298  0040D4                     l5943:
  6299                           
  6300                           ; BSR set to: 0
  6301  0040D4  0E00               	movlw	0
  6302  0040D6  1564               	andwf	___fleq@ff2& (0+255),w,b
  6303  0040D8  6F68               	movwf	??___fleq& (0+255),b
  6304  0040DA  0E00               	movlw	0
  6305  0040DC  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6306  0040DE  6F69               	movwf	(??___fleq+1)& (0+255),b
  6307  0040E0  0E80               	movlw	128
  6308  0040E2  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6309  0040E4  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6310  0040E6  0E7F               	movlw	127
  6311  0040E8  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6312  0040EA  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6313  0040EC  5168               	movf	??___fleq& (0+255),w,b
  6314  0040EE  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6315  0040F0  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6316  0040F2  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6317  0040F4  A4D8               	btfss	status,2,c
  6318  0040F6  EF7F  F020         	goto	u8171
  6319  0040FA  EF81  F020         	goto	u8170
  6320  0040FE                     u8171:
  6321  0040FE  EF89  F020         	goto	l5947
  6322  004102                     u8170:
  6323  004102                     
  6324                           ; BSR set to: 0
  6325  004102  0E00               	movlw	0
  6326  004104  6F64               	movwf	___fleq@ff2& (0+255),b
  6327  004106  0E00               	movlw	0
  6328  004108  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6329  00410A  0E00               	movlw	0
  6330  00410C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6331  00410E  0E00               	movlw	0
  6332  004110  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6333  004112                     l5947:
  6334                           
  6335                           ; BSR set to: 0
  6336  004112  5164               	movf	___fleq@ff2& (0+255),w,b
  6337  004114  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6338  004116  E10F               	bnz	u8180
  6339  004118  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6340  00411A  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6341  00411C  E10C               	bnz	u8180
  6342  00411E  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6343  004120  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6344  004122  E109               	bnz	u8180
  6345  004124  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6346  004126  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6347  004128  B4D8               	btfsc	status,2,c
  6348  00412A  EF99  F020         	goto	u8181
  6349  00412E  EF9B  F020         	goto	u8180
  6350  004132                     u8181:
  6351  004132  EF9E  F020         	goto	l5951
  6352  004136                     u8180:
  6353  004136                     
  6354                           ; BSR set to: 0
  6355  004136  90D8               	bcf	status,0,c
  6356  004138  EF9F  F020         	goto	l775
  6357  00413C                     l5951:
  6358                           
  6359                           ; BSR set to: 0
  6360  00413C  80D8               	bsf	status,0,c
  6361  00413E                     l775:
  6362                           
  6363                           ; BSR set to: 0
  6364  00413E  0012               	return		;funcret
  6365  004140                     __end_of___fleq:
  6366                           	opt callstack 0
  6367                           
  6368 ;; *************** function ___awmod *****************
  6369 ;; Defined at:
  6370 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  dividend        2    0[BANK0 ] int 
  6373 ;;  divisor         2    2[BANK0 ] int 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  sign            1    5[BANK0 ] unsigned char 
  6376 ;;  counter         1    4[BANK0 ] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  2    0[BANK0 ] int 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6386 ;;      Params:         0       4       0       0       0       0       0       0       0
  6387 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6389 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6390 ;;Total ram usage:        6 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    4
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_efgtoa
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text18
  6401  003FE2                     __ptext18:
  6402                           	opt callstack 0
  6403  003FE2                     ___awmod:
  6404                           	opt callstack 21
  6405  003FE2  0E00               	movlw	0
  6406  003FE4  0100               	movlb	0	; () banked
  6407  003FE6  6F65               	movwf	___awmod@sign& (0+255),b
  6408  003FE8                     
  6409                           ; BSR set to: 0
  6410  003FE8  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  6411  003FEA  EFFB  F01F         	goto	u8100
  6412  003FEE  EFF9  F01F         	goto	u8101
  6413  003FF2                     u8101:
  6414  003FF2  EF01  F020         	goto	l5911
  6415  003FF6                     u8100:
  6416  003FF6                     
  6417                           ; BSR set to: 0
  6418  003FF6  6D60               	negf	___awmod@dividend& (0+255),b
  6419  003FF8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6420  003FFA  B0D8               	btfsc	status,0,c
  6421  003FFC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6422  003FFE                     
  6423                           ; BSR set to: 0
  6424  003FFE  0E01               	movlw	1
  6425  004000  6F65               	movwf	___awmod@sign& (0+255),b
  6426  004002                     l5911:
  6427                           
  6428                           ; BSR set to: 0
  6429  004002  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  6430  004004  EF08  F020         	goto	u8110
  6431  004008  EF06  F020         	goto	u8111
  6432  00400C                     u8111:
  6433  00400C  EF0C  F020         	goto	l5915
  6434  004010                     u8110:
  6435  004010                     
  6436                           ; BSR set to: 0
  6437  004010  6D62               	negf	___awmod@divisor& (0+255),b
  6438  004012  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  6439  004014  B0D8               	btfsc	status,0,c
  6440  004016  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  6441  004018                     l5915:
  6442                           
  6443                           ; BSR set to: 0
  6444  004018  5162               	movf	___awmod@divisor& (0+255),w,b
  6445  00401A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  6446  00401C  B4D8               	btfsc	status,2,c
  6447  00401E  EF13  F020         	goto	u8121
  6448  004022  EF15  F020         	goto	u8120
  6449  004026                     u8121:
  6450  004026  EF39  F020         	goto	l5931
  6451  00402A                     u8120:
  6452  00402A                     
  6453                           ; BSR set to: 0
  6454  00402A  0E01               	movlw	1
  6455  00402C  6F64               	movwf	___awmod@counter& (0+255),b
  6456  00402E  EF1D  F020         	goto	l5921
  6457  004032                     l5919:
  6458                           
  6459                           ; BSR set to: 0
  6460  004032  90D8               	bcf	status,0,c
  6461  004034  3762               	rlcf	___awmod@divisor& (0+255),f,b
  6462  004036  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  6463  004038  2B64               	incf	___awmod@counter& (0+255),f,b
  6464  00403A                     l5921:
  6465                           
  6466                           ; BSR set to: 0
  6467  00403A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  6468  00403C  EF22  F020         	goto	u8131
  6469  004040  EF24  F020         	goto	u8130
  6470  004044                     u8131:
  6471  004044  EF19  F020         	goto	l5919
  6472  004048                     u8130:
  6473  004048                     l5923:
  6474                           
  6475                           ; BSR set to: 0
  6476  004048  5162               	movf	___awmod@divisor& (0+255),w,b
  6477  00404A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  6478  00404C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6479  00404E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  6480  004050  A0D8               	btfss	status,0,c
  6481  004052  EF2D  F020         	goto	u8141
  6482  004056  EF2F  F020         	goto	u8140
  6483  00405A                     u8141:
  6484  00405A  EF33  F020         	goto	l5927
  6485  00405E                     u8140:
  6486  00405E                     
  6487                           ; BSR set to: 0
  6488  00405E  5162               	movf	___awmod@divisor& (0+255),w,b
  6489  004060  5F60               	subwf	___awmod@dividend& (0+255),f,b
  6490  004062  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  6491  004064  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  6492  004066                     l5927:
  6493                           
  6494                           ; BSR set to: 0
  6495  004066  90D8               	bcf	status,0,c
  6496  004068  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  6497  00406A  3362               	rrcf	___awmod@divisor& (0+255),f,b
  6498  00406C                     
  6499                           ; BSR set to: 0
  6500  00406C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  6501  00406E  EF24  F020         	goto	l5923
  6502  004072                     l5931:
  6503                           
  6504                           ; BSR set to: 0
  6505  004072  5165               	movf	___awmod@sign& (0+255),w,b
  6506  004074  B4D8               	btfsc	status,2,c
  6507  004076  EF3F  F020         	goto	u8151
  6508  00407A  EF41  F020         	goto	u8150
  6509  00407E                     u8151:
  6510  00407E  EF45  F020         	goto	l5935
  6511  004082                     u8150:
  6512  004082                     
  6513                           ; BSR set to: 0
  6514  004082  6D60               	negf	___awmod@dividend& (0+255),b
  6515  004084  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  6516  004086  B0D8               	btfsc	status,0,c
  6517  004088  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  6518  00408A                     l5935:
  6519                           
  6520                           ; BSR set to: 0
  6521  00408A  C060  F060         	movff	___awmod@dividend,?___awmod
  6522  00408E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  6523  004092                     
  6524                           ; BSR set to: 0
  6525  004092  0012               	return		;funcret
  6526  004094                     __end_of___awmod:
  6527                           	opt callstack 0
  6528                           
  6529 ;; *************** function ___awdiv *****************
  6530 ;; Defined at:
  6531 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  dividend        2    0[BANK0 ] int 
  6534 ;;  divisor         2    2[BANK0 ] int 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  quotient        2    6[BANK0 ] int 
  6537 ;;  sign            1    5[BANK0 ] unsigned char 
  6538 ;;  counter         1    4[BANK0 ] unsigned char 
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  2    0[BANK0 ] int 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6548 ;;      Params:         0       4       0       0       0       0       0       0       0
  6549 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6551 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6552 ;;Total ram usage:        8 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    4
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_efgtoa
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text19
  6563  003E58                     __ptext19:
  6564                           	opt callstack 0
  6565  003E58                     ___awdiv:
  6566                           	opt callstack 21
  6567  003E58  0E00               	movlw	0
  6568  003E5A  0100               	movlb	0	; () banked
  6569  003E5C  6F65               	movwf	___awdiv@sign& (0+255),b
  6570  003E5E                     
  6571                           ; BSR set to: 0
  6572  003E5E  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6573  003E60  EF36  F01F         	goto	u8040
  6574  003E64  EF34  F01F         	goto	u8041
  6575  003E68                     u8041:
  6576  003E68  EF3C  F01F         	goto	l5867
  6577  003E6C                     u8040:
  6578  003E6C                     
  6579                           ; BSR set to: 0
  6580  003E6C  6D62               	negf	___awdiv@divisor& (0+255),b
  6581  003E6E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6582  003E70  B0D8               	btfsc	status,0,c
  6583  003E72  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6584  003E74                     
  6585                           ; BSR set to: 0
  6586  003E74  0E01               	movlw	1
  6587  003E76  6F65               	movwf	___awdiv@sign& (0+255),b
  6588  003E78                     l5867:
  6589                           
  6590                           ; BSR set to: 0
  6591  003E78  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  6592  003E7A  EF43  F01F         	goto	u8050
  6593  003E7E  EF41  F01F         	goto	u8051
  6594  003E82                     u8051:
  6595  003E82  EF49  F01F         	goto	l5873
  6596  003E86                     u8050:
  6597  003E86                     
  6598                           ; BSR set to: 0
  6599  003E86  6D60               	negf	___awdiv@dividend& (0+255),b
  6600  003E88  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6601  003E8A  B0D8               	btfsc	status,0,c
  6602  003E8C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6603  003E8E                     
  6604                           ; BSR set to: 0
  6605  003E8E  0E01               	movlw	1
  6606  003E90  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  6607  003E92                     l5873:
  6608                           
  6609                           ; BSR set to: 0
  6610  003E92  0E00               	movlw	0
  6611  003E94  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  6612  003E96  0E00               	movlw	0
  6613  003E98  6F66               	movwf	___awdiv@quotient& (0+255),b
  6614  003E9A                     
  6615                           ; BSR set to: 0
  6616  003E9A  5162               	movf	___awdiv@divisor& (0+255),w,b
  6617  003E9C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6618  003E9E  B4D8               	btfsc	status,2,c
  6619  003EA0  EF54  F01F         	goto	u8061
  6620  003EA4  EF56  F01F         	goto	u8060
  6621  003EA8                     u8061:
  6622  003EA8  EF7E  F01F         	goto	l5895
  6623  003EAC                     u8060:
  6624  003EAC                     
  6625                           ; BSR set to: 0
  6626  003EAC  0E01               	movlw	1
  6627  003EAE  6F64               	movwf	___awdiv@counter& (0+255),b
  6628  003EB0  EF5E  F01F         	goto	l5881
  6629  003EB4                     l5879:
  6630                           
  6631                           ; BSR set to: 0
  6632  003EB4  90D8               	bcf	status,0,c
  6633  003EB6  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  6634  003EB8  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6635  003EBA  2B64               	incf	___awdiv@counter& (0+255),f,b
  6636  003EBC                     l5881:
  6637                           
  6638                           ; BSR set to: 0
  6639  003EBC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6640  003EBE  EF63  F01F         	goto	u8071
  6641  003EC2  EF65  F01F         	goto	u8070
  6642  003EC6                     u8071:
  6643  003EC6  EF5A  F01F         	goto	l5879
  6644  003ECA                     u8070:
  6645  003ECA                     l5883:
  6646                           
  6647                           ; BSR set to: 0
  6648  003ECA  90D8               	bcf	status,0,c
  6649  003ECC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  6650  003ECE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6651  003ED0                     
  6652                           ; BSR set to: 0
  6653  003ED0  5162               	movf	___awdiv@divisor& (0+255),w,b
  6654  003ED2  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  6655  003ED4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6656  003ED6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6657  003ED8  A0D8               	btfss	status,0,c
  6658  003EDA  EF71  F01F         	goto	u8081
  6659  003EDE  EF73  F01F         	goto	u8080
  6660  003EE2                     u8081:
  6661  003EE2  EF78  F01F         	goto	l5891
  6662  003EE6                     u8080:
  6663  003EE6                     
  6664                           ; BSR set to: 0
  6665  003EE6  5162               	movf	___awdiv@divisor& (0+255),w,b
  6666  003EE8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  6667  003EEA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6668  003EEC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6669  003EEE                     
  6670                           ; BSR set to: 0
  6671  003EEE  8166               	bsf	___awdiv@quotient& (0+255),0,b
  6672  003EF0                     l5891:
  6673                           
  6674                           ; BSR set to: 0
  6675  003EF0  90D8               	bcf	status,0,c
  6676  003EF2  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6677  003EF4  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  6678  003EF6                     
  6679                           ; BSR set to: 0
  6680  003EF6  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  6681  003EF8  EF65  F01F         	goto	l5883
  6682  003EFC                     l5895:
  6683                           
  6684                           ; BSR set to: 0
  6685  003EFC  5165               	movf	___awdiv@sign& (0+255),w,b
  6686  003EFE  B4D8               	btfsc	status,2,c
  6687  003F00  EF84  F01F         	goto	u8091
  6688  003F04  EF86  F01F         	goto	u8090
  6689  003F08                     u8091:
  6690  003F08  EF8A  F01F         	goto	l5899
  6691  003F0C                     u8090:
  6692  003F0C                     
  6693                           ; BSR set to: 0
  6694  003F0C  6D66               	negf	___awdiv@quotient& (0+255),b
  6695  003F0E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6696  003F10  B0D8               	btfsc	status,0,c
  6697  003F12  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6698  003F14                     l5899:
  6699                           
  6700                           ; BSR set to: 0
  6701  003F14  C066  F060         	movff	___awdiv@quotient,?___awdiv
  6702  003F18  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  6703  003F1C                     
  6704                           ; BSR set to: 0
  6705  003F1C  0012               	return		;funcret
  6706  003F1E                     __end_of___awdiv:
  6707                           	opt callstack 0
  6708                           
  6709 ;; *************** function _dtoa *****************
  6710 ;; Defined at:
  6711 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  6714 ;;		 -> sprintf@f(6), 
  6715 ;;  d               8   29[BANK0 ] long long 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  n               8   53[BANK0 ] long long 
  6718 ;;  i               2   61[BANK0 ] int 
  6719 ;;  s               2   51[BANK0 ] int 
  6720 ;;  w               2   49[BANK0 ] int 
  6721 ;;  p               2   47[BANK0 ] int 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  2   27[BANK0 ] int 
  6724 ;; Registers used:
  6725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6731 ;;      Params:         0      10       0       0       0       0       0       0       0
  6732 ;;      Locals:         0      18       0       0       0       0       0       0       0
  6733 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6734 ;;      Totals:         0      36       0       0       0       0       0       0       0
  6735 ;;Total ram usage:       36 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    8
  6738 ;; This function calls:
  6739 ;;		___aodiv
  6740 ;;		___aomod
  6741 ;;		_abs
  6742 ;;		_pad
  6743 ;; This function is called by:
  6744 ;;		_vfpfcnvrt
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text20
  6749  0025E4                     __ptext20:
  6750                           	opt callstack 0
  6751  0025E4                     _dtoa:
  6752                           	opt callstack 18
  6753  0025E4                     
  6754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6755  0025E4  C07D  F095         	movff	dtoa@d,dtoa@n
  6756  0025E8  C07E  F096         	movff	dtoa@d+1,dtoa@n+1
  6757  0025EC  C07F  F097         	movff	dtoa@d+2,dtoa@n+2
  6758  0025F0  C080  F098         	movff	dtoa@d+3,dtoa@n+3
  6759  0025F4  C081  F099         	movff	dtoa@d+4,dtoa@n+4
  6760  0025F8  C082  F09A         	movff	dtoa@d+5,dtoa@n+5
  6761  0025FC  C083  F09B         	movff	dtoa@d+6,dtoa@n+6
  6762  002600  C084  F09C         	movff	dtoa@d+7,dtoa@n+7
  6763  002604                     
  6764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6765  002604  0100               	movlb	0	; () banked
  6766  002606  BF9C               	btfsc	(dtoa@n+7)& (0+255),7,b
  6767  002608  EF08  F013         	goto	u8481
  6768  00260C  EF0B  F013         	goto	u8480
  6769  002610                     u8481:
  6770  002610  0E01               	movlw	1
  6771  002612  EF0C  F013         	goto	u8490
  6772  002616                     u8480:
  6773  002616  0E00               	movlw	0
  6774  002618                     u8490:
  6775  002618  6F93               	movwf	dtoa@s& (0+255),b
  6776  00261A  6B94               	clrf	(dtoa@s+1)& (0+255),b
  6777                           
  6778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6779  00261C  5193               	movf	dtoa@s& (0+255),w,b
  6780  00261E  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  6781  002620  B4D8               	btfsc	status,2,c
  6782  002622  EF15  F013         	goto	u8501
  6783  002626  EF17  F013         	goto	u8500
  6784  00262A                     u8501:
  6785  00262A  EF27  F013         	goto	l6105
  6786  00262E                     u8500:
  6787  00262E                     
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6790  00262E  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
  6791  002630  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
  6792  002632  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
  6793  002634  1F99               	comf	(dtoa@n+4)& (0+255),f,b
  6794  002636  1F98               	comf	(dtoa@n+3)& (0+255),f,b
  6795  002638  1F97               	comf	(dtoa@n+2)& (0+255),f,b
  6796  00263A  1F96               	comf	(dtoa@n+1)& (0+255),f,b
  6797  00263C  6D95               	negf	dtoa@n& (0+255),b
  6798  00263E  0E00               	movlw	0
  6799  002640  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
  6800  002642  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
  6801  002644  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
  6802  002646  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
  6803  002648  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
  6804  00264A  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
  6805  00264C  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
  6806  00264E                     l6105:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6810  00264E  BE32               	btfsc	(_prec+1)^0,7,c
  6811  002650  EF2C  F013         	goto	u8511
  6812  002654  EF2E  F013         	goto	u8510
  6813  002658                     u8511:
  6814  002658  EF2F  F013         	goto	l6109
  6815  00265C                     u8510:
  6816  00265C                     
  6817                           ; BSR set to: 0
  6818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6819  00265C  9233               	bcf	_flags^0,1,c
  6820  00265E                     l6109:
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6824  00265E  BE32               	btfsc	(_prec+1)^0,7,c
  6825  002660  EF3C  F013         	goto	u8520
  6826  002664  5032               	movf	(_prec+1)^0,w,c
  6827  002666  E106               	bnz	u8521
  6828  002668  0431               	decf	_prec^0,w,c
  6829  00266A  B0D8               	btfsc	status,0,c
  6830  00266C  EF3A  F013         	goto	u8521
  6831  002670  EF3C  F013         	goto	u8520
  6832  002674                     u8521:
  6833  002674  EF42  F013         	goto	l368
  6834  002678                     u8520:
  6835  002678                     
  6836                           ; BSR set to: 0
  6837  002678  0E00               	movlw	0
  6838  00267A  6F90               	movwf	(dtoa@p+1)& (0+255),b
  6839  00267C  0E01               	movlw	1
  6840  00267E  6F8F               	movwf	dtoa@p& (0+255),b
  6841  002680  EF46  F013         	goto	l370
  6842  002684                     l368:
  6843                           
  6844                           ; BSR set to: 0
  6845  002684  C031  F08F         	movff	_prec,dtoa@p
  6846  002688  C032  F090         	movff	_prec+1,dtoa@p+1
  6847  00268C                     l370:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6851  00268C  C02F  F091         	movff	_width,dtoa@w
  6852  002690  C030  F092         	movff	_width+1,dtoa@w+1
  6853  002694                     
  6854                           ; BSR set to: 0
  6855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6856  002694  5193               	movf	dtoa@s& (0+255),w,b
  6857  002696  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  6858  002698  A4D8               	btfss	status,2,c
  6859  00269A  EF51  F013         	goto	u8531
  6860  00269E  EF53  F013         	goto	u8530
  6861  0026A2                     u8531:
  6862  0026A2  EF5A  F013         	goto	l6117
  6863  0026A6                     u8530:
  6864  0026A6                     
  6865                           ; BSR set to: 0
  6866  0026A6  A433               	btfss	_flags^0,2,c
  6867  0026A8  EF58  F013         	goto	u8541
  6868  0026AC  EF5A  F013         	goto	u8540
  6869  0026B0                     u8541:
  6870  0026B0  EF5D  F013         	goto	l6119
  6871  0026B4                     u8540:
  6872  0026B4                     l6117:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6876  0026B4  0791               	decf	dtoa@w& (0+255),f,b
  6877  0026B6  A0D8               	btfss	status,0,c
  6878  0026B8  0792               	decf	(dtoa@w+1)& (0+255),f,b
  6879  0026BA                     l6119:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6883  0026BA  0E00               	movlw	0
  6884  0026BC  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  6885  0026BE  0E4F               	movlw	79
  6886  0026C0  6F9D               	movwf	dtoa@i& (0+255),b
  6887  0026C2                     
  6888                           ; BSR set to: 0
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6890  0026C2  0E00               	movlw	0
  6891  0026C4  0101               	movlb	1	; () banked
  6892  0026C6  6F57               	movwf	(_dbuf+79)& (0+255),b
  6893                           
  6894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6895  0026C8  EFE3  F013         	goto	l6133
  6896  0026CC                     l6123:
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6900  0026CC  079D               	decf	dtoa@i& (0+255),f,b
  6901  0026CE  A0D8               	btfss	status,0,c
  6902  0026D0  079E               	decf	(dtoa@i+1)& (0+255),f,b
  6903  0026D2                     
  6904                           ; BSR set to: 0
  6905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6906  0026D2  0E08               	movlw	low _dbuf
  6907  0026D4  259D               	addwf	dtoa@i& (0+255),w,b
  6908  0026D6  6ED9               	movwf	fsr2l,c
  6909  0026D8  0E01               	movlw	high _dbuf
  6910  0026DA  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  6911  0026DC  6EDA               	movwf	fsr2h,c
  6912  0026DE  C095  F060         	movff	dtoa@n,___aomod@dividend
  6913  0026E2  C096  F061         	movff	dtoa@n+1,___aomod@dividend+1
  6914  0026E6  C097  F062         	movff	dtoa@n+2,___aomod@dividend+2
  6915  0026EA  C098  F063         	movff	dtoa@n+3,___aomod@dividend+3
  6916  0026EE  C099  F064         	movff	dtoa@n+4,___aomod@dividend+4
  6917  0026F2  C09A  F065         	movff	dtoa@n+5,___aomod@dividend+5
  6918  0026F6  C09B  F066         	movff	dtoa@n+6,___aomod@dividend+6
  6919  0026FA  C09C  F067         	movff	dtoa@n+7,___aomod@dividend+7
  6920  0026FE  0E0A               	movlw	10
  6921  002700  6F68               	movwf	___aomod@divisor& (0+255),b
  6922  002702  0E00               	movlw	0
  6923  002704  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  6924  002706  0E00               	movlw	0
  6925  002708  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  6926  00270A  0E00               	movlw	0
  6927  00270C  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  6928  00270E  0E00               	movlw	0
  6929  002710  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  6930  002712  0E00               	movlw	0
  6931  002714  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  6932  002716  0E00               	movlw	0
  6933  002718  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  6934  00271A  0E00               	movlw	0
  6935  00271C  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  6936  00271E  EC1A  F01A         	call	___aomod	;wreg free
  6937  002722  C060  F085         	movff	?___aomod,??_dtoa
  6938  002726  C061  F086         	movff	?___aomod+1,??_dtoa+1
  6939  00272A  C062  F087         	movff	?___aomod+2,??_dtoa+2
  6940  00272E  C063  F088         	movff	?___aomod+3,??_dtoa+3
  6941  002732  C064  F089         	movff	?___aomod+4,??_dtoa+4
  6942  002736  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  6943  00273A  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  6944  00273E  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  6945  002742  C085  F072         	movff	??_dtoa,abs@a
  6946  002746  C087  F073         	movff	??_dtoa+2,abs@a+1
  6947  00274A  EC49  F024         	call	_abs	;wreg free
  6948  00274E  0100               	movlb	0	; () banked
  6949  002750  5172               	movf	?_abs& (0+255),w,b
  6950  002752  0F30               	addlw	48
  6951  002754  6EDF               	movwf	indf2,c
  6952  002756                     
  6953                           ; BSR set to: 0
  6954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6955  002756  078F               	decf	dtoa@p& (0+255),f,b
  6956  002758  A0D8               	btfss	status,0,c
  6957  00275A  0790               	decf	(dtoa@p+1)& (0+255),f,b
  6958  00275C                     
  6959                           ; BSR set to: 0
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6961  00275C  0791               	decf	dtoa@w& (0+255),f,b
  6962  00275E  A0D8               	btfss	status,0,c
  6963  002760  0792               	decf	(dtoa@w+1)& (0+255),f,b
  6964  002762                     
  6965                           ; BSR set to: 0
  6966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6967  002762  C095  F060         	movff	dtoa@n,___aodiv@dividend
  6968  002766  C096  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  6969  00276A  C097  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  6970  00276E  C098  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  6971  002772  C099  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  6972  002776  C09A  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  6973  00277A  C09B  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  6974  00277E  C09C  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  6975  002782  0E0A               	movlw	10
  6976  002784  6F68               	movwf	___aodiv@divisor& (0+255),b
  6977  002786  0E00               	movlw	0
  6978  002788  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  6979  00278A  0E00               	movlw	0
  6980  00278C  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  6981  00278E  0E00               	movlw	0
  6982  002790  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  6983  002792  0E00               	movlw	0
  6984  002794  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  6985  002796  0E00               	movlw	0
  6986  002798  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  6987  00279A  0E00               	movlw	0
  6988  00279C  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  6989  00279E  0E00               	movlw	0
  6990  0027A0  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  6991  0027A2  EC55  F019         	call	___aodiv	;wreg free
  6992  0027A6  C060  F095         	movff	?___aodiv,dtoa@n
  6993  0027AA  C061  F096         	movff	?___aodiv+1,dtoa@n+1
  6994  0027AE  C062  F097         	movff	?___aodiv+2,dtoa@n+2
  6995  0027B2  C063  F098         	movff	?___aodiv+3,dtoa@n+3
  6996  0027B6  C064  F099         	movff	?___aodiv+4,dtoa@n+4
  6997  0027BA  C065  F09A         	movff	?___aodiv+5,dtoa@n+5
  6998  0027BE  C066  F09B         	movff	?___aodiv+6,dtoa@n+6
  6999  0027C2  C067  F09C         	movff	?___aodiv+7,dtoa@n+7
  7000  0027C6                     l6133:
  7001                           
  7002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7003  0027C6  0100               	movlb	0	; () banked
  7004  0027C8  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  7005  0027CA  EFEF  F013         	goto	u8551
  7006  0027CE  519E               	movf	(dtoa@i+1)& (0+255),w,b
  7007  0027D0  E108               	bnz	u8550
  7008  0027D2  059D               	decf	dtoa@i& (0+255),w,b
  7009  0027D4  A0D8               	btfss	status,0,c
  7010  0027D6  EFEF  F013         	goto	u8551
  7011  0027DA  EFF1  F013         	goto	u8550
  7012  0027DE                     u8551:
  7013  0027DE  EF21  F014         	goto	l6143
  7014  0027E2                     u8550:
  7015  0027E2                     
  7016                           ; BSR set to: 0
  7017  0027E2  5195               	movf	dtoa@n& (0+255),w,b
  7018  0027E4  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
  7019  0027E6  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
  7020  0027E8  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
  7021  0027EA  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
  7022  0027EC  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
  7023  0027EE  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
  7024  0027F0  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
  7025  0027F2  A4D8               	btfss	status,2,c
  7026  0027F4  EFFE  F013         	goto	u8561
  7027  0027F8  EF00  F014         	goto	u8560
  7028  0027FC                     u8561:
  7029  0027FC  EF66  F013         	goto	l6123
  7030  002800                     u8560:
  7031  002800                     
  7032                           ; BSR set to: 0
  7033  002800  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  7034  002802  EF0D  F014         	goto	u8570
  7035  002806  5190               	movf	(dtoa@p+1)& (0+255),w,b
  7036  002808  E106               	bnz	u8571
  7037  00280A  058F               	decf	dtoa@p& (0+255),w,b
  7038  00280C  B0D8               	btfsc	status,0,c
  7039  00280E  EF0B  F014         	goto	u8571
  7040  002812  EF0D  F014         	goto	u8570
  7041  002816                     u8571:
  7042  002816  EF66  F013         	goto	l6123
  7043  00281A                     u8570:
  7044  00281A                     
  7045                           ; BSR set to: 0
  7046  00281A  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
  7047  00281C  EF18  F014         	goto	u8581
  7048  002820  5192               	movf	(dtoa@w+1)& (0+255),w,b
  7049  002822  E108               	bnz	u8580
  7050  002824  0591               	decf	dtoa@w& (0+255),w,b
  7051  002826  A0D8               	btfss	status,0,c
  7052  002828  EF18  F014         	goto	u8581
  7053  00282C  EF1A  F014         	goto	u8580
  7054  002830                     u8581:
  7055  002830  EF21  F014         	goto	l6143
  7056  002834                     u8580:
  7057  002834                     
  7058                           ; BSR set to: 0
  7059  002834  B233               	btfsc	_flags^0,1,c
  7060  002836  EF1F  F014         	goto	u8591
  7061  00283A  EF21  F014         	goto	u8590
  7062  00283E                     u8591:
  7063  00283E  EF66  F013         	goto	l6123
  7064  002842                     u8590:
  7065  002842                     l6143:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7069  002842  5193               	movf	dtoa@s& (0+255),w,b
  7070  002844  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  7071  002846  A4D8               	btfss	status,2,c
  7072  002848  EF28  F014         	goto	u8601
  7073  00284C  EF2A  F014         	goto	u8600
  7074  002850                     u8601:
  7075  002850  EF31  F014         	goto	l6147
  7076  002854                     u8600:
  7077  002854                     
  7078                           ; BSR set to: 0
  7079  002854  A433               	btfss	_flags^0,2,c
  7080  002856  EF2F  F014         	goto	u8611
  7081  00285A  EF31  F014         	goto	u8610
  7082  00285E                     u8611:
  7083  00285E  EF4F  F014         	goto	l6157
  7084  002862                     u8610:
  7085  002862                     l6147:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7089  002862  079D               	decf	dtoa@i& (0+255),f,b
  7090  002864  A0D8               	btfss	status,0,c
  7091  002866  079E               	decf	(dtoa@i+1)& (0+255),f,b
  7092  002868                     
  7093                           ; BSR set to: 0
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7095  002868  5193               	movf	dtoa@s& (0+255),w,b
  7096  00286A  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  7097  00286C  A4D8               	btfss	status,2,c
  7098  00286E  EF3B  F014         	goto	u8621
  7099  002872  EF3D  F014         	goto	u8620
  7100  002876                     u8621:
  7101  002876  EF43  F014         	goto	l6153
  7102  00287A                     u8620:
  7103  00287A                     
  7104                           ; BSR set to: 0
  7105  00287A  0E00               	movlw	0
  7106  00287C  6F8E               	movwf	(_dtoa$737+1)& (0+255),b
  7107  00287E  0E2B               	movlw	43
  7108  002880  6F8D               	movwf	_dtoa$737& (0+255),b
  7109  002882  EF47  F014         	goto	l6155
  7110  002886                     l6153:
  7111                           
  7112                           ; BSR set to: 0
  7113  002886  0E00               	movlw	0
  7114  002888  6F8E               	movwf	(_dtoa$737+1)& (0+255),b
  7115  00288A  0E2D               	movlw	45
  7116  00288C  6F8D               	movwf	_dtoa$737& (0+255),b
  7117  00288E                     l6155:
  7118                           
  7119                           ; BSR set to: 0
  7120  00288E  0E08               	movlw	low _dbuf
  7121  002890  259D               	addwf	dtoa@i& (0+255),w,b
  7122  002892  6ED9               	movwf	fsr2l,c
  7123  002894  0E01               	movlw	high _dbuf
  7124  002896  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  7125  002898  6EDA               	movwf	fsr2h,c
  7126  00289A  C08D  FFDF         	movff	_dtoa$737,indf2
  7127  00289E                     l6157:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7131  00289E  C07B  F070         	movff	dtoa@fp,pad@fp
  7132  0028A2  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  7133  0028A6  0E08               	movlw	low _dbuf
  7134  0028A8  259D               	addwf	dtoa@i& (0+255),w,b
  7135  0028AA  6F72               	movwf	pad@buf& (0+255),b
  7136  0028AC  0E01               	movlw	high _dbuf
  7137  0028AE  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  7138  0028B0  6F73               	movwf	(pad@buf+1)& (0+255),b
  7139  0028B2  C091  F074         	movff	dtoa@w,pad@p
  7140  0028B6  C092  F075         	movff	dtoa@w+1,pad@p+1
  7141  0028BA  ECC8  F01E         	call	_pad	;wreg free
  7142  0028BE  C070  F07B         	movff	?_pad,?_dtoa
  7143  0028C2  C071  F07C         	movff	?_pad+1,?_dtoa+1
  7144  0028C6  0012               	return		;funcret
  7145  0028C8                     __end_of_dtoa:
  7146                           	opt callstack 0
  7147                           
  7148 ;; *************** function _pad *****************
  7149 ;; Defined at:
  7150 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7153 ;;		 -> sprintf@f(6), 
  7154 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  7155 ;;		 -> dbuf(80), 
  7156 ;;  p               2   20[BANK0 ] int 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  w               2   25[BANK0 ] int 
  7159 ;;  i               2   23[BANK0 ] int 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  2   16[BANK0 ] int 
  7162 ;; Registers used:
  7163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7169 ;;      Params:         0       6       0       0       0       0       0       0       0
  7170 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7171 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7172 ;;      Totals:         0      11       0       0       0       0       0       0       0
  7173 ;;Total ram usage:       11 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    7
  7176 ;; This function calls:
  7177 ;;		_fputc
  7178 ;;		_fputs
  7179 ;;		_strlen
  7180 ;; This function is called by:
  7181 ;;		_dtoa
  7182 ;;		_efgtoa
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text21
  7187  003D90                     __ptext21:
  7188                           	opt callstack 0
  7189  003D90                     _pad:
  7190                           	opt callstack 18
  7191  003D90                     
  7192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7193  003D90  A033               	btfss	_flags^0,0,c
  7194  003D92  EFCD  F01E         	goto	u7201
  7195  003D96  EFCF  F01E         	goto	u7200
  7196  003D9A                     u7201:
  7197  003D9A  EFD9  F01E         	goto	l5409
  7198  003D9E                     u7200:
  7199  003D9E                     
  7200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7201  003D9E  C072  F069         	movff	pad@buf,fputs@s
  7202  003DA2  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7203  003DA6  C070  F06B         	movff	pad@fp,fputs@fp
  7204  003DAA  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7205  003DAE  EC03  F024         	call	_fputs	;wreg free
  7206  003DB2                     l5409:
  7207                           
  7208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7209  003DB2  0100               	movlb	0	; () banked
  7210  003DB4  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  7211  003DB6  EFDF  F01E         	goto	u7211
  7212  003DBA  EFE1  F01E         	goto	u7210
  7213  003DBE                     u7211:
  7214  003DBE  EFE7  F01E         	goto	l5413
  7215  003DC2                     u7210:
  7216  003DC2                     
  7217                           ; BSR set to: 0
  7218  003DC2  C074  F079         	movff	pad@p,pad@w
  7219  003DC6  C075  F07A         	movff	pad@p+1,pad@w+1
  7220  003DCA  EFEB  F01E         	goto	l357
  7221  003DCE                     l5413:
  7222                           
  7223                           ; BSR set to: 0
  7224  003DCE  0E00               	movlw	0
  7225  003DD0  6F7A               	movwf	(pad@w+1)& (0+255),b
  7226  003DD2  0E00               	movlw	0
  7227  003DD4  6F79               	movwf	pad@w& (0+255),b
  7228  003DD6                     l357:
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7232  003DD6  0E00               	movlw	0
  7233  003DD8  6F78               	movwf	(pad@i+1)& (0+255),b
  7234  003DDA  0E00               	movlw	0
  7235  003DDC  6F77               	movwf	pad@i& (0+255),b
  7236                           
  7237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7238  003DDE  EFFE  F01E         	goto	l5419
  7239  003DE2                     l5415:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7243  003DE2  0E00               	movlw	0
  7244  003DE4  6F61               	movwf	(fputc@c+1)& (0+255),b
  7245  003DE6  0E20               	movlw	32
  7246  003DE8  6F60               	movwf	fputc@c& (0+255),b
  7247  003DEA  C070  F062         	movff	pad@fp,fputc@fp
  7248  003DEE  C071  F063         	movff	pad@fp+1,fputc@fp+1
  7249  003DF2  EC62  F01E         	call	_fputc	;wreg free
  7250  003DF6                     
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7252  003DF6  0100               	movlb	0	; () banked
  7253  003DF8  4B77               	infsnz	pad@i& (0+255),f,b
  7254  003DFA  2B78               	incf	(pad@i+1)& (0+255),f,b
  7255  003DFC                     l5419:
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7259  003DFC  5179               	movf	pad@w& (0+255),w,b
  7260  003DFE  5D77               	subwf	pad@i& (0+255),w,b
  7261  003E00  5178               	movf	(pad@i+1)& (0+255),w,b
  7262  003E02  0A80               	xorlw	128
  7263  003E04  6F76               	movwf	??_pad& (0+255),b
  7264  003E06  517A               	movf	(pad@w+1)& (0+255),w,b
  7265  003E08  0A80               	xorlw	128
  7266  003E0A  5976               	subwfb	??_pad& (0+255),w,b
  7267  003E0C  A0D8               	btfss	status,0,c
  7268  003E0E  EF0B  F01F         	goto	u7221
  7269  003E12  EF0D  F01F         	goto	u7220
  7270  003E16                     u7221:
  7271  003E16  EFF1  F01E         	goto	l5415
  7272  003E1A                     u7220:
  7273  003E1A                     
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7276  003E1A  B033               	btfsc	_flags^0,0,c
  7277  003E1C  EF12  F01F         	goto	u7231
  7278  003E20  EF14  F01F         	goto	u7230
  7279  003E24                     u7231:
  7280  003E24  EF1E  F01F         	goto	l5423
  7281  003E28                     u7230:
  7282  003E28                     
  7283                           ; BSR set to: 0
  7284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7285  003E28  C072  F069         	movff	pad@buf,fputs@s
  7286  003E2C  C073  F06A         	movff	pad@buf+1,fputs@s+1
  7287  003E30  C070  F06B         	movff	pad@fp,fputs@fp
  7288  003E34  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  7289  003E38  EC03  F024         	call	_fputs	;wreg free
  7290  003E3C                     l5423:
  7291                           
  7292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7293  003E3C  C072  F060         	movff	pad@buf,strlen@s
  7294  003E40  C073  F061         	movff	pad@buf+1,strlen@s+1
  7295  003E44  ECE2  F024         	call	_strlen	;wreg free
  7296  003E48  0100               	movlb	0	; () banked
  7297  003E4A  5179               	movf	pad@w& (0+255),w,b
  7298  003E4C  2560               	addwf	?_strlen& (0+255),w,b
  7299  003E4E  6F70               	movwf	?_pad& (0+255),b
  7300  003E50  517A               	movf	(pad@w+1)& (0+255),w,b
  7301  003E52  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  7302  003E54  6F71               	movwf	(?_pad+1)& (0+255),b
  7303  003E56                     
  7304                           ; BSR set to: 0
  7305  003E56  0012               	return		;funcret
  7306  003E58                     __end_of_pad:
  7307                           	opt callstack 0
  7308                           
  7309 ;; *************** function _strlen *****************
  7310 ;; Defined at:
  7311 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  7314 ;;		 -> dbuf(80), 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  7317 ;;		 -> dbuf(80), 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  2    0[BANK0 ] unsigned int 
  7320 ;; Registers used:
  7321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7327 ;;      Params:         0       2       0       0       0       0       0       0       0
  7328 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7330 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7331 ;;Total ram usage:        4 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    4
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_pad
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text22
  7342  0049C4                     __ptext22:
  7343                           	opt callstack 0
  7344  0049C4                     _strlen:
  7345                           	opt callstack 20
  7346  0049C4  C060  F062         	movff	strlen@s,strlen@a
  7347  0049C8  C061  F063         	movff	strlen@s+1,strlen@a+1
  7348  0049CC  EFEB  F024         	goto	l5193
  7349  0049D0                     l5191:
  7350  0049D0  0100               	movlb	0	; () banked
  7351  0049D2  4B60               	infsnz	strlen@s& (0+255),f,b
  7352  0049D4  2B61               	incf	(strlen@s+1)& (0+255),f,b
  7353  0049D6                     l5193:
  7354  0049D6  C060  FFD9         	movff	strlen@s,fsr2l
  7355  0049DA  C061  FFDA         	movff	strlen@s+1,fsr2h
  7356  0049DE  50DF               	movf	indf2,w,c
  7357  0049E0  A4D8               	btfss	status,2,c
  7358  0049E2  EFF5  F024         	goto	u6781
  7359  0049E6  EFF7  F024         	goto	u6780
  7360  0049EA                     u6781:
  7361  0049EA  EFE8  F024         	goto	l5191
  7362  0049EE                     u6780:
  7363  0049EE  0100               	movlb	0	; () banked
  7364  0049F0  5162               	movf	strlen@a& (0+255),w,b
  7365  0049F2  5D60               	subwf	strlen@s& (0+255),w,b
  7366  0049F4  6F60               	movwf	?_strlen& (0+255),b
  7367  0049F6  5163               	movf	(strlen@a+1)& (0+255),w,b
  7368  0049F8  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  7369  0049FA  6F61               	movwf	(?_strlen+1)& (0+255),b
  7370  0049FC                     
  7371                           ; BSR set to: 0
  7372  0049FC  0012               	return		;funcret
  7373  0049FE                     __end_of_strlen:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _fputs *****************
  7377 ;; Defined at:
  7378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  7381 ;;		 -> dbuf(80), 
  7382 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  7383 ;;		 -> sprintf@f(6), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  i               2   14[BANK0 ] int 
  7386 ;;  c               1   13[BANK0 ] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  2    9[BANK0 ] int 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7396 ;;      Params:         0       4       0       0       0       0       0       0       0
  7397 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7399 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7400 ;;Total ram usage:        7 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    6
  7403 ;; This function calls:
  7404 ;;		_fputc
  7405 ;; This function is called by:
  7406 ;;		_pad
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text23
  7411  004806                     __ptext23:
  7412                           	opt callstack 0
  7413  004806                     _fputs:
  7414                           	opt callstack 18
  7415  004806  0E00               	movlw	0
  7416  004808  0100               	movlb	0	; () banked
  7417  00480A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  7418  00480C  0E00               	movlw	0
  7419  00480E  6F6E               	movwf	fputs@i& (0+255),b
  7420  004810  EF16  F024         	goto	l5187
  7421  004814                     l5183:
  7422                           
  7423                           ; BSR set to: 0
  7424  004814  C06D  F060         	movff	fputs@c,fputc@c
  7425  004818  6B61               	clrf	(fputc@c+1)& (0+255),b
  7426  00481A  C06B  F062         	movff	fputs@fp,fputc@fp
  7427  00481E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  7428  004822  EC62  F01E         	call	_fputc	;wreg free
  7429  004826  0100               	movlb	0	; () banked
  7430  004828  4B6E               	infsnz	fputs@i& (0+255),f,b
  7431  00482A  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  7432  00482C                     l5187:
  7433                           
  7434                           ; BSR set to: 0
  7435  00482C  516E               	movf	fputs@i& (0+255),w,b
  7436  00482E  2569               	addwf	fputs@s& (0+255),w,b
  7437  004830  6ED9               	movwf	fsr2l,c
  7438  004832  516F               	movf	(fputs@i+1)& (0+255),w,b
  7439  004834  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  7440  004836  6EDA               	movwf	fsr2h,c
  7441  004838  50DF               	movf	indf2,w,c
  7442  00483A  6F6D               	movwf	fputs@c& (0+255),b
  7443  00483C  516D               	movf	fputs@c& (0+255),w,b
  7444  00483E  A4D8               	btfss	status,2,c
  7445  004840  EF24  F024         	goto	u6771
  7446  004844  EF26  F024         	goto	u6770
  7447  004848                     u6771:
  7448  004848  EF0A  F024         	goto	l5183
  7449  00484C                     u6770:
  7450  00484C                     
  7451                           ; BSR set to: 0
  7452  00484C  0012               	return		;funcret
  7453  00484E                     __end_of_fputs:
  7454                           	opt callstack 0
  7455                           
  7456 ;; *************** function _fputc *****************
  7457 ;; Defined at:
  7458 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  c               2    0[BANK0 ] int 
  7461 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  7462 ;;		 -> sprintf@f(6), 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;		None
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  2    0[BANK0 ] int 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7474 ;;      Params:         0       4       0       0       0       0       0       0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7476 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7477 ;;      Totals:         0       9       0       0       0       0       0       0       0
  7478 ;;Total ram usage:        9 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:    5
  7481 ;; This function calls:
  7482 ;;		_putch
  7483 ;; This function is called by:
  7484 ;;		_pad
  7485 ;;		_vfpfcnvrt
  7486 ;;		_fputs
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text24
  7491  003CC4                     __ptext24:
  7492                           	opt callstack 0
  7493  003CC4                     _fputc:
  7494                           	opt callstack 21
  7495  003CC4  0100               	movlb	0	; () banked
  7496  003CC6  5162               	movf	fputc@fp& (0+255),w,b
  7497  003CC8  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7498  003CCA  B4D8               	btfsc	status,2,c
  7499  003CCC  EF6A  F01E         	goto	u6731
  7500  003CD0  EF6C  F01E         	goto	u6730
  7501  003CD4                     u6731:
  7502  003CD4  EF75  F01E         	goto	l5171
  7503  003CD8                     u6730:
  7504  003CD8                     
  7505                           ; BSR set to: 0
  7506  003CD8  5162               	movf	fputc@fp& (0+255),w,b
  7507  003CDA  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  7508  003CDC  A4D8               	btfss	status,2,c
  7509  003CDE  EF73  F01E         	goto	u6741
  7510  003CE2  EF75  F01E         	goto	u6740
  7511  003CE6                     u6741:
  7512  003CE6  EF7A  F01E         	goto	l5173
  7513  003CEA                     u6740:
  7514  003CEA                     l5171:
  7515                           
  7516                           ; BSR set to: 0
  7517  003CEA  5160               	movf	fputc@c& (0+255),w,b
  7518  003CEC  ECF2  F025         	call	_putch
  7519  003CF0  EFC7  F01E         	goto	l1281
  7520  003CF4                     l5173:
  7521                           
  7522                           ; BSR set to: 0
  7523  003CF4  EE20 F004          	lfsr	2,4
  7524  003CF8  5162               	movf	fputc@fp& (0+255),w,b
  7525  003CFA  26D9               	addwf	fsr2l,f,c
  7526  003CFC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7527  003CFE  22DA               	addwfc	fsr2h,f,c
  7528  003D00  50DE               	movf	postinc2,w,c
  7529  003D02  10DE               	iorwf	postinc2,w,c
  7530  003D04  B4D8               	btfsc	status,2,c
  7531  003D06  EF87  F01E         	goto	u6751
  7532  003D0A  EF89  F01E         	goto	u6750
  7533  003D0E                     u6751:
  7534  003D0E  EFA4  F01E         	goto	l5177
  7535  003D12                     u6750:
  7536  003D12                     
  7537                           ; BSR set to: 0
  7538  003D12  EE20 F004          	lfsr	2,4
  7539  003D16  5162               	movf	fputc@fp& (0+255),w,b
  7540  003D18  26D9               	addwf	fsr2l,f,c
  7541  003D1A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7542  003D1C  22DA               	addwfc	fsr2h,f,c
  7543  003D1E  EE10 F002          	lfsr	1,2
  7544  003D22  5162               	movf	fputc@fp& (0+255),w,b
  7545  003D24  26E1               	addwf	fsr1l,f,c
  7546  003D26  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7547  003D28  22E2               	addwfc	fsr1h,f,c
  7548  003D2A  50DE               	movf	postinc2,w,c
  7549  003D2C  5CE6               	subwf	postinc1,w,c
  7550  003D2E  50E6               	movf	postinc1,w,c
  7551  003D30  0A80               	xorlw	128
  7552  003D32  6F68               	movwf	(??_fputc+4)& (0+255),b
  7553  003D34  50DE               	movf	postinc2,w,c
  7554  003D36  0A80               	xorlw	128
  7555  003D38  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  7556  003D3A  B0D8               	btfsc	status,0,c
  7557  003D3C  EFA2  F01E         	goto	u6761
  7558  003D40  EFA4  F01E         	goto	u6760
  7559  003D44                     u6761:
  7560  003D44  EFC7  F01E         	goto	l1281
  7561  003D48                     u6760:
  7562  003D48                     l5177:
  7563                           
  7564                           ; BSR set to: 0
  7565  003D48  EE20 F002          	lfsr	2,2
  7566  003D4C  5162               	movf	fputc@fp& (0+255),w,b
  7567  003D4E  26D9               	addwf	fsr2l,f,c
  7568  003D50  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7569  003D52  22DA               	addwfc	fsr2h,f,c
  7570  003D54  CFDE F064          	movff	postinc2,??_fputc
  7571  003D58  CFDD F065          	movff	postdec2,??_fputc+1
  7572  003D5C  C062  FFD9         	movff	fputc@fp,fsr2l
  7573  003D60  C063  FFDA         	movff	fputc@fp+1,fsr2h
  7574  003D64  CFDE F066          	movff	postinc2,??_fputc+2
  7575  003D68  CFDD F067          	movff	postdec2,??_fputc+3
  7576  003D6C  5164               	movf	??_fputc& (0+255),w,b
  7577  003D6E  2566               	addwf	(??_fputc+2)& (0+255),w,b
  7578  003D70  6ED9               	movwf	fsr2l,c
  7579  003D72  5165               	movf	(??_fputc+1)& (0+255),w,b
  7580  003D74  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  7581  003D76  6EDA               	movwf	fsr2h,c
  7582  003D78  C060  FFDF         	movff	fputc@c,indf2
  7583  003D7C  EE20 F002          	lfsr	2,2
  7584  003D80  5162               	movf	fputc@fp& (0+255),w,b
  7585  003D82  26D9               	addwf	fsr2l,f,c
  7586  003D84  5163               	movf	(fputc@fp+1)& (0+255),w,b
  7587  003D86  22DA               	addwfc	fsr2h,f,c
  7588  003D88  2ADE               	incf	postinc2,f,c
  7589  003D8A  0E00               	movlw	0
  7590  003D8C  22DD               	addwfc	postdec2,f,c
  7591  003D8E                     l1281:
  7592  003D8E  0012               	return		;funcret
  7593  003D90                     __end_of_fputc:
  7594                           	opt callstack 0
  7595                           
  7596 ;; *************** function _putch *****************
  7597 ;; Defined at:
  7598 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  c               1    wreg     unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  c               1    0[COMRAM] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7616 ;;Total ram usage:        0 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    4
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_fputc
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text25
  7627  004BE4                     __ptext25:
  7628                           	opt callstack 0
  7629  004BE4                     _putch:
  7630                           	opt callstack 21
  7631  004BE4  0012               	return		;funcret
  7632  004BE6                     __end_of_putch:
  7633                           	opt callstack 0
  7634                           
  7635 ;; *************** function _abs *****************
  7636 ;; Defined at:
  7637 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  a               2   18[BANK0 ] int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2   18[BANK0 ] int 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7651 ;;      Params:         0       2       0       0       0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7653 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7654 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7655 ;;Total ram usage:        4 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    4
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_dtoa
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text26
  7666  004892                     __ptext26:
  7667                           	opt callstack 0
  7668  004892                     _abs:
  7669                           	opt callstack 21
  7670  004892  0100               	movlb	0	; () banked
  7671  004894  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  7672  004896  EF57  F024         	goto	u7240
  7673  00489A  5173               	movf	(abs@a+1)& (0+255),w,b
  7674  00489C  E106               	bnz	u7241
  7675  00489E  0572               	decf	abs@a& (0+255),w,b
  7676  0048A0  B0D8               	btfsc	status,0,c
  7677  0048A2  EF55  F024         	goto	u7241
  7678  0048A6  EF57  F024         	goto	u7240
  7679  0048AA                     u7241:
  7680  0048AA  EF65  F024         	goto	l1202
  7681  0048AE                     u7240:
  7682  0048AE                     
  7683                           ; BSR set to: 0
  7684  0048AE  C072  F074         	movff	abs@a,??_abs
  7685  0048B2  C073  F075         	movff	abs@a+1,??_abs+1
  7686  0048B6  1F74               	comf	??_abs& (0+255),f,b
  7687  0048B8  1F75               	comf	(??_abs+1)& (0+255),f,b
  7688  0048BA  4B74               	infsnz	??_abs& (0+255),f,b
  7689  0048BC  2B75               	incf	(??_abs+1)& (0+255),f,b
  7690  0048BE  C074  F072         	movff	??_abs,?_abs
  7691  0048C2  C075  F073         	movff	??_abs+1,?_abs+1
  7692  0048C6  EF69  F024         	goto	l1205
  7693  0048CA                     l1202:
  7694                           
  7695                           ; BSR set to: 0
  7696  0048CA  C072  F072         	movff	abs@a,?_abs
  7697  0048CE  C073  F073         	movff	abs@a+1,?_abs+1
  7698  0048D2                     l1205:
  7699                           
  7700                           ; BSR set to: 0
  7701  0048D2  0012               	return		;funcret
  7702  0048D4                     __end_of_abs:
  7703                           	opt callstack 0
  7704                           
  7705 ;; *************** function ___aomod *****************
  7706 ;; Defined at:
  7707 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  dividend        8    0[BANK0 ] long long 
  7710 ;;  divisor         8    8[BANK0 ] long long 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  sign            1   17[BANK0 ] unsigned char 
  7713 ;;  counter         1   16[BANK0 ] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  8    0[BANK0 ] long long 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7723 ;;      Params:         0      16       0       0       0       0       0       0       0
  7724 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7726 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7727 ;;Total ram usage:       18 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    4
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_dtoa
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text27
  7738  003434                     __ptext27:
  7739                           	opt callstack 0
  7740  003434                     ___aomod:
  7741                           	opt callstack 21
  7742  003434  0E00               	movlw	0
  7743  003436  0100               	movlb	0	; () banked
  7744  003438  6F71               	movwf	___aomod@sign& (0+255),b
  7745  00343A                     
  7746                           ; BSR set to: 0
  7747  00343A  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  7748  00343C  EF24  F01A         	goto	u7560
  7749  003440  EF22  F01A         	goto	u7561
  7750  003444                     u7561:
  7751  003444  EF36  F01A         	goto	l5557
  7752  003448                     u7560:
  7753  003448                     
  7754                           ; BSR set to: 0
  7755  003448  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  7756  00344A  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  7757  00344C  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  7758  00344E  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  7759  003450  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  7760  003452  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  7761  003454  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  7762  003456  6D60               	negf	___aomod@dividend& (0+255),b
  7763  003458  0E00               	movlw	0
  7764  00345A  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  7765  00345C  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  7766  00345E  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  7767  003460  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  7768  003462  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  7769  003464  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  7770  003466  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  7771  003468                     
  7772                           ; BSR set to: 0
  7773  003468  0E01               	movlw	1
  7774  00346A  6F71               	movwf	___aomod@sign& (0+255),b
  7775  00346C                     l5557:
  7776                           
  7777                           ; BSR set to: 0
  7778  00346C  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  7779  00346E  EF3D  F01A         	goto	u7570
  7780  003472  EF3B  F01A         	goto	u7571
  7781  003476                     u7571:
  7782  003476  EF4D  F01A         	goto	l5561
  7783  00347A                     u7570:
  7784  00347A                     
  7785                           ; BSR set to: 0
  7786  00347A  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  7787  00347C  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  7788  00347E  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  7789  003480  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  7790  003482  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  7791  003484  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  7792  003486  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  7793  003488  6D68               	negf	___aomod@divisor& (0+255),b
  7794  00348A  0E00               	movlw	0
  7795  00348C  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  7796  00348E  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  7797  003490  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  7798  003492  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  7799  003494  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  7800  003496  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  7801  003498  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  7802  00349A                     l5561:
  7803                           
  7804                           ; BSR set to: 0
  7805  00349A  5168               	movf	___aomod@divisor& (0+255),w,b
  7806  00349C  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  7807  00349E  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  7808  0034A0  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  7809  0034A2  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  7810  0034A4  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  7811  0034A6  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  7812  0034A8  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  7813  0034AA  B4D8               	btfsc	status,2,c
  7814  0034AC  EF5A  F01A         	goto	u7581
  7815  0034B0  EF5C  F01A         	goto	u7580
  7816  0034B4                     u7581:
  7817  0034B4  EFA4  F01A         	goto	l5577
  7818  0034B8                     u7580:
  7819  0034B8                     
  7820                           ; BSR set to: 0
  7821  0034B8  0E01               	movlw	1
  7822  0034BA  6F70               	movwf	___aomod@counter& (0+255),b
  7823  0034BC  EF6A  F01A         	goto	l5567
  7824  0034C0                     l5565:
  7825                           
  7826                           ; BSR set to: 0
  7827  0034C0  90D8               	bcf	status,0,c
  7828  0034C2  3768               	rlcf	___aomod@divisor& (0+255),f,b
  7829  0034C4  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  7830  0034C6  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  7831  0034C8  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  7832  0034CA  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  7833  0034CC  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  7834  0034CE  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  7835  0034D0  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  7836  0034D2  2B70               	incf	___aomod@counter& (0+255),f,b
  7837  0034D4                     l5567:
  7838                           
  7839                           ; BSR set to: 0
  7840  0034D4  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  7841  0034D6  EF6F  F01A         	goto	u7591
  7842  0034DA  EF71  F01A         	goto	u7590
  7843  0034DE                     u7591:
  7844  0034DE  EF60  F01A         	goto	l5565
  7845  0034E2                     u7590:
  7846  0034E2                     l5569:
  7847                           
  7848                           ; BSR set to: 0
  7849  0034E2  5168               	movf	___aomod@divisor& (0+255),w,b
  7850  0034E4  5D60               	subwf	___aomod@dividend& (0+255),w,b
  7851  0034E6  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  7852  0034E8  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  7853  0034EA  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  7854  0034EC  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  7855  0034EE  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  7856  0034F0  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  7857  0034F2  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  7858  0034F4  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  7859  0034F6  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  7860  0034F8  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  7861  0034FA  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  7862  0034FC  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  7863  0034FE  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  7864  003500  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  7865  003502  A0D8               	btfss	status,0,c
  7866  003504  EF86  F01A         	goto	u7601
  7867  003508  EF88  F01A         	goto	u7600
  7868  00350C                     u7601:
  7869  00350C  EF98  F01A         	goto	l5573
  7870  003510                     u7600:
  7871  003510                     
  7872                           ; BSR set to: 0
  7873  003510  5168               	movf	___aomod@divisor& (0+255),w,b
  7874  003512  5F60               	subwf	___aomod@dividend& (0+255),f,b
  7875  003514  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  7876  003516  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  7877  003518  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  7878  00351A  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  7879  00351C  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  7880  00351E  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  7881  003520  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  7882  003522  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  7883  003524  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  7884  003526  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  7885  003528  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  7886  00352A  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  7887  00352C  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  7888  00352E  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  7889  003530                     l5573:
  7890                           
  7891                           ; BSR set to: 0
  7892  003530  90D8               	bcf	status,0,c
  7893  003532  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  7894  003534  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  7895  003536  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  7896  003538  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  7897  00353A  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  7898  00353C  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  7899  00353E  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  7900  003540  3368               	rrcf	___aomod@divisor& (0+255),f,b
  7901  003542                     
  7902                           ; BSR set to: 0
  7903  003542  2F70               	decfsz	___aomod@counter& (0+255),f,b
  7904  003544  EF71  F01A         	goto	l5569
  7905  003548                     l5577:
  7906                           
  7907                           ; BSR set to: 0
  7908  003548  5171               	movf	___aomod@sign& (0+255),w,b
  7909  00354A  B4D8               	btfsc	status,2,c
  7910  00354C  EFAA  F01A         	goto	u7611
  7911  003550  EFAC  F01A         	goto	u7610
  7912  003554                     u7611:
  7913  003554  EFBC  F01A         	goto	l5581
  7914  003558                     u7610:
  7915  003558                     
  7916                           ; BSR set to: 0
  7917  003558  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  7918  00355A  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  7919  00355C  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  7920  00355E  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  7921  003560  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  7922  003562  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  7923  003564  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  7924  003566  6D60               	negf	___aomod@dividend& (0+255),b
  7925  003568  0E00               	movlw	0
  7926  00356A  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  7927  00356C  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  7928  00356E  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  7929  003570  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  7930  003572  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  7931  003574  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  7932  003576  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  7933  003578                     l5581:
  7934                           
  7935                           ; BSR set to: 0
  7936  003578  C060  F060         	movff	___aomod@dividend,?___aomod
  7937  00357C  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  7938  003580  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  7939  003584  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  7940  003588  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  7941  00358C  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  7942  003590  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  7943  003594  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  7944  003598                     
  7945                           ; BSR set to: 0
  7946  003598  0012               	return		;funcret
  7947  00359A                     __end_of___aomod:
  7948                           	opt callstack 0
  7949                           
  7950 ;; *************** function ___aodiv *****************
  7951 ;; Defined at:
  7952 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  dividend        8    0[BANK0 ] long long 
  7955 ;;  divisor         8    8[BANK0 ] long long 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  quotient        8   18[BANK0 ] long long 
  7958 ;;  sign            1   17[BANK0 ] unsigned char 
  7959 ;;  counter         1   16[BANK0 ] unsigned char 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  8    0[BANK0 ] long long 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7969 ;;      Params:         0      16       0       0       0       0       0       0       0
  7970 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7972 ;;      Totals:         0      26       0       0       0       0       0       0       0
  7973 ;;Total ram usage:       26 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    4
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_dtoa
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text28
  7984  0032AA                     __ptext28:
  7985                           	opt callstack 0
  7986  0032AA                     ___aodiv:
  7987                           	opt callstack 21
  7988  0032AA  0E00               	movlw	0
  7989  0032AC  0100               	movlb	0	; () banked
  7990  0032AE  6F71               	movwf	___aodiv@sign& (0+255),b
  7991  0032B0                     
  7992                           ; BSR set to: 0
  7993  0032B0  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  7994  0032B2  EF5F  F019         	goto	u7490
  7995  0032B6  EF5D  F019         	goto	u7491
  7996  0032BA                     u7491:
  7997  0032BA  EF71  F019         	goto	l5513
  7998  0032BE                     u7490:
  7999  0032BE                     
  8000                           ; BSR set to: 0
  8001  0032BE  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  8002  0032C0  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  8003  0032C2  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  8004  0032C4  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  8005  0032C6  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  8006  0032C8  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  8007  0032CA  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  8008  0032CC  6D68               	negf	___aodiv@divisor& (0+255),b
  8009  0032CE  0E00               	movlw	0
  8010  0032D0  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  8011  0032D2  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  8012  0032D4  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  8013  0032D6  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  8014  0032D8  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  8015  0032DA  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  8016  0032DC  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  8017  0032DE                     
  8018                           ; BSR set to: 0
  8019  0032DE  0E01               	movlw	1
  8020  0032E0  6F71               	movwf	___aodiv@sign& (0+255),b
  8021  0032E2                     l5513:
  8022                           
  8023                           ; BSR set to: 0
  8024  0032E2  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  8025  0032E4  EF78  F019         	goto	u7500
  8026  0032E8  EF76  F019         	goto	u7501
  8027  0032EC                     u7501:
  8028  0032EC  EF8A  F019         	goto	l5519
  8029  0032F0                     u7500:
  8030  0032F0                     
  8031                           ; BSR set to: 0
  8032  0032F0  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  8033  0032F2  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  8034  0032F4  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  8035  0032F6  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  8036  0032F8  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  8037  0032FA  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  8038  0032FC  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  8039  0032FE  6D60               	negf	___aodiv@dividend& (0+255),b
  8040  003300  0E00               	movlw	0
  8041  003302  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  8042  003304  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  8043  003306  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  8044  003308  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  8045  00330A  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  8046  00330C  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  8047  00330E  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  8048  003310                     
  8049                           ; BSR set to: 0
  8050  003310  0E01               	movlw	1
  8051  003312  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  8052  003314                     l5519:
  8053                           
  8054                           ; BSR set to: 0
  8055  003314  EE20  F072         	lfsr	2,___aodiv@quotient
  8056  003318  0E07               	movlw	7
  8057  00331A                     u7511:
  8058  00331A  6ADE               	clrf	postinc2,c
  8059  00331C  06E8               	decf	wreg,f,c
  8060  00331E  E2FD               	bc	u7511
  8061  003320                     
  8062                           ; BSR set to: 0
  8063  003320  5168               	movf	___aodiv@divisor& (0+255),w,b
  8064  003322  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  8065  003324  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  8066  003326  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  8067  003328  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  8068  00332A  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  8069  00332C  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  8070  00332E  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  8071  003330  B4D8               	btfsc	status,2,c
  8072  003332  EF9D  F019         	goto	u7521
  8073  003336  EF9F  F019         	goto	u7520
  8074  00333A                     u7521:
  8075  00333A  EFF1  F019         	goto	l5541
  8076  00333E                     u7520:
  8077  00333E                     
  8078                           ; BSR set to: 0
  8079  00333E  0E01               	movlw	1
  8080  003340  6F70               	movwf	___aodiv@counter& (0+255),b
  8081  003342  EFAD  F019         	goto	l5527
  8082  003346                     l5525:
  8083                           
  8084                           ; BSR set to: 0
  8085  003346  90D8               	bcf	status,0,c
  8086  003348  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  8087  00334A  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  8088  00334C  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  8089  00334E  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  8090  003350  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  8091  003352  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  8092  003354  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  8093  003356  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  8094  003358  2B70               	incf	___aodiv@counter& (0+255),f,b
  8095  00335A                     l5527:
  8096                           
  8097                           ; BSR set to: 0
  8098  00335A  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  8099  00335C  EFB2  F019         	goto	u7531
  8100  003360  EFB4  F019         	goto	u7530
  8101  003364                     u7531:
  8102  003364  EFA3  F019         	goto	l5525
  8103  003368                     u7530:
  8104  003368                     l5529:
  8105                           
  8106                           ; BSR set to: 0
  8107  003368  90D8               	bcf	status,0,c
  8108  00336A  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  8109  00336C  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  8110  00336E  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  8111  003370  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  8112  003372  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  8113  003374  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  8114  003376  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  8115  003378  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  8116  00337A                     
  8117                           ; BSR set to: 0
  8118  00337A  5168               	movf	___aodiv@divisor& (0+255),w,b
  8119  00337C  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  8120  00337E  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8121  003380  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  8122  003382  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8123  003384  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  8124  003386  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8125  003388  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  8126  00338A  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8127  00338C  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  8128  00338E  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8129  003390  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  8130  003392  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8131  003394  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  8132  003396  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8133  003398  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  8134  00339A  A0D8               	btfss	status,0,c
  8135  00339C  EFD2  F019         	goto	u7541
  8136  0033A0  EFD4  F019         	goto	u7540
  8137  0033A4                     u7541:
  8138  0033A4  EFE5  F019         	goto	l5537
  8139  0033A8                     u7540:
  8140  0033A8                     
  8141                           ; BSR set to: 0
  8142  0033A8  5168               	movf	___aodiv@divisor& (0+255),w,b
  8143  0033AA  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  8144  0033AC  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8145  0033AE  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  8146  0033B0  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8147  0033B2  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  8148  0033B4  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8149  0033B6  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  8150  0033B8  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8151  0033BA  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  8152  0033BC  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8153  0033BE  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  8154  0033C0  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8155  0033C2  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  8156  0033C4  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8157  0033C6  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  8158  0033C8                     
  8159                           ; BSR set to: 0
  8160  0033C8  8172               	bsf	___aodiv@quotient& (0+255),0,b
  8161  0033CA                     l5537:
  8162                           
  8163                           ; BSR set to: 0
  8164  0033CA  90D8               	bcf	status,0,c
  8165  0033CC  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  8166  0033CE  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  8167  0033D0  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  8168  0033D2  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  8169  0033D4  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  8170  0033D6  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  8171  0033D8  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  8172  0033DA  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  8173  0033DC                     
  8174                           ; BSR set to: 0
  8175  0033DC  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  8176  0033DE  EFB4  F019         	goto	l5529
  8177  0033E2                     l5541:
  8178                           
  8179                           ; BSR set to: 0
  8180  0033E2  5171               	movf	___aodiv@sign& (0+255),w,b
  8181  0033E4  B4D8               	btfsc	status,2,c
  8182  0033E6  EFF7  F019         	goto	u7551
  8183  0033EA  EFF9  F019         	goto	u7550
  8184  0033EE                     u7551:
  8185  0033EE  EF09  F01A         	goto	l5545
  8186  0033F2                     u7550:
  8187  0033F2                     
  8188                           ; BSR set to: 0
  8189  0033F2  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  8190  0033F4  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  8191  0033F6  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  8192  0033F8  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  8193  0033FA  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  8194  0033FC  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  8195  0033FE  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  8196  003400  6D72               	negf	___aodiv@quotient& (0+255),b
  8197  003402  0E00               	movlw	0
  8198  003404  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  8199  003406  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  8200  003408  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  8201  00340A  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  8202  00340C  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  8203  00340E  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  8204  003410  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  8205  003412                     l5545:
  8206                           
  8207                           ; BSR set to: 0
  8208  003412  C072  F060         	movff	___aodiv@quotient,?___aodiv
  8209  003416  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  8210  00341A  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  8211  00341E  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  8212  003422  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  8213  003426  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  8214  00342A  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  8215  00342E  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  8216  003432                     
  8217                           ; BSR set to: 0
  8218  003432  0012               	return		;funcret
  8219  003434                     __end_of___aodiv:
  8220                           	opt callstack 0
  8221                           
  8222 ;; *************** function _LCD_String_xy *****************
  8223 ;; Defined at:
  8224 ;;		line 52 in file "LCD_16x2.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  row             1    wreg     unsigned char 
  8227 ;;  pos             1    9[BANK0 ] unsigned char 
  8228 ;;  msg             2   10[BANK0 ] PTR const unsigned char 
  8229 ;;		 -> STR_12(2), STR_11(12), STR_10(2), STR_9(12), 
  8230 ;;		 -> STR_6(2), STR_5(12), STR_4(2), STR_3(12), 
  8231 ;;		 -> TempInternaIdeal(10), TempExteAtivacao(10), TempExterna(10), TempInterna(10), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  row             1   12[BANK0 ] unsigned char 
  8234 ;;  location        1   13[BANK0 ] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8244 ;;      Params:         0       3       0       0       0       0       0       0       0
  8245 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8247 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8248 ;;Total ram usage:        5 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    7
  8251 ;; This function calls:
  8252 ;;		_LCD_Command
  8253 ;;		_LCD_String
  8254 ;; This function is called by:
  8255 ;;		_escreveLCD
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           	psect	text29
  8260  00484E                     __ptext29:
  8261                           	opt callstack 0
  8262  00484E                     _LCD_String_xy:
  8263                           	opt callstack 22
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;incstack = 0
  8267                           ;LCD_String_xy@row stored from wreg
  8268  00484E  0100               	movlb	0	; () banked
  8269  004850  6F6C               	movwf	LCD_String_xy@row& (0+255),b
  8270  004852                     
  8271                           ;LCD_16x2.c: 55:     if(row<=1)
  8272  004852  0E02               	movlw	2
  8273  004854  0100               	movlb	0	; () banked
  8274  004856  616C               	cpfslt	LCD_String_xy@row& (0+255),b
  8275  004858  EF30  F024         	goto	u9401
  8276  00485C  EF32  F024         	goto	u9400
  8277  004860                     u9401:
  8278  004860  EF3B  F024         	goto	l6625
  8279  004864                     u9400:
  8280  004864                     
  8281                           ; BSR set to: 0
  8282                           ;LCD_16x2.c: 56:     {;LCD_16x2.c: 57:         location=(0x80) | ((pos) & 0x0f);
  8283  004864  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  8284  004866  0B0F               	andlw	15
  8285  004868  0980               	iorlw	128
  8286  00486A  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  8287  00486C                     
  8288                           ; BSR set to: 0
  8289                           ;LCD_16x2.c: 58:         LCD_Command(location);
  8290  00486C  516D               	movf	LCD_String_xy@location& (0+255),w,b
  8291  00486E  EC9D  F025         	call	_LCD_Command
  8292                           
  8293                           ;LCD_16x2.c: 59:     }
  8294  004872  EF42  F024         	goto	l6629
  8295  004876                     l6625:
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;LCD_16x2.c: 61:     {;LCD_16x2.c: 62:         location=(0xC0) | ((pos) & 0x0f);
  8299  004876  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  8300  004878  0B0F               	andlw	15
  8301  00487A  09C0               	iorlw	192
  8302  00487C  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  8303  00487E                     
  8304                           ; BSR set to: 0
  8305                           ;LCD_16x2.c: 63:         LCD_Command(location);
  8306  00487E  516D               	movf	LCD_String_xy@location& (0+255),w,b
  8307  004880  EC9D  F025         	call	_LCD_Command
  8308  004884                     l6629:
  8309                           
  8310                           ;LCD_16x2.c: 67:     LCD_String(msg);
  8311  004884  C06A  F067         	movff	LCD_String_xy@msg,LCD_String@msg
  8312  004888  C06B  F068         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  8313  00488C  EC50  F022         	call	_LCD_String	;wreg free
  8314  004890  0012               	return		;funcret
  8315  004892                     __end_of_LCD_String_xy:
  8316                           	opt callstack 0
  8317                           
  8318 ;; *************** function _LCD_String *****************
  8319 ;; Defined at:
  8320 ;;		line 42 in file "LCD_16x2.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  8323 ;;		 -> STR_12(2), STR_11(12), STR_10(2), STR_9(12), 
  8324 ;;		 -> STR_6(2), STR_5(12), STR_4(2), STR_3(12), 
  8325 ;;		 -> TempInternaIdeal(10), TempExteAtivacao(10), TempExterna(10), TempInterna(10), 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8337 ;;      Params:         0       2       0       0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8340 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8341 ;;Total ram usage:        2 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    6
  8344 ;; This function calls:
  8345 ;;		_LCD_Char
  8346 ;; This function is called by:
  8347 ;;		_LCD_String_xy
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text30
  8352  0044A0                     __ptext30:
  8353                           	opt callstack 0
  8354  0044A0                     _LCD_String:
  8355                           	opt callstack 22
  8356  0044A0                     
  8357                           ;LCD_16x2.c: 42: void LCD_String(const char *msg);LCD_16x2.c: 43: {;LCD_16x2.c: 44:  whi
      +                          le((*msg)!=0)
  8358  0044A0  EF67  F022         	goto	l6605
  8359  0044A4                     l6601:
  8360                           
  8361                           ;LCD_16x2.c: 45:  {;LCD_16x2.c: 46:    LCD_Char(*msg);
  8362  0044A4  C067  FFF6         	movff	LCD_String@msg,tblptrl
  8363  0044A8  C068  FFF7         	movff	LCD_String@msg+1,tblptrh
  8364  0044AC  6AF8               	clrf	tblptru,c
  8365  0044AE  0E07               	movlw	(high __ramtop+-1)
  8366  0044B0  64F7               	cpfsgt	tblptrh,c
  8367  0044B2  D003               	bra	u9367
  8368  0044B4  0008               	tblrd		*
  8369  0044B6  50F5               	movf	tablat,w,c
  8370  0044B8  D005               	bra	u9360
  8371  0044BA                     u9367:
  8372  0044BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8373  0044BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8374  0044C2  50E7               	movf	indf1,w,c
  8375  0044C4                     u9360:
  8376  0044C4  EC8E  F025         	call	_LCD_Char
  8377  0044C8                     
  8378                           ;LCD_16x2.c: 47:    msg++;
  8379  0044C8  0100               	movlb	0	; () banked
  8380  0044CA  4B67               	infsnz	LCD_String@msg& (0+255),f,b
  8381  0044CC  2B68               	incf	(LCD_String@msg+1)& (0+255),f,b
  8382  0044CE                     l6605:
  8383                           
  8384                           ;LCD_16x2.c: 44:  while((*msg)!=0)
  8385  0044CE  C067  FFF6         	movff	LCD_String@msg,tblptrl
  8386  0044D2  C068  FFF7         	movff	LCD_String@msg+1,tblptrh
  8387  0044D6  6AF8               	clrf	tblptru,c
  8388  0044D8  0E07               	movlw	(high __ramtop+-1)
  8389  0044DA  64F7               	cpfsgt	tblptrh,c
  8390  0044DC  D003               	bra	u9377
  8391  0044DE  0008               	tblrd		*
  8392  0044E0  50F5               	movf	tablat,w,c
  8393  0044E2  D005               	bra	u9370
  8394  0044E4                     u9377:
  8395  0044E4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8396  0044E8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8397  0044EC  50E7               	movf	indf1,w,c
  8398  0044EE                     u9370:
  8399  0044EE  0900               	iorlw	0
  8400  0044F0  A4D8               	btfss	status,2,c
  8401  0044F2  EF7D  F022         	goto	u9381
  8402  0044F6  EF7F  F022         	goto	u9380
  8403  0044FA                     u9381:
  8404  0044FA  EF52  F022         	goto	l6601
  8405  0044FE                     u9380:
  8406  0044FE  0012               	return		;funcret
  8407  004500                     __end_of_LCD_String:
  8408                           	opt callstack 0
  8409                           
  8410 ;; *************** function _LCD_Char *****************
  8411 ;; Defined at:
  8412 ;;		line 32 in file "LCD_16x2.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  dat             1    wreg     unsigned char 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  dat             1    6[BANK0 ] unsigned char 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2, status,0, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0
  8427 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8429 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8430 ;;Total ram usage:        1 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    5
  8433 ;; This function calls:
  8434 ;;		_MSdelay
  8435 ;; This function is called by:
  8436 ;;		_LCD_String
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text31
  8441  004B1C                     __ptext31:
  8442                           	opt callstack 0
  8443  004B1C                     _LCD_Char:
  8444                           	opt callstack 22
  8445                           
  8446                           ;incstack = 0
  8447                           ;LCD_Char@dat stored from wreg
  8448  004B1C  0100               	movlb	0	; () banked
  8449  004B1E  6F66               	movwf	LCD_Char@dat& (0+255),b
  8450  004B20                     
  8451                           ;LCD_16x2.c: 32: void LCD_Char(char dat);LCD_16x2.c: 33: {;LCD_16x2.c: 34:  LATB= dat;
  8452  004B20  C066  FF8A         	movff	LCD_Char@dat,3978	;volatile
  8453  004B24                     
  8454                           ;LCD_16x2.c: 35:  LATD0 = 1;
  8455  004B24  808C               	bsf	3980,0,c	;volatile
  8456  004B26                     
  8457                           ;LCD_16x2.c: 36:  LATD1=1;
  8458  004B26  828C               	bsf	3980,1,c	;volatile
  8459  004B28                     
  8460                           ;LCD_16x2.c: 37:  MSdelay(1);
  8461  004B28  0E00               	movlw	0
  8462  004B2A  0100               	movlb	0	; () banked
  8463  004B2C  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  8464  004B2E  0E01               	movlw	1
  8465  004B30  6F60               	movwf	MSdelay@val& (0+255),b
  8466  004B32  ECB9  F023         	call	_MSdelay	;wreg free
  8467  004B36                     
  8468                           ;LCD_16x2.c: 38:  LATD1=0;
  8469  004B36  928C               	bcf	3980,1,c	;volatile
  8470  004B38  0012               	return		;funcret
  8471  004B3A                     __end_of_LCD_Char:
  8472                           	opt callstack 0
  8473                           
  8474 ;; *************** function _LCD_Clear *****************
  8475 ;; Defined at:
  8476 ;;		line 17 in file "LCD_16x2.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;		None
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg, status,2, status,0, cstack
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8494 ;;Total ram usage:        0 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; Hardware stack levels required when called:    6
  8497 ;; This function calls:
  8498 ;;		_LCD_Command
  8499 ;;		_MSdelay
  8500 ;; This function is called by:
  8501 ;;		_escreveLCD
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text32
  8506  004B58                     __ptext32:
  8507                           	opt callstack 0
  8508  004B58                     _LCD_Clear:
  8509                           	opt callstack 23
  8510  004B58                     
  8511                           ;LCD_16x2.c: 19:      LCD_Command(0x01);
  8512  004B58  0E01               	movlw	1
  8513  004B5A  EC9D  F025         	call	_LCD_Command
  8514                           
  8515                           ;LCD_16x2.c: 20:         MSdelay(2);
  8516  004B5E  0E00               	movlw	0
  8517  004B60  0100               	movlb	0	; () banked
  8518  004B62  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  8519  004B64  0E02               	movlw	2
  8520  004B66  6F60               	movwf	MSdelay@val& (0+255),b
  8521  004B68  ECB9  F023         	call	_MSdelay	;wreg free
  8522  004B6C  0012               	return		;funcret
  8523  004B6E                     __end_of_LCD_Clear:
  8524                           	opt callstack 0
  8525                           
  8526 ;; *************** function _compTemp *****************
  8527 ;; Defined at:
  8528 ;;		line 165 in file "Proj_Principal.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;		None
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0
  8543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8546 ;;Total ram usage:        0 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    5
  8549 ;; This function calls:
  8550 ;;		___fladd
  8551 ;;		___flge
  8552 ;;		___xxtofl
  8553 ;; This function is called by:
  8554 ;;		_main
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text33
  8559  0036C4                     __ptext33:
  8560                           	opt callstack 0
  8561  0036C4                     _compTemp:
  8562                           	opt callstack 25
  8563  0036C4                     
  8564                           ;Proj_Principal.c: 166:     if (TempInternaAtual > (TempIdealInt + 0.5) && liberado) {
  8565  0036C4  0E00               	movlw	0
  8566  0036C6  0100               	movlb	0	; () banked
  8567  0036C8  6F93               	movwf	___fladd@a& (0+255),b
  8568  0036CA  0E00               	movlw	0
  8569  0036CC  6F94               	movwf	(___fladd@a+1)& (0+255),b
  8570  0036CE  0E00               	movlw	0
  8571  0036D0  6F95               	movwf	(___fladd@a+2)& (0+255),b
  8572  0036D2  0E3F               	movlw	63
  8573  0036D4  6F96               	movwf	(___fladd@a+3)& (0+255),b
  8574  0036D6  C1A6  F068         	movff	_TempIdealInt,___xxtofl@val
  8575  0036DA  C1A7  F069         	movff	_TempIdealInt+1,___xxtofl@val+1
  8576  0036DE  0E00               	movlw	0
  8577  0036E0  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8578  0036E2  0EFF               	movlw	-1
  8579  0036E4  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  8580  0036E6  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  8581  0036E8  0E01               	movlw	1
  8582  0036EA  EC79  F018         	call	___xxtofl
  8583  0036EE  C068  F08F         	movff	?___xxtofl,___fladd@b
  8584  0036F2  C069  F090         	movff	?___xxtofl+1,___fladd@b+1
  8585  0036F6  C06A  F091         	movff	?___xxtofl+2,___fladd@b+2
  8586  0036FA  C06B  F092         	movff	?___xxtofl+3,___fladd@b+3
  8587  0036FE  ECAD  F00C         	call	___fladd	;wreg free
  8588  003702  C08F  F09F         	movff	?___fladd,___flge@ff1
  8589  003706  C090  F0A0         	movff	?___fladd+1,___flge@ff1+1
  8590  00370A  C091  F0A1         	movff	?___fladd+2,___flge@ff1+2
  8591  00370E  C092  F0A2         	movff	?___fladd+3,___flge@ff1+3
  8592  003712  C104  F0A3         	movff	_TempInternaAtual,___flge@ff2
  8593  003716  C105  F0A4         	movff	_TempInternaAtual+1,___flge@ff2+1
  8594  00371A  C106  F0A5         	movff	_TempInternaAtual+2,___flge@ff2+2
  8595  00371E  C107  F0A6         	movff	_TempInternaAtual+3,___flge@ff2+3
  8596  003722  EC76  F01C         	call	___flge	;wreg free
  8597  003726  0100               	movlb	0	; () banked
  8598  003728  B0D8               	btfsc	status,0,c
  8599  00372A  EF99  F01B         	goto	u9671
  8600  00372E  EF9B  F01B         	goto	u9670
  8601  003732                     u9671:
  8602  003732  EFAB  F01B         	goto	l6797
  8603  003736                     u9670:
  8604  003736                     
  8605                           ; BSR set to: 0
  8606  003736  5035               	movf	_liberado^0,w,c
  8607  003738  1036               	iorwf	(_liberado+1)^0,w,c
  8608  00373A  B4D8               	btfsc	status,2,c
  8609  00373C  EFA2  F01B         	goto	u9681
  8610  003740  EFA4  F01B         	goto	u9680
  8611  003744                     u9681:
  8612  003744  EFAB  F01B         	goto	l6797
  8613  003748                     u9680:
  8614  003748                     
  8615                           ; BSR set to: 0
  8616                           ;Proj_Principal.c: 167:         ligado = 1;
  8617  003748  0E00               	movlw	0
  8618  00374A  6E38               	movwf	(_ligado+1)^0,c
  8619  00374C  0E01               	movlw	1
  8620  00374E  6E37               	movwf	_ligado^0,c
  8621  003750                     
  8622                           ; BSR set to: 0
  8623                           ;Proj_Principal.c: 168:         PORTAbits.RA2 = ligado;
  8624  003750  8480               	bsf	128,2,c	;volatile
  8625                           
  8626                           ;Proj_Principal.c: 169:     } else if (TempInternaAtual < (TempIdealInt - 0.5) || !liber
      +                          ado) {
  8627  003752  EFF1  F01B         	goto	l212
  8628  003756                     l6797:
  8629                           
  8630                           ; BSR set to: 0
  8631  003756  C104  F09F         	movff	_TempInternaAtual,___flge@ff1
  8632  00375A  C105  F0A0         	movff	_TempInternaAtual+1,___flge@ff1+1
  8633  00375E  C106  F0A1         	movff	_TempInternaAtual+2,___flge@ff1+2
  8634  003762  C107  F0A2         	movff	_TempInternaAtual+3,___flge@ff1+3
  8635  003766  0E00               	movlw	0
  8636  003768  6F93               	movwf	___fladd@a& (0+255),b
  8637  00376A  0E00               	movlw	0
  8638  00376C  6F94               	movwf	(___fladd@a+1)& (0+255),b
  8639  00376E  0E00               	movlw	0
  8640  003770  6F95               	movwf	(___fladd@a+2)& (0+255),b
  8641  003772  0EBF               	movlw	191
  8642  003774  6F96               	movwf	(___fladd@a+3)& (0+255),b
  8643  003776  C1A6  F068         	movff	_TempIdealInt,___xxtofl@val
  8644  00377A  C1A7  F069         	movff	_TempIdealInt+1,___xxtofl@val+1
  8645  00377E  0E00               	movlw	0
  8646  003780  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8647  003782  0EFF               	movlw	-1
  8648  003784  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  8649  003786  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  8650  003788  0E01               	movlw	1
  8651  00378A  EC79  F018         	call	___xxtofl
  8652  00378E  C068  F08F         	movff	?___xxtofl,___fladd@b
  8653  003792  C069  F090         	movff	?___xxtofl+1,___fladd@b+1
  8654  003796  C06A  F091         	movff	?___xxtofl+2,___fladd@b+2
  8655  00379A  C06B  F092         	movff	?___xxtofl+3,___fladd@b+3
  8656  00379E  ECAD  F00C         	call	___fladd	;wreg free
  8657  0037A2  C08F  F0A3         	movff	?___fladd,___flge@ff2
  8658  0037A6  C090  F0A4         	movff	?___fladd+1,___flge@ff2+1
  8659  0037AA  C091  F0A5         	movff	?___fladd+2,___flge@ff2+2
  8660  0037AE  C092  F0A6         	movff	?___fladd+3,___flge@ff2+3
  8661  0037B2  EC76  F01C         	call	___flge	;wreg free
  8662  0037B6  0100               	movlb	0	; () banked
  8663  0037B8  A0D8               	btfss	status,0,c
  8664  0037BA  EFE1  F01B         	goto	u9691
  8665  0037BE  EFE3  F01B         	goto	u9690
  8666  0037C2                     u9691:
  8667  0037C2  EFEC  F01B         	goto	l6801
  8668  0037C6                     u9690:
  8669  0037C6                     
  8670                           ; BSR set to: 0
  8671  0037C6  5035               	movf	_liberado^0,w,c
  8672  0037C8  1036               	iorwf	(_liberado+1)^0,w,c
  8673  0037CA  A4D8               	btfss	status,2,c
  8674  0037CC  EFEA  F01B         	goto	u9701
  8675  0037D0  EFEC  F01B         	goto	u9700
  8676  0037D4                     u9701:
  8677  0037D4  EFF1  F01B         	goto	l212
  8678  0037D8                     u9700:
  8679  0037D8                     l6801:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;Proj_Principal.c: 170:         ligado = 0;
  8683  0037D8  0E00               	movlw	0
  8684  0037DA  6E38               	movwf	(_ligado+1)^0,c
  8685  0037DC  0E00               	movlw	0
  8686  0037DE  6E37               	movwf	_ligado^0,c
  8687  0037E0                     
  8688                           ; BSR set to: 0
  8689                           ;Proj_Principal.c: 171:         PORTAbits.RA2 = ligado;
  8690  0037E0  9480               	bcf	128,2,c	;volatile
  8691  0037E2                     l212:
  8692                           
  8693                           ; BSR set to: 0
  8694  0037E2  0012               	return		;funcret
  8695  0037E4                     __end_of_compTemp:
  8696                           	opt callstack 0
  8697                           
  8698 ;; *************** function _carregaTempIdeal *****************
  8699 ;; Defined at:
  8700 ;;		line 196 in file "Proj_Principal.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  i               2   27[BANK0 ] int 
  8705 ;;  ideal           3   24[BANK0 ] unsigned char [3]
  8706 ;;  adress          2   22[BANK0 ] int 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      void 
  8709 ;; Registers used:
  8710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0
  8717 ;;      Locals:         0       7       0       0       0       0       0       0       0
  8718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8719 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8720 ;;Total ram usage:        7 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    6
  8723 ;; This function calls:
  8724 ;;		_EEPROM_Read
  8725 ;;		_atoi
  8726 ;; This function is called by:
  8727 ;;		_main
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text34
  8732  004370                     __ptext34:
  8733                           	opt callstack 0
  8734  004370                     _carregaTempIdeal:
  8735                           	opt callstack 24
  8736  004370                     
  8737                           ;Proj_Principal.c: 197:     char ideal[3];;Proj_Principal.c: 198:     int adress = 6;
  8738  004370  0E00               	movlw	0
  8739  004372  0100               	movlb	0	; () banked
  8740  004374  6F77               	movwf	(carregaTempIdeal@adress+1)& (0+255),b
  8741  004376  0E06               	movlw	6
  8742  004378  6F76               	movwf	carregaTempIdeal@adress& (0+255),b
  8743                           
  8744                           ;Proj_Principal.c: 199:     for (int i = 0; i < 2; i++) {
  8745  00437A  0E00               	movlw	0
  8746  00437C  6F7C               	movwf	(carregaTempIdeal@i+1)& (0+255),b
  8747  00437E  0E00               	movlw	0
  8748  004380  6F7B               	movwf	carregaTempIdeal@i& (0+255),b
  8749  004382                     l6743:
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;Proj_Principal.c: 200:         ideal[i] = EEPROM_Read(adress);
  8753  004382  0E78               	movlw	low carregaTempIdeal@ideal
  8754  004384  257B               	addwf	carregaTempIdeal@i& (0+255),w,b
  8755  004386  6ED9               	movwf	fsr2l,c
  8756  004388  0E00               	movlw	high carregaTempIdeal@ideal
  8757  00438A  217C               	addwfc	(carregaTempIdeal@i+1)& (0+255),w,b
  8758  00438C  6EDA               	movwf	fsr2h,c
  8759  00438E  C076  F060         	movff	carregaTempIdeal@adress,EEPROM_Read@address
  8760  004392  C077  F061         	movff	carregaTempIdeal@adress+1,EEPROM_Read@address+1
  8761  004396  ECCC  F025         	call	_EEPROM_Read	;wreg free
  8762  00439A  6EDF               	movwf	indf2,c
  8763  00439C                     
  8764                           ;Proj_Principal.c: 201:         adress++;
  8765  00439C  0100               	movlb	0	; () banked
  8766  00439E  4B76               	infsnz	carregaTempIdeal@adress& (0+255),f,b
  8767  0043A0  2B77               	incf	(carregaTempIdeal@adress+1)& (0+255),f,b
  8768  0043A2                     
  8769                           ; BSR set to: 0
  8770                           ;Proj_Principal.c: 202:     }
  8771  0043A2  4B7B               	infsnz	carregaTempIdeal@i& (0+255),f,b
  8772  0043A4  2B7C               	incf	(carregaTempIdeal@i+1)& (0+255),f,b
  8773  0043A6                     
  8774                           ; BSR set to: 0
  8775  0043A6  BF7C               	btfsc	(carregaTempIdeal@i+1)& (0+255),7,b
  8776  0043A8  EFDF  F021         	goto	u9591
  8777  0043AC  517C               	movf	(carregaTempIdeal@i+1)& (0+255),w,b
  8778  0043AE  E109               	bnz	u9590
  8779  0043B0  0E02               	movlw	2
  8780  0043B2  5D7B               	subwf	carregaTempIdeal@i& (0+255),w,b
  8781  0043B4  A0D8               	btfss	status,0,c
  8782  0043B6  EFDF  F021         	goto	u9591
  8783  0043BA  EFE1  F021         	goto	u9590
  8784  0043BE                     u9591:
  8785  0043BE  EFC1  F021         	goto	l6743
  8786  0043C2                     u9590:
  8787  0043C2                     
  8788                           ; BSR set to: 0
  8789                           ;Proj_Principal.c: 203:     ideal[2] = '\0';
  8790  0043C2  0E00               	movlw	0
  8791  0043C4  6F7A               	movwf	(carregaTempIdeal@ideal+2)& (0+255),b
  8792  0043C6                     
  8793                           ; BSR set to: 0
  8794                           ;Proj_Principal.c: 204:     TempIdealInt = atoi(ideal);
  8795  0043C6  0E78               	movlw	low carregaTempIdeal@ideal
  8796  0043C8  6F67               	movwf	atoi@s& (0+255),b
  8797  0043CA  0E00               	movlw	high carregaTempIdeal@ideal
  8798  0043CC  6F68               	movwf	(atoi@s+1)& (0+255),b
  8799  0043CE  EC7A  F016         	call	_atoi	;wreg free
  8800  0043D2  C067  F1A6         	movff	?_atoi,_TempIdealInt
  8801  0043D6  C068  F1A7         	movff	?_atoi+1,_TempIdealInt+1
  8802  0043DA  0012               	return		;funcret
  8803  0043DC                     __end_of_carregaTempIdeal:
  8804                           	opt callstack 0
  8805                           
  8806 ;; *************** function _carregaTempExterna *****************
  8807 ;; Defined at:
  8808 ;;		line 187 in file "Proj_Principal.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  i               2   25[BANK0 ] int 
  8813 ;;  externa         3   22[BANK0 ] unsigned char [3]
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      void 
  8816 ;; Registers used:
  8817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : 0/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8823 ;;      Params:         0       0       0       0       0       0       0       0       0
  8824 ;;      Locals:         0       5       0       0       0       0       0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8826 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8827 ;;Total ram usage:        5 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:    6
  8830 ;; This function calls:
  8831 ;;		_EEPROM_Read
  8832 ;;		_atoi
  8833 ;; This function is called by:
  8834 ;;		_main
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text35
  8839  004500                     __ptext35:
  8840                           	opt callstack 0
  8841  004500                     _carregaTempExterna:
  8842                           	opt callstack 24
  8843  004500                     
  8844                           ;Proj_Principal.c: 188:     char externa[3];;Proj_Principal.c: 189:     for (int i = 0; 
      +                          i < 2; i++) {
  8845  004500  0E00               	movlw	0
  8846  004502  0100               	movlb	0	; () banked
  8847  004504  6F7A               	movwf	(carregaTempExterna@i+1)& (0+255),b
  8848  004506  0E00               	movlw	0
  8849  004508  6F79               	movwf	carregaTempExterna@i& (0+255),b
  8850  00450A                     l6727:
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;Proj_Principal.c: 190:         externa[i] = EEPROM_Read(i);
  8854  00450A  0E76               	movlw	low carregaTempExterna@externa
  8855  00450C  2579               	addwf	carregaTempExterna@i& (0+255),w,b
  8856  00450E  6ED9               	movwf	fsr2l,c
  8857  004510  0E00               	movlw	high carregaTempExterna@externa
  8858  004512  217A               	addwfc	(carregaTempExterna@i+1)& (0+255),w,b
  8859  004514  6EDA               	movwf	fsr2h,c
  8860  004516  C079  F060         	movff	carregaTempExterna@i,EEPROM_Read@address
  8861  00451A  C07A  F061         	movff	carregaTempExterna@i+1,EEPROM_Read@address+1
  8862  00451E  ECCC  F025         	call	_EEPROM_Read	;wreg free
  8863  004522  6EDF               	movwf	indf2,c
  8864  004524                     
  8865                           ;Proj_Principal.c: 191:     }
  8866  004524  0100               	movlb	0	; () banked
  8867  004526  4B79               	infsnz	carregaTempExterna@i& (0+255),f,b
  8868  004528  2B7A               	incf	(carregaTempExterna@i+1)& (0+255),f,b
  8869  00452A                     
  8870                           ; BSR set to: 0
  8871  00452A  BF7A               	btfsc	(carregaTempExterna@i+1)& (0+255),7,b
  8872  00452C  EFA1  F022         	goto	u9581
  8873  004530  517A               	movf	(carregaTempExterna@i+1)& (0+255),w,b
  8874  004532  E109               	bnz	u9580
  8875  004534  0E02               	movlw	2
  8876  004536  5D79               	subwf	carregaTempExterna@i& (0+255),w,b
  8877  004538  A0D8               	btfss	status,0,c
  8878  00453A  EFA1  F022         	goto	u9581
  8879  00453E  EFA3  F022         	goto	u9580
  8880  004542                     u9581:
  8881  004542  EF85  F022         	goto	l6727
  8882  004546                     u9580:
  8883  004546                     
  8884                           ; BSR set to: 0
  8885                           ;Proj_Principal.c: 192:     externa[2] = '\0';
  8886  004546  0E00               	movlw	0
  8887  004548  6F78               	movwf	(carregaTempExterna@externa+2)& (0+255),b
  8888  00454A                     
  8889                           ; BSR set to: 0
  8890                           ;Proj_Principal.c: 193:     TempExtAtiv = atoi(externa);
  8891  00454A  0E76               	movlw	low carregaTempExterna@externa
  8892  00454C  6F67               	movwf	atoi@s& (0+255),b
  8893  00454E  0E00               	movlw	high carregaTempExterna@externa
  8894  004550  6F68               	movwf	(atoi@s+1)& (0+255),b
  8895  004552  EC7A  F016         	call	_atoi	;wreg free
  8896  004556  C067  F1A4         	movff	?_atoi,_TempExtAtiv
  8897  00455A  C068  F1A5         	movff	?_atoi+1,_TempExtAtiv+1
  8898  00455E  0012               	return		;funcret
  8899  004560                     __end_of_carregaTempExterna:
  8900                           	opt callstack 0
  8901                           
  8902 ;; *************** function _atoi *****************
  8903 ;; Defined at:
  8904 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  8907 ;;		 -> carregaTempIdeal@ideal(3), carregaTempExterna@externa(3), STR_8(3), STR_7(3), 
  8908 ;;		 -> STR_2(5), STR_1(6), setatempinterna@valor(3), setatempexterna@valor(3), 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  n               2   20[BANK0 ] int 
  8911 ;;  neg             2   13[BANK0 ] int 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  2    7[BANK0 ] int 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8921 ;;      Params:         0       2       0       0       0       0       0       0       0
  8922 ;;      Locals:         0       9       0       0       0       0       0       0       0
  8923 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8924 ;;      Totals:         0      15       0       0       0       0       0       0       0
  8925 ;;Total ram usage:       15 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    5
  8928 ;; This function calls:
  8929 ;;		___wmul
  8930 ;;		_isdigit
  8931 ;;		_isspace
  8932 ;; This function is called by:
  8933 ;;		_carregaTempExterna
  8934 ;;		_carregaTempIdeal
  8935 ;;		_vfpfcnvrt
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text36
  8940  002CF4                     __ptext36:
  8941                           	opt callstack 0
  8942  002CF4                     _atoi:
  8943                           	opt callstack 21
  8944  002CF4  0E00               	movlw	0
  8945  002CF6  0100               	movlb	0	; () banked
  8946  002CF8  6F75               	movwf	(atoi@n+1)& (0+255),b
  8947  002CFA  0E00               	movlw	0
  8948  002CFC  6F74               	movwf	atoi@n& (0+255),b
  8949  002CFE  0E00               	movlw	0
  8950  002D00  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  8951  002D02  0E00               	movlw	0
  8952  002D04  6F6D               	movwf	atoi@neg& (0+255),b
  8953  002D06  EF87  F016         	goto	l6061
  8954  002D0A                     l6059:
  8955                           
  8956                           ; BSR set to: 0
  8957  002D0A  4B67               	infsnz	atoi@s& (0+255),f,b
  8958  002D0C  2B68               	incf	(atoi@s+1)& (0+255),f,b
  8959  002D0E                     l6061:
  8960                           
  8961                           ; BSR set to: 0
  8962  002D0E  0E01               	movlw	1
  8963  002D10  6F73               	movwf	_atoi$1265& (0+255),b
  8964  002D12                     
  8965                           ; BSR set to: 0
  8966  002D12  C067  FFF6         	movff	atoi@s,tblptrl
  8967  002D16  C068  FFF7         	movff	atoi@s+1,tblptrh
  8968  002D1A  6AF8               	clrf	tblptru,c
  8969  002D1C  0E07               	movlw	(high __ramtop+-1)
  8970  002D1E  64F7               	cpfsgt	tblptrh,c
  8971  002D20  D003               	bra	u8367
  8972  002D22  0008               	tblrd		*
  8973  002D24  50F5               	movf	tablat,w,c
  8974  002D26  D005               	bra	u8360
  8975  002D28                     u8367:
  8976  002D28  CFF6 FFE1          	movff	tblptrl,fsr1l
  8977  002D2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8978  002D30  50E7               	movf	indf1,w,c
  8979  002D32                     u8360:
  8980  002D32  0A20               	xorlw	32
  8981  002D34  B4D8               	btfsc	status,2,c
  8982  002D36  EF9F  F016         	goto	u8371
  8983  002D3A  EFA1  F016         	goto	u8370
  8984  002D3E                     u8371:
  8985  002D3E  EFCA  F016         	goto	l6069
  8986  002D42                     u8370:
  8987  002D42  0EF7               	movlw	247
  8988  002D44  0100               	movlb	0	; () banked
  8989  002D46  6F69               	movwf	??_atoi& (0+255),b
  8990  002D48  0EFF               	movlw	255
  8991  002D4A  6F6A               	movwf	(??_atoi+1)& (0+255),b
  8992  002D4C  C067  FFF6         	movff	atoi@s,tblptrl
  8993  002D50  C068  FFF7         	movff	atoi@s+1,tblptrh
  8994  002D54  6AF8               	clrf	tblptru,c
  8995  002D56  0E07               	movlw	(high __ramtop+-1)
  8996  002D58  64F7               	cpfsgt	tblptrh,c
  8997  002D5A  D003               	bra	u8387
  8998  002D5C  0008               	tblrd		*
  8999  002D5E  50F5               	movf	tablat,w,c
  9000  002D60  D005               	bra	u8380
  9001  002D62                     u8387:
  9002  002D62  CFF6 FFE1          	movff	tblptrl,fsr1l
  9003  002D66  CFF7 FFE2          	movff	tblptrh,fsr1h
  9004  002D6A  50E7               	movf	indf1,w,c
  9005  002D6C                     u8380:
  9006  002D6C  0100               	movlb	0	; () banked
  9007  002D6E  6F6B               	movwf	(??_atoi+2)& (0+255),b
  9008  002D70  6B6C               	clrf	(??_atoi+3)& (0+255),b
  9009  002D72  5169               	movf	??_atoi& (0+255),w,b
  9010  002D74  276B               	addwf	(??_atoi+2)& (0+255),f,b
  9011  002D76  516A               	movf	(??_atoi+1)& (0+255),w,b
  9012  002D78  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  9013  002D7A  516C               	movf	(??_atoi+3)& (0+255),w,b
  9014  002D7C  E109               	bnz	u8390
  9015  002D7E  0E05               	movlw	5
  9016  002D80  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  9017  002D82  A0D8               	btfss	status,0,c
  9018  002D84  EFC6  F016         	goto	u8391
  9019  002D88  EFC8  F016         	goto	u8390
  9020  002D8C                     u8391:
  9021  002D8C  EFCA  F016         	goto	l6069
  9022  002D90                     u8390:
  9023  002D90                     
  9024                           ; BSR set to: 0
  9025  002D90  0E00               	movlw	0
  9026  002D92  6F73               	movwf	_atoi$1265& (0+255),b
  9027  002D94                     l6069:
  9028  002D94  C073  F06F         	movff	_atoi$1265,_atoi$1264
  9029  002D98  0100               	movlb	0	; () banked
  9030  002D9A  6B70               	clrf	(_atoi$1264+1)& (0+255),b
  9031  002D9C                     
  9032                           ; BSR set to: 0
  9033  002D9C  516F               	movf	_atoi$1264& (0+255),w,b
  9034  002D9E  1170               	iorwf	(_atoi$1264+1)& (0+255),w,b
  9035  002DA0  A4D8               	btfss	status,2,c
  9036  002DA2  EFD5  F016         	goto	u8401
  9037  002DA6  EFD7  F016         	goto	u8400
  9038  002DAA                     u8401:
  9039  002DAA  EF85  F016         	goto	l6059
  9040  002DAE                     u8400:
  9041  002DAE  EFE1  F016         	goto	l6079
  9042  002DB2                     l6075:
  9043                           
  9044                           ; BSR set to: 0
  9045  002DB2  0E00               	movlw	0
  9046  002DB4  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  9047  002DB6  0E01               	movlw	1
  9048  002DB8  6F6D               	movwf	atoi@neg& (0+255),b
  9049  002DBA                     l6077:
  9050                           
  9051                           ; BSR set to: 0
  9052  002DBA  4B67               	infsnz	atoi@s& (0+255),f,b
  9053  002DBC  2B68               	incf	(atoi@s+1)& (0+255),f,b
  9054  002DBE  EF2E  F017         	goto	l6085
  9055  002DC2                     l6079:
  9056                           
  9057                           ; BSR set to: 0
  9058  002DC2  C067  FFF6         	movff	atoi@s,tblptrl
  9059  002DC6  C068  FFF7         	movff	atoi@s+1,tblptrh
  9060  002DCA  6AF8               	clrf	tblptru,c
  9061  002DCC  0E07               	movlw	(high __ramtop+-1)
  9062  002DCE  64F7               	cpfsgt	tblptrh,c
  9063  002DD0  D003               	bra	u8417
  9064  002DD2  0008               	tblrd		*
  9065  002DD4  50F5               	movf	tablat,w,c
  9066  002DD6  D005               	bra	u8410
  9067  002DD8                     u8417:
  9068  002DD8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9069  002DDC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9070  002DE0  50E7               	movf	indf1,w,c
  9071  002DE2                     u8410:
  9072  002DE2  0100               	movlb	0	; () banked
  9073  002DE4  6F69               	movwf	??_atoi& (0+255),b
  9074  002DE6  6B6A               	clrf	(??_atoi+1)& (0+255),b
  9075                           
  9076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9077                           ; Switch size 1, requested type "simple"
  9078                           ; Number of cases is 1, Range of values is 0 to 0
  9079                           ; switch strategies available:
  9080                           ; Name         Instructions Cycles
  9081                           ; simple_byte            4     3 (average)
  9082                           ;	Chosen strategy is simple_byte
  9083  002DE8  516A               	movf	(??_atoi+1)& (0+255),w,b
  9084  002DEA  0A00               	xorlw	0	; case 0
  9085  002DEC  B4D8               	btfsc	status,2,c
  9086  002DEE  EFFB  F016         	goto	l6935
  9087  002DF2  EF2E  F017         	goto	l6085
  9088  002DF6                     l6935:
  9089                           
  9090                           ; BSR set to: 0
  9091                           ; Switch size 1, requested type "simple"
  9092                           ; Number of cases is 2, Range of values is 43 to 45
  9093                           ; switch strategies available:
  9094                           ; Name         Instructions Cycles
  9095                           ; simple_byte            7     4 (average)
  9096                           ;	Chosen strategy is simple_byte
  9097  002DF6  5169               	movf	??_atoi& (0+255),w,b
  9098  002DF8  0A2B               	xorlw	43	; case 43
  9099  002DFA  B4D8               	btfsc	status,2,c
  9100  002DFC  EFDD  F016         	goto	l6077
  9101  002E00  0A06               	xorlw	6	; case 45
  9102  002E02  B4D8               	btfsc	status,2,c
  9103  002E04  EFD9  F016         	goto	l6075
  9104  002E08  EF2E  F017         	goto	l6085
  9105  002E0C                     l6081:
  9106                           
  9107                           ; BSR set to: 0
  9108  002E0C  C074  F060         	movff	atoi@n,___wmul@multiplier
  9109  002E10  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  9110  002E14  0E00               	movlw	0
  9111  002E16  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9112  002E18  0E0A               	movlw	10
  9113  002E1A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9114  002E1C  EC67  F025         	call	___wmul	;wreg free
  9115  002E20  C067  FFF6         	movff	atoi@s,tblptrl
  9116  002E24  C068  FFF7         	movff	atoi@s+1,tblptrh
  9117  002E28  6AF8               	clrf	tblptru,c
  9118  002E2A  0E07               	movlw	(high __ramtop+-1)
  9119  002E2C  64F7               	cpfsgt	tblptrh,c
  9120  002E2E  D003               	bra	u8427
  9121  002E30  0008               	tblrd		*
  9122  002E32  50F5               	movf	tablat,w,c
  9123  002E34  D005               	bra	u8420
  9124  002E36                     u8427:
  9125  002E36  CFF6 FFE1          	movff	tblptrl,fsr1l
  9126  002E3A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9127  002E3E  50E7               	movf	indf1,w,c
  9128  002E40                     u8420:
  9129  002E40  0100               	movlb	0	; () banked
  9130  002E42  6F69               	movwf	??_atoi& (0+255),b
  9131  002E44  5169               	movf	??_atoi& (0+255),w,b
  9132  002E46  5F60               	subwf	?___wmul& (0+255),f,b
  9133  002E48  0E00               	movlw	0
  9134  002E4A  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  9135  002E4C  0E30               	movlw	48
  9136  002E4E  2560               	addwf	?___wmul& (0+255),w,b
  9137  002E50  6F74               	movwf	atoi@n& (0+255),b
  9138  002E52  0E00               	movlw	0
  9139  002E54  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9140  002E56  6F75               	movwf	(atoi@n+1)& (0+255),b
  9141  002E58  EFDD  F016         	goto	l6077
  9142  002E5C                     l6085:
  9143                           
  9144                           ; BSR set to: 0
  9145  002E5C  0ED0               	movlw	208
  9146  002E5E  6F69               	movwf	??_atoi& (0+255),b
  9147  002E60  0EFF               	movlw	255
  9148  002E62  6F6A               	movwf	(??_atoi+1)& (0+255),b
  9149  002E64  C067  FFF6         	movff	atoi@s,tblptrl
  9150  002E68  C068  FFF7         	movff	atoi@s+1,tblptrh
  9151  002E6C  6AF8               	clrf	tblptru,c
  9152  002E6E  0E07               	movlw	(high __ramtop+-1)
  9153  002E70  64F7               	cpfsgt	tblptrh,c
  9154  002E72  D003               	bra	u8437
  9155  002E74  0008               	tblrd		*
  9156  002E76  50F5               	movf	tablat,w,c
  9157  002E78  D005               	bra	u8430
  9158  002E7A                     u8437:
  9159  002E7A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9160  002E7E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9161  002E82  50E7               	movf	indf1,w,c
  9162  002E84                     u8430:
  9163  002E84  0100               	movlb	0	; () banked
  9164  002E86  6F6B               	movwf	(??_atoi+2)& (0+255),b
  9165  002E88  6B6C               	clrf	(??_atoi+3)& (0+255),b
  9166  002E8A  5169               	movf	??_atoi& (0+255),w,b
  9167  002E8C  276B               	addwf	(??_atoi+2)& (0+255),f,b
  9168  002E8E  516A               	movf	(??_atoi+1)& (0+255),w,b
  9169  002E90  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  9170  002E92  516C               	movf	(??_atoi+3)& (0+255),w,b
  9171  002E94  E10A               	bnz	u8440
  9172  002E96  0E0A               	movlw	10
  9173  002E98  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  9174  002E9A  A0D8               	btfss	status,0,c
  9175  002E9C  EF52  F017         	goto	u8441
  9176  002EA0  EF55  F017         	goto	u8440
  9177  002EA4                     u8441:
  9178  002EA4  0E01               	movlw	1
  9179  002EA6  EF56  F017         	goto	u8450
  9180  002EAA                     u8440:
  9181  002EAA  0E00               	movlw	0
  9182  002EAC                     u8450:
  9183  002EAC  6F71               	movwf	_atoi$1266& (0+255),b
  9184  002EAE  6B72               	clrf	(_atoi$1266+1)& (0+255),b
  9185  002EB0                     
  9186                           ; BSR set to: 0
  9187  002EB0  5171               	movf	_atoi$1266& (0+255),w,b
  9188  002EB2  1172               	iorwf	(_atoi$1266+1)& (0+255),w,b
  9189  002EB4  A4D8               	btfss	status,2,c
  9190  002EB6  EF5F  F017         	goto	u8461
  9191  002EBA  EF61  F017         	goto	u8460
  9192  002EBE                     u8461:
  9193  002EBE  EF06  F017         	goto	l6081
  9194  002EC2                     u8460:
  9195  002EC2                     
  9196                           ; BSR set to: 0
  9197  002EC2  516D               	movf	atoi@neg& (0+255),w,b
  9198  002EC4  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  9199  002EC6  A4D8               	btfss	status,2,c
  9200  002EC8  EF68  F017         	goto	u8471
  9201  002ECC  EF6A  F017         	goto	u8470
  9202  002ED0                     u8471:
  9203  002ED0  EF78  F017         	goto	l1233
  9204  002ED4                     u8470:
  9205  002ED4                     
  9206                           ; BSR set to: 0
  9207  002ED4  C074  F069         	movff	atoi@n,??_atoi
  9208  002ED8  C075  F06A         	movff	atoi@n+1,??_atoi+1
  9209  002EDC  1F69               	comf	??_atoi& (0+255),f,b
  9210  002EDE  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  9211  002EE0  4B69               	infsnz	??_atoi& (0+255),f,b
  9212  002EE2  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  9213  002EE4  C069  F067         	movff	??_atoi,?_atoi
  9214  002EE8  C06A  F068         	movff	??_atoi+1,?_atoi+1
  9215  002EEC  EF7C  F017         	goto	l1236
  9216  002EF0                     l1233:
  9217                           
  9218                           ; BSR set to: 0
  9219  002EF0  C074  F067         	movff	atoi@n,?_atoi
  9220  002EF4  C075  F068         	movff	atoi@n+1,?_atoi+1
  9221  002EF8                     l1236:
  9222                           
  9223                           ; BSR set to: 0
  9224  002EF8  0012               	return		;funcret
  9225  002EFA                     __end_of_atoi:
  9226                           	opt callstack 0
  9227                           
  9228 ;; *************** function _isspace *****************
  9229 ;; Defined at:
  9230 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  c               2    0[BANK0 ] int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  2    0[BANK0 ] int 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9244 ;;      Params:         0       2       0       0       0       0       0       0       0
  9245 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9246 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9247 ;;      Totals:         0       7       0       0       0       0       0       0       0
  9248 ;;Total ram usage:        7 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    4
  9251 ;; This function calls:
  9252 ;;		Nothing
  9253 ;; This function is called by:
  9254 ;;		_atoi
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text37
  9259  0046CC                     __ptext37:
  9260                           	opt callstack 0
  9261  0046CC                     _isspace:
  9262                           	opt callstack 21
  9263  0046CC  0E01               	movlw	1
  9264  0046CE  0100               	movlb	0	; () banked
  9265  0046D0  6F66               	movwf	_isspace$1295& (0+255),b
  9266  0046D2                     
  9267                           ; BSR set to: 0
  9268  0046D2  0E20               	movlw	32
  9269  0046D4  1960               	xorwf	isspace@c& (0+255),w,b
  9270  0046D6  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  9271  0046D8  B4D8               	btfsc	status,2,c
  9272  0046DA  EF71  F023         	goto	u8321
  9273  0046DE  EF73  F023         	goto	u8320
  9274  0046E2                     u8321:
  9275  0046E2  EF8C  F023         	goto	l6037
  9276  0046E6                     u8320:
  9277  0046E6                     
  9278                           ; BSR set to: 0
  9279  0046E6  0EF7               	movlw	247
  9280  0046E8  6F62               	movwf	??_isspace& (0+255),b
  9281  0046EA  0EFF               	movlw	255
  9282  0046EC  6F63               	movwf	(??_isspace+1)& (0+255),b
  9283  0046EE  C060  F064         	movff	isspace@c,??_isspace+2
  9284  0046F2  C061  F065         	movff	isspace@c+1,??_isspace+3
  9285  0046F6  5162               	movf	??_isspace& (0+255),w,b
  9286  0046F8  2764               	addwf	(??_isspace+2)& (0+255),f,b
  9287  0046FA  5163               	movf	(??_isspace+1)& (0+255),w,b
  9288  0046FC  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  9289  0046FE  5165               	movf	(??_isspace+3)& (0+255),w,b
  9290  004700  E109               	bnz	u8330
  9291  004702  0E05               	movlw	5
  9292  004704  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  9293  004706  A0D8               	btfss	status,0,c
  9294  004708  EF88  F023         	goto	u8331
  9295  00470C  EF8A  F023         	goto	u8330
  9296  004710                     u8331:
  9297  004710  EF8C  F023         	goto	l6037
  9298  004714                     u8330:
  9299  004714                     
  9300                           ; BSR set to: 0
  9301  004714  0E00               	movlw	0
  9302  004716  6F66               	movwf	_isspace$1295& (0+255),b
  9303  004718                     l6037:
  9304                           
  9305                           ; BSR set to: 0
  9306  004718  C066  F060         	movff	_isspace$1295,?_isspace
  9307  00471C  6B61               	clrf	(?_isspace+1)& (0+255),b
  9308  00471E                     
  9309                           ; BSR set to: 0
  9310  00471E  0012               	return		;funcret
  9311  004720                     __end_of_isspace:
  9312                           	opt callstack 0
  9313                           
  9314 ;; *************** function _isdigit *****************
  9315 ;; Defined at:
  9316 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  c               2    0[BANK0 ] int 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  2    0[BANK0 ] int 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9330 ;;      Params:         0       2       0       0       0       0       0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9332 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9333 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9334 ;;Total ram usage:        6 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    4
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_vfpfcnvrt
  9341 ;;		_atoi
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           	psect	text38
  9346  0049FE                     __ptext38:
  9347                           	opt callstack 0
  9348  0049FE                     _isdigit:
  9349                           	opt callstack 22
  9350  0049FE  0ED0               	movlw	208
  9351  004A00  0100               	movlb	0	; () banked
  9352  004A02  6F62               	movwf	??_isdigit& (0+255),b
  9353  004A04  0EFF               	movlw	255
  9354  004A06  6F63               	movwf	(??_isdigit+1)& (0+255),b
  9355  004A08  C060  F064         	movff	isdigit@c,??_isdigit+2
  9356  004A0C  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  9357  004A10  5162               	movf	??_isdigit& (0+255),w,b
  9358  004A12  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  9359  004A14  5163               	movf	(??_isdigit+1)& (0+255),w,b
  9360  004A16  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  9361  004A18  5165               	movf	(??_isdigit+3)& (0+255),w,b
  9362  004A1A  E10A               	bnz	u7470
  9363  004A1C  0E0A               	movlw	10
  9364  004A1E  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  9365  004A20  A0D8               	btfss	status,0,c
  9366  004A22  EF15  F025         	goto	u7471
  9367  004A26  EF18  F025         	goto	u7470
  9368  004A2A                     u7471:
  9369  004A2A  0E01               	movlw	1
  9370  004A2C  EF19  F025         	goto	u7480
  9371  004A30                     u7470:
  9372  004A30  0E00               	movlw	0
  9373  004A32                     u7480:
  9374  004A32  6F60               	movwf	?_isdigit& (0+255),b
  9375  004A34  6B61               	clrf	(?_isdigit+1)& (0+255),b
  9376  004A36                     
  9377                           ; BSR set to: 0
  9378  004A36  0012               	return		;funcret
  9379  004A38                     __end_of_isdigit:
  9380                           	opt callstack 0
  9381                           
  9382 ;; *************** function ___wmul *****************
  9383 ;; Defined at:
  9384 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9387 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  product         2    4[BANK0 ] unsigned int 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  2    0[BANK0 ] unsigned int 
  9392 ;; Registers used:
  9393 ;;		wreg, status,2, status,0, prodl, prodh
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9399 ;;      Params:         0       4       0       0       0       0       0       0       0
  9400 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9402 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9403 ;;Total ram usage:        6 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:    4
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_atoi
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text39
  9414  004ACE                     __ptext39:
  9415                           	opt callstack 0
  9416  004ACE                     ___wmul:
  9417                           	opt callstack 21
  9418  004ACE  0100               	movlb	0	; () banked
  9419  004AD0  5160               	movf	___wmul@multiplier& (0+255),w,b
  9420  004AD2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9421  004AD4  CFF3 F064          	movff	prodl,___wmul@product
  9422  004AD8  CFF4 F065          	movff	prodh,___wmul@product+1
  9423  004ADC  5160               	movf	___wmul@multiplier& (0+255),w,b
  9424  004ADE  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9425  004AE0  50F3               	movf	243,w,c
  9426  004AE2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9427  004AE4  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9428  004AE6  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9429  004AE8  50F3               	movf	243,w,c
  9430  004AEA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  9431  004AEC                     
  9432                           ; BSR set to: 0
  9433  004AEC  C064  F060         	movff	___wmul@product,?___wmul
  9434  004AF0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  9435  004AF4                     
  9436                           ; BSR set to: 0
  9437  004AF4  0012               	return		;funcret
  9438  004AF6                     __end_of___wmul:
  9439                           	opt callstack 0
  9440                           
  9441 ;; *************** function _EEPROM_Read *****************
  9442 ;; Defined at:
  9443 ;;		line 37 in file "EEPROM.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  address         2    0[BANK0 ] int 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      unsigned char 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9457 ;;      Params:         0       2       0       0       0       0       0       0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9460 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9461 ;;Total ram usage:        2 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    4
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_carregaTempExterna
  9468 ;;		_carregaTempIdeal
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text40
  9473  004B98                     __ptext40:
  9474                           	opt callstack 0
  9475  004B98                     _EEPROM_Read:
  9476                           	opt callstack 25
  9477  004B98                     
  9478                           ;EEPROM.c: 37: char EEPROM_Read(int address);EEPROM.c: 38: {;EEPROM.c: 40:     EEADR=add
      +                          ress;
  9479  004B98  C060  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  9480                           
  9481                           ;EEPROM.c: 41:     EECON1bits.WREN=0;
  9482  004B9C  94A6               	bcf	166,2,c	;volsfr
  9483                           
  9484                           ;EEPROM.c: 42:     EECON1bits.EEPGD=0;
  9485  004B9E  9EA6               	bcf	166,7,c	;volsfr
  9486                           
  9487                           ;EEPROM.c: 43:     EECON1bits.RD=1;
  9488  004BA0  80A6               	bsf	166,0,c	;volsfr
  9489  004BA2                     
  9490                           ;EEPROM.c: 44:     return(EEDATA);
  9491  004BA2  50A8               	movf	168,w,c	;volatile
  9492  004BA4  0012               	return		;funcret
  9493  004BA6                     __end_of_EEPROM_Read:
  9494                           	opt callstack 0
  9495                           
  9496 ;; *************** function _USART_Init *****************
  9497 ;; Defined at:
  9498 ;;		line 5 in file "USART.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  baud_rate       2   63[BANK0 ] int 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  temp            4   65[BANK0 ] float 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg, status,2, status,0, cstack
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9512 ;;      Params:         0       2       0       0       0       0       0       0       0
  9513 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9515 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9516 ;;Total ram usage:        6 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    5
  9519 ;; This function calls:
  9520 ;;		___fladd
  9521 ;;		___fldiv
  9522 ;;		___fltol
  9523 ;;		___xxtofl
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text41
  9530  0041E8                     __ptext41:
  9531                           	opt callstack 0
  9532  0041E8                     _USART_Init:
  9533                           	opt callstack 25
  9534  0041E8                     
  9535                           ;USART.c: 6:     float temp;;USART.c: 7:     TRISC6 = 0;
  9536  0041E8  9C94               	bcf	3988,6,c	;volatile
  9537                           
  9538                           ;USART.c: 8:     TRISC7 = 1;
  9539  0041EA  8E94               	bsf	3988,7,c	;volatile
  9540  0041EC                     
  9541                           ;USART.c: 9:     temp = (((float) (8000000/64) / (float) baud_rate) - 1);
  9542  0041EC  C09F  F068         	movff	USART_Init@baud_rate,___xxtofl@val
  9543  0041F0  C0A0  F069         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  9544  0041F4  0100               	movlb	0	; () banked
  9545  0041F6  0E00               	movlw	0
  9546  0041F8  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9547  0041FA  0EFF               	movlw	-1
  9548  0041FC  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  9549  0041FE  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  9550  004200  0E01               	movlw	1
  9551  004202  EC79  F018         	call	___xxtofl
  9552  004206  C068  F07A         	movff	?___xxtofl,___fldiv@a
  9553  00420A  C069  F07B         	movff	?___xxtofl+1,___fldiv@a+1
  9554  00420E  C06A  F07C         	movff	?___xxtofl+2,___fldiv@a+2
  9555  004212  C06B  F07D         	movff	?___xxtofl+3,___fldiv@a+3
  9556  004216  0E00               	movlw	0
  9557  004218  0100               	movlb	0	; () banked
  9558  00421A  6F76               	movwf	___fldiv@b& (0+255),b
  9559  00421C  0E24               	movlw	36
  9560  00421E  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  9561  004220  0EF4               	movlw	244
  9562  004222  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  9563  004224  0E47               	movlw	71
  9564  004226  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  9565  004228  EC24  F011         	call	___fldiv	;wreg free
  9566  00422C  C076  F08F         	movff	?___fldiv,___fladd@b
  9567  004230  C077  F090         	movff	?___fldiv+1,___fladd@b+1
  9568  004234  C078  F091         	movff	?___fldiv+2,___fladd@b+2
  9569  004238  C079  F092         	movff	?___fldiv+3,___fladd@b+3
  9570  00423C  0E00               	movlw	0
  9571  00423E  0100               	movlb	0	; () banked
  9572  004240  6F93               	movwf	___fladd@a& (0+255),b
  9573  004242  0E00               	movlw	0
  9574  004244  6F94               	movwf	(___fladd@a+1)& (0+255),b
  9575  004246  0E80               	movlw	128
  9576  004248  6F95               	movwf	(___fladd@a+2)& (0+255),b
  9577  00424A  0EBF               	movlw	191
  9578  00424C  6F96               	movwf	(___fladd@a+3)& (0+255),b
  9579  00424E  ECAD  F00C         	call	___fladd	;wreg free
  9580  004252  C08F  F0A1         	movff	?___fladd,USART_Init@temp
  9581  004256  C090  F0A2         	movff	?___fladd+1,USART_Init@temp+1
  9582  00425A  C091  F0A3         	movff	?___fladd+2,USART_Init@temp+2
  9583  00425E  C092  F0A4         	movff	?___fladd+3,USART_Init@temp+3
  9584                           
  9585                           ;USART.c: 10:     SPBRG = (int) temp;
  9586  004262  C0A1  F060         	movff	USART_Init@temp,___fltol@f1
  9587  004266  C0A2  F061         	movff	USART_Init@temp+1,___fltol@f1+1
  9588  00426A  C0A3  F062         	movff	USART_Init@temp+2,___fltol@f1+2
  9589  00426E  C0A4  F063         	movff	USART_Init@temp+3,___fltol@f1+3
  9590  004272  ECF2  F01B         	call	___fltol	;wreg free
  9591  004276  0100               	movlb	0	; () banked
  9592  004278  5160               	movf	?___fltol& (0+255),w,b
  9593  00427A  6EAF               	movwf	175,c	;volatile
  9594  00427C                     
  9595                           ; BSR set to: 0
  9596                           ;USART.c: 11:     TXSTA = 0x20;
  9597  00427C  0E20               	movlw	32
  9598  00427E  6EAC               	movwf	172,c	;volatile
  9599  004280                     
  9600                           ; BSR set to: 0
  9601                           ;USART.c: 12:     RCSTA = 0x90;
  9602  004280  0E90               	movlw	144
  9603  004282  6EAB               	movwf	171,c	;volatile
  9604  004284                     
  9605                           ; BSR set to: 0
  9606                           ;USART.c: 13:     INTCONbits.GIE = 1;
  9607  004284  8EF2               	bsf	242,7,c	;volatile
  9608  004286                     
  9609                           ; BSR set to: 0
  9610                           ;USART.c: 14:     INTCONbits.PEIE = 1;
  9611  004286  8CF2               	bsf	242,6,c	;volatile
  9612  004288                     
  9613                           ; BSR set to: 0
  9614                           ;USART.c: 15:     PIE1bits.RCIE = 1;
  9615  004288  8A9D               	bsf	157,5,c	;volatile
  9616  00428A                     
  9617                           ; BSR set to: 0
  9618  00428A  0012               	return		;funcret
  9619  00428C                     __end_of_USART_Init:
  9620                           	opt callstack 0
  9621                           
  9622 ;; *************** function ___fltol *****************
  9623 ;; Defined at:
  9624 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  f1              4    0[BANK0 ] void 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  exp1            1    9[BANK0 ] unsigned char 
  9629 ;;  sign1           1    8[BANK0 ] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  4    0[BANK0 ] long 
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9639 ;;      Params:         0       4       0       0       0       0       0       0       0
  9640 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9641 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9642 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9643 ;;Total ram usage:       10 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    4
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_USART_Init
  9650 ;;		_efgtoa
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text42
  9655  0037E4                     __ptext42:
  9656                           	opt callstack 0
  9657  0037E4                     ___fltol:
  9658                           	opt callstack 21
  9659  0037E4  0100               	movlb	0	; () banked
  9660  0037E6  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9661  0037E8  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9662  0037EA  6F69               	movwf	___fltol@exp1& (0+255),b
  9663  0037EC  5169               	movf	___fltol@exp1& (0+255),w,b
  9664  0037EE  A4D8               	btfss	status,2,c
  9665  0037F0  EFFC  F01B         	goto	u8251
  9666  0037F4  EFFE  F01B         	goto	u8250
  9667  0037F8                     u8251:
  9668  0037F8  EF08  F01C         	goto	l5991
  9669  0037FC                     u8250:
  9670  0037FC                     l5987:
  9671                           
  9672                           ; BSR set to: 0
  9673  0037FC  0E00               	movlw	0
  9674  0037FE  6F60               	movwf	?___fltol& (0+255),b
  9675  003800  0E00               	movlw	0
  9676  003802  6F61               	movwf	(?___fltol+1)& (0+255),b
  9677  003804  0E00               	movlw	0
  9678  003806  6F62               	movwf	(?___fltol+2)& (0+255),b
  9679  003808  0E00               	movlw	0
  9680  00380A  6F63               	movwf	(?___fltol+3)& (0+255),b
  9681  00380C  EF75  F01C         	goto	l813
  9682  003810                     l5991:
  9683                           
  9684                           ; BSR set to: 0
  9685  003810  C060  F064         	movff	___fltol@f1,??___fltol
  9686  003814  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  9687  003818  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  9688  00381C  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  9689  003820  0E20               	movlw	32
  9690  003822  EF18  F01C         	goto	u8260
  9691  003826                     u8265:
  9692  003826  90D8               	bcf	status,0,c
  9693  003828  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  9694  00382A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  9695  00382C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  9696  00382E  3364               	rrcf	??___fltol& (0+255),f,b
  9697  003830                     u8260:
  9698  003830  2EE8               	decfsz	wreg,f,c
  9699  003832  EF13  F01C         	goto	u8265
  9700  003836  5164               	movf	??___fltol& (0+255),w,b
  9701  003838  6F68               	movwf	___fltol@sign1& (0+255),b
  9702  00383A                     
  9703                           ; BSR set to: 0
  9704  00383A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  9705  00383C                     
  9706                           ; BSR set to: 0
  9707  00383C  0EFF               	movlw	255
  9708  00383E  1760               	andwf	___fltol@f1& (0+255),f,b
  9709  003840  0EFF               	movlw	255
  9710  003842  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  9711  003844  0EFF               	movlw	255
  9712  003846  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  9713  003848  0E00               	movlw	0
  9714  00384A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  9715  00384C                     
  9716                           ; BSR set to: 0
  9717  00384C  0E96               	movlw	150
  9718  00384E  5F69               	subwf	___fltol@exp1& (0+255),f,b
  9719  003850                     
  9720                           ; BSR set to: 0
  9721  003850  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  9722  003852  EF2F  F01C         	goto	u8270
  9723  003856  EF2D  F01C         	goto	u8271
  9724  00385A                     u8271:
  9725  00385A  EF45  F01C         	goto	l6011
  9726  00385E                     u8270:
  9727  00385E                     
  9728                           ; BSR set to: 0
  9729  00385E  5169               	movf	___fltol@exp1& (0+255),w,b
  9730  003860  0A80               	xorlw	128
  9731  003862  0F97               	addlw	151
  9732  003864  B0D8               	btfsc	status,0,c
  9733  003866  EF37  F01C         	goto	u8281
  9734  00386A  EF39  F01C         	goto	u8280
  9735  00386E                     u8281:
  9736  00386E  EF3B  F01C         	goto	l6007
  9737  003872                     u8280:
  9738  003872  EFFE  F01B         	goto	l5987
  9739  003876                     l6007:
  9740                           
  9741                           ; BSR set to: 0
  9742  003876  90D8               	bcf	status,0,c
  9743  003878  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9744  00387A  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9745  00387C  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9746  00387E  3360               	rrcf	___fltol@f1& (0+255),f,b
  9747  003880                     
  9748                           ; BSR set to: 0
  9749  003880  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  9750  003882  EF3B  F01C         	goto	l6007
  9751  003886  EF5D  F01C         	goto	l6021
  9752  00388A                     l6011:
  9753                           
  9754                           ; BSR set to: 0
  9755  00388A  0E1F               	movlw	31
  9756  00388C  6569               	cpfsgt	___fltol@exp1& (0+255),b
  9757  00388E  EF4B  F01C         	goto	u8291
  9758  003892  EF4D  F01C         	goto	u8290
  9759  003896                     u8291:
  9760  003896  EF55  F01C         	goto	l6019
  9761  00389A                     u8290:
  9762  00389A  EFFE  F01B         	goto	l5987
  9763  00389E                     l6017:
  9764                           
  9765                           ; BSR set to: 0
  9766  00389E  90D8               	bcf	status,0,c
  9767  0038A0  3760               	rlcf	___fltol@f1& (0+255),f,b
  9768  0038A2  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9769  0038A4  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9770  0038A6  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9771  0038A8  0769               	decf	___fltol@exp1& (0+255),f,b
  9772  0038AA                     l6019:
  9773                           
  9774                           ; BSR set to: 0
  9775  0038AA  5169               	movf	___fltol@exp1& (0+255),w,b
  9776  0038AC  A4D8               	btfss	status,2,c
  9777  0038AE  EF5B  F01C         	goto	u8301
  9778  0038B2  EF5D  F01C         	goto	u8300
  9779  0038B6                     u8301:
  9780  0038B6  EF4F  F01C         	goto	l6017
  9781  0038BA                     u8300:
  9782  0038BA                     l6021:
  9783                           
  9784                           ; BSR set to: 0
  9785  0038BA  5168               	movf	___fltol@sign1& (0+255),w,b
  9786  0038BC  B4D8               	btfsc	status,2,c
  9787  0038BE  EF63  F01C         	goto	u8311
  9788  0038C2  EF65  F01C         	goto	u8310
  9789  0038C6                     u8311:
  9790  0038C6  EF6D  F01C         	goto	l6025
  9791  0038CA                     u8310:
  9792  0038CA                     
  9793                           ; BSR set to: 0
  9794  0038CA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9795  0038CC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9796  0038CE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9797  0038D0  6D60               	negf	___fltol@f1& (0+255),b
  9798  0038D2  0E00               	movlw	0
  9799  0038D4  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9800  0038D6  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9801  0038D8  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9802  0038DA                     l6025:
  9803                           
  9804                           ; BSR set to: 0
  9805  0038DA  C060  F060         	movff	___fltol@f1,?___fltol
  9806  0038DE  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9807  0038E2  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9808  0038E6  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9809  0038EA                     l813:
  9810                           
  9811                           ; BSR set to: 0
  9812  0038EA  0012               	return		;funcret
  9813  0038EC                     __end_of___fltol:
  9814                           	opt callstack 0
  9815                           
  9816 ;; *************** function ___fldiv *****************
  9817 ;; Defined at:
  9818 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  b               4   22[BANK0 ] long 
  9821 ;;  a               4   26[BANK0 ] long 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  grs             4   41[BANK0 ] unsigned long 
  9824 ;;  rem             4   34[BANK0 ] unsigned long 
  9825 ;;  new_exp         2   39[BANK0 ] short 
  9826 ;;  aexp            1   46[BANK0 ] unsigned char 
  9827 ;;  bexp            1   45[BANK0 ] unsigned char 
  9828 ;;  sign            1   38[BANK0 ] unsigned char 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  4   22[BANK0 ] unsigned char 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9838 ;;      Params:         0       8       0       0       0       0       0       0       0
  9839 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9840 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9841 ;;      Totals:         0      25       0       0       0       0       0       0       0
  9842 ;;Total ram usage:       25 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    4
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_letemp
  9849 ;;		_USART_Init
  9850 ;;		_efgtoa
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text43
  9855  002248                     __ptext43:
  9856                           	opt callstack 0
  9857  002248                     ___fldiv:
  9858                           	opt callstack 25
  9859  002248  0100               	movlb	0	; () banked
  9860  00224A  5179               	movf	(___fldiv@b+3)& (0+255),w,b
  9861  00224C  0B80               	andlw	128
  9862  00224E  6F86               	movwf	___fldiv@sign& (0+255),b
  9863  002250  5179               	movf	(___fldiv@b+3)& (0+255),w,b
  9864  002252  2579               	addwf	(___fldiv@b+3)& (0+255),w,b
  9865  002254  6F8D               	movwf	___fldiv@bexp& (0+255),b
  9866  002256                     
  9867                           ; BSR set to: 0
  9868  002256  AF78               	btfss	(___fldiv@b+2)& (0+255),7,b
  9869  002258  EF30  F011         	goto	u7621
  9870  00225C  EF32  F011         	goto	u7620
  9871  002260                     u7621:
  9872  002260  EF33  F011         	goto	l5591
  9873  002264                     u7620:
  9874  002264                     
  9875                           ; BSR set to: 0
  9876  002264  818D               	bsf	___fldiv@bexp& (0+255),0,b
  9877  002266                     l5591:
  9878                           
  9879                           ; BSR set to: 0
  9880  002266  518D               	movf	___fldiv@bexp& (0+255),w,b
  9881  002268  B4D8               	btfsc	status,2,c
  9882  00226A  EF39  F011         	goto	u7631
  9883  00226E  EF3B  F011         	goto	u7630
  9884  002272                     u7631:
  9885  002272  EF50  F011         	goto	l5601
  9886  002276                     u7630:
  9887  002276                     
  9888                           ; BSR set to: 0
  9889  002276  298D               	incf	___fldiv@bexp& (0+255),w,b
  9890  002278  A4D8               	btfss	status,2,c
  9891  00227A  EF41  F011         	goto	u7641
  9892  00227E  EF43  F011         	goto	u7640
  9893  002282                     u7641:
  9894  002282  EF4B  F011         	goto	l5597
  9895  002286                     u7640:
  9896  002286                     
  9897                           ; BSR set to: 0
  9898  002286  0E00               	movlw	0
  9899  002288  6F76               	movwf	___fldiv@b& (0+255),b
  9900  00228A  0E00               	movlw	0
  9901  00228C  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  9902  00228E  0E00               	movlw	0
  9903  002290  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  9904  002292  0E00               	movlw	0
  9905  002294  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  9906  002296                     l5597:
  9907                           
  9908                           ; BSR set to: 0
  9909  002296  8F78               	bsf	(___fldiv@b+2)& (0+255),7,b
  9910  002298                     
  9911                           ; BSR set to: 0
  9912  002298  0E00               	movlw	0
  9913  00229A  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  9914  00229C  EF58  F011         	goto	l5603
  9915  0022A0                     l5601:
  9916                           
  9917                           ; BSR set to: 0
  9918  0022A0  0E00               	movlw	0
  9919  0022A2  6F76               	movwf	___fldiv@b& (0+255),b
  9920  0022A4  0E00               	movlw	0
  9921  0022A6  6F77               	movwf	(___fldiv@b+1)& (0+255),b
  9922  0022A8  0E00               	movlw	0
  9923  0022AA  6F78               	movwf	(___fldiv@b+2)& (0+255),b
  9924  0022AC  0E00               	movlw	0
  9925  0022AE  6F79               	movwf	(___fldiv@b+3)& (0+255),b
  9926  0022B0                     l5603:
  9927                           
  9928                           ; BSR set to: 0
  9929  0022B0  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  9930  0022B2  0B80               	andlw	128
  9931  0022B4  1B86               	xorwf	___fldiv@sign& (0+255),f,b
  9932  0022B6                     
  9933                           ; BSR set to: 0
  9934  0022B6  517D               	movf	(___fldiv@a+3)& (0+255),w,b
  9935  0022B8  257D               	addwf	(___fldiv@a+3)& (0+255),w,b
  9936  0022BA  6F8E               	movwf	___fldiv@aexp& (0+255),b
  9937  0022BC                     
  9938                           ; BSR set to: 0
  9939  0022BC  AF7C               	btfss	(___fldiv@a+2)& (0+255),7,b
  9940  0022BE  EF63  F011         	goto	u7651
  9941  0022C2  EF65  F011         	goto	u7650
  9942  0022C6                     u7651:
  9943  0022C6  EF66  F011         	goto	l5611
  9944  0022CA                     u7650:
  9945  0022CA                     
  9946                           ; BSR set to: 0
  9947  0022CA  818E               	bsf	___fldiv@aexp& (0+255),0,b
  9948  0022CC                     l5611:
  9949                           
  9950                           ; BSR set to: 0
  9951  0022CC  518E               	movf	___fldiv@aexp& (0+255),w,b
  9952  0022CE  B4D8               	btfsc	status,2,c
  9953  0022D0  EF6C  F011         	goto	u7661
  9954  0022D4  EF6E  F011         	goto	u7660
  9955  0022D8                     u7661:
  9956  0022D8  EF83  F011         	goto	l5621
  9957  0022DC                     u7660:
  9958  0022DC                     
  9959                           ; BSR set to: 0
  9960  0022DC  298E               	incf	___fldiv@aexp& (0+255),w,b
  9961  0022DE  A4D8               	btfss	status,2,c
  9962  0022E0  EF74  F011         	goto	u7671
  9963  0022E4  EF76  F011         	goto	u7670
  9964  0022E8                     u7671:
  9965  0022E8  EF7E  F011         	goto	l5617
  9966  0022EC                     u7670:
  9967  0022EC                     
  9968                           ; BSR set to: 0
  9969  0022EC  0E00               	movlw	0
  9970  0022EE  6F7A               	movwf	___fldiv@a& (0+255),b
  9971  0022F0  0E00               	movlw	0
  9972  0022F2  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  9973  0022F4  0E00               	movlw	0
  9974  0022F6  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  9975  0022F8  0E00               	movlw	0
  9976  0022FA  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  9977  0022FC                     l5617:
  9978                           
  9979                           ; BSR set to: 0
  9980  0022FC  8F7C               	bsf	(___fldiv@a+2)& (0+255),7,b
  9981  0022FE                     
  9982                           ; BSR set to: 0
  9983  0022FE  0E00               	movlw	0
  9984  002300  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  9985  002302  EF8B  F011         	goto	l5623
  9986  002306                     l5621:
  9987                           
  9988                           ; BSR set to: 0
  9989  002306  0E00               	movlw	0
  9990  002308  6F7A               	movwf	___fldiv@a& (0+255),b
  9991  00230A  0E00               	movlw	0
  9992  00230C  6F7B               	movwf	(___fldiv@a+1)& (0+255),b
  9993  00230E  0E00               	movlw	0
  9994  002310  6F7C               	movwf	(___fldiv@a+2)& (0+255),b
  9995  002312  0E00               	movlw	0
  9996  002314  6F7D               	movwf	(___fldiv@a+3)& (0+255),b
  9997  002316                     l5623:
  9998                           
  9999                           ; BSR set to: 0
 10000  002316  517A               	movf	___fldiv@a& (0+255),w,b
 10001  002318  117B               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10002  00231A  117C               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10003  00231C  117D               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10004  00231E  A4D8               	btfss	status,2,c
 10005  002320  EF94  F011         	goto	u7681
 10006  002324  EF96  F011         	goto	u7680
 10007  002328                     u7681:
 10008  002328  EFAE  F011         	goto	l5635
 10009  00232C                     u7680:
 10010  00232C                     
 10011                           ; BSR set to: 0
 10012  00232C  0E00               	movlw	0
 10013  00232E  6F76               	movwf	___fldiv@b& (0+255),b
 10014  002330  0E00               	movlw	0
 10015  002332  6F77               	movwf	(___fldiv@b+1)& (0+255),b
 10016  002334  0E00               	movlw	0
 10017  002336  6F78               	movwf	(___fldiv@b+2)& (0+255),b
 10018  002338  0E00               	movlw	0
 10019  00233A  6F79               	movwf	(___fldiv@b+3)& (0+255),b
 10020  00233C                     
 10021                           ; BSR set to: 0
 10022  00233C  0E80               	movlw	128
 10023  00233E  1378               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10024  002340  0E7F               	movlw	127
 10025  002342  1379               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10026  002344                     l5629:
 10027                           
 10028                           ; BSR set to: 0
 10029  002344  5186               	movf	___fldiv@sign& (0+255),w,b
 10030  002346  1379               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10031  002348                     
 10032                           ; BSR set to: 0
 10033  002348  C076  F076         	movff	___fldiv@b,?___fldiv
 10034  00234C  C077  F077         	movff	___fldiv@b+1,?___fldiv+1
 10035  002350  C078  F078         	movff	___fldiv@b+2,?___fldiv+2
 10036  002354  C079  F079         	movff	___fldiv@b+3,?___fldiv+3
 10037  002358  EFF1  F012         	goto	l1098
 10038  00235C                     l5635:
 10039                           
 10040                           ; BSR set to: 0
 10041  00235C  518D               	movf	___fldiv@bexp& (0+255),w,b
 10042  00235E  A4D8               	btfss	status,2,c
 10043  002360  EFB4  F011         	goto	u7691
 10044  002364  EFB6  F011         	goto	u7690
 10045  002368                     u7691:
 10046  002368  EFC0  F011         	goto	l5643
 10047  00236C                     u7690:
 10048  00236C                     
 10049                           ; BSR set to: 0
 10050  00236C  0E00               	movlw	0
 10051  00236E  6F76               	movwf	?___fldiv& (0+255),b
 10052  002370  0E00               	movlw	0
 10053  002372  6F77               	movwf	(?___fldiv+1)& (0+255),b
 10054  002374  0E00               	movlw	0
 10055  002376  6F78               	movwf	(?___fldiv+2)& (0+255),b
 10056  002378  0E00               	movlw	0
 10057  00237A  6F79               	movwf	(?___fldiv+3)& (0+255),b
 10058  00237C  EFF1  F012         	goto	l1098
 10059  002380                     l5643:
 10060                           
 10061                           ; BSR set to: 0
 10062  002380  518E               	movf	___fldiv@aexp& (0+255),w,b
 10063  002382  C08D  F07E         	movff	___fldiv@bexp,??___fldiv
 10064  002386  6B7F               	clrf	(??___fldiv+1)& (0+255),b
 10065  002388  5F7E               	subwf	??___fldiv& (0+255),f,b
 10066  00238A  0E00               	movlw	0
 10067  00238C  5B7F               	subwfb	(??___fldiv+1)& (0+255),f,b
 10068  00238E  0E7F               	movlw	127
 10069  002390  257E               	addwf	??___fldiv& (0+255),w,b
 10070  002392  6F87               	movwf	___fldiv@new_exp& (0+255),b
 10071  002394  0E00               	movlw	0
 10072  002396  217F               	addwfc	(??___fldiv+1)& (0+255),w,b
 10073  002398  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10074  00239A                     
 10075                           ; BSR set to: 0
 10076  00239A  C076  F082         	movff	___fldiv@b,___fldiv@rem
 10077  00239E  C077  F083         	movff	___fldiv@b+1,___fldiv@rem+1
 10078  0023A2  C078  F084         	movff	___fldiv@b+2,___fldiv@rem+2
 10079  0023A6  C079  F085         	movff	___fldiv@b+3,___fldiv@rem+3
 10080  0023AA                     
 10081                           ; BSR set to: 0
 10082  0023AA  0E00               	movlw	0
 10083  0023AC  6F76               	movwf	___fldiv@b& (0+255),b
 10084  0023AE  0E00               	movlw	0
 10085  0023B0  6F77               	movwf	(___fldiv@b+1)& (0+255),b
 10086  0023B2  0E00               	movlw	0
 10087  0023B4  6F78               	movwf	(___fldiv@b+2)& (0+255),b
 10088  0023B6  0E00               	movlw	0
 10089  0023B8  6F79               	movwf	(___fldiv@b+3)& (0+255),b
 10090  0023BA                     
 10091                           ; BSR set to: 0
 10092  0023BA  0E00               	movlw	0
 10093  0023BC  6F89               	movwf	___fldiv@grs& (0+255),b
 10094  0023BE  0E00               	movlw	0
 10095  0023C0  6F8A               	movwf	(___fldiv@grs+1)& (0+255),b
 10096  0023C2  0E00               	movlw	0
 10097  0023C4  6F8B               	movwf	(___fldiv@grs+2)& (0+255),b
 10098  0023C6  0E00               	movlw	0
 10099  0023C8  6F8C               	movwf	(___fldiv@grs+3)& (0+255),b
 10100  0023CA                     
 10101                           ; BSR set to: 0
 10102  0023CA  0E00               	movlw	0
 10103  0023CC  6F8E               	movwf	___fldiv@aexp& (0+255),b
 10104  0023CE  EF21  F012         	goto	l1100
 10105  0023D2                     l5653:
 10106                           
 10107                           ; BSR set to: 0
 10108  0023D2  518E               	movf	___fldiv@aexp& (0+255),w,b
 10109  0023D4  B4D8               	btfsc	status,2,c
 10110  0023D6  EFEF  F011         	goto	u7701
 10111  0023DA  EFF1  F011         	goto	u7700
 10112  0023DE                     u7701:
 10113  0023DE  EF08  F012         	goto	l5661
 10114  0023E2                     u7700:
 10115  0023E2                     
 10116                           ; BSR set to: 0
 10117  0023E2  90D8               	bcf	status,0,c
 10118  0023E4  3782               	rlcf	___fldiv@rem& (0+255),f,b
 10119  0023E6  3783               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10120  0023E8  3784               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10121  0023EA  3785               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10122  0023EC  90D8               	bcf	status,0,c
 10123  0023EE  3776               	rlcf	___fldiv@b& (0+255),f,b
 10124  0023F0  3777               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10125  0023F2  3778               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10126  0023F4  3779               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10127  0023F6                     
 10128                           ; BSR set to: 0
 10129  0023F6  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10130  0023F8  EF00  F012         	goto	u7711
 10131  0023FC  EF02  F012         	goto	u7710
 10132  002400                     u7711:
 10133  002400  EF03  F012         	goto	l1103
 10134  002404                     u7710:
 10135  002404                     
 10136                           ; BSR set to: 0
 10137  002404  8176               	bsf	___fldiv@b& (0+255),0,b
 10138  002406                     l1103:
 10139                           
 10140                           ; BSR set to: 0
 10141  002406  90D8               	bcf	status,0,c
 10142  002408  3789               	rlcf	___fldiv@grs& (0+255),f,b
 10143  00240A  378A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10144  00240C  378B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10145  00240E  378C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10146  002410                     l5661:
 10147                           
 10148                           ; BSR set to: 0
 10149  002410  517A               	movf	___fldiv@a& (0+255),w,b
 10150  002412  5D82               	subwf	___fldiv@rem& (0+255),w,b
 10151  002414  517B               	movf	(___fldiv@a+1)& (0+255),w,b
 10152  002416  5983               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10153  002418  517C               	movf	(___fldiv@a+2)& (0+255),w,b
 10154  00241A  5984               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10155  00241C  517D               	movf	(___fldiv@a+3)& (0+255),w,b
 10156  00241E  5985               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10157  002420  A0D8               	btfss	status,0,c
 10158  002422  EF15  F012         	goto	u7721
 10159  002426  EF17  F012         	goto	u7720
 10160  00242A                     u7721:
 10161  00242A  EF20  F012         	goto	l5667
 10162  00242E                     u7720:
 10163  00242E                     
 10164                           ; BSR set to: 0
 10165  00242E  8D8C               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10166  002430                     
 10167                           ; BSR set to: 0
 10168  002430  517A               	movf	___fldiv@a& (0+255),w,b
 10169  002432  5F82               	subwf	___fldiv@rem& (0+255),f,b
 10170  002434  517B               	movf	(___fldiv@a+1)& (0+255),w,b
 10171  002436  5B83               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10172  002438  517C               	movf	(___fldiv@a+2)& (0+255),w,b
 10173  00243A  5B84               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10174  00243C  517D               	movf	(___fldiv@a+3)& (0+255),w,b
 10175  00243E  5B85               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10176  002440                     l5667:
 10177                           
 10178                           ; BSR set to: 0
 10179  002440  2B8E               	incf	___fldiv@aexp& (0+255),f,b
 10180  002442                     l1100:
 10181                           
 10182                           ; BSR set to: 0
 10183  002442  0E19               	movlw	25
 10184  002444  658E               	cpfsgt	___fldiv@aexp& (0+255),b
 10185  002446  EF27  F012         	goto	u7731
 10186  00244A  EF29  F012         	goto	u7730
 10187  00244E                     u7731:
 10188  00244E  EFE9  F011         	goto	l5653
 10189  002452                     u7730:
 10190  002452                     
 10191                           ; BSR set to: 0
 10192  002452  5182               	movf	___fldiv@rem& (0+255),w,b
 10193  002454  1183               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10194  002456  1184               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10195  002458  1185               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10196  00245A  B4D8               	btfsc	status,2,c
 10197  00245C  EF32  F012         	goto	u7741
 10198  002460  EF34  F012         	goto	u7740
 10199  002464                     u7741:
 10200  002464  EF4C  F012         	goto	l5679
 10201  002468                     u7740:
 10202  002468                     
 10203                           ; BSR set to: 0
 10204  002468  8189               	bsf	___fldiv@grs& (0+255),0,b
 10205  00246A  EF4C  F012         	goto	l5679
 10206  00246E                     l5673:
 10207                           
 10208                           ; BSR set to: 0
 10209  00246E  90D8               	bcf	status,0,c
 10210  002470  3776               	rlcf	___fldiv@b& (0+255),f,b
 10211  002472  3777               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10212  002474  3778               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10213  002476  3779               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10214  002478                     
 10215                           ; BSR set to: 0
 10216  002478  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10217  00247A  EF41  F012         	goto	u7751
 10218  00247E  EF43  F012         	goto	u7750
 10219  002482                     u7751:
 10220  002482  EF44  F012         	goto	l1109
 10221  002486                     u7750:
 10222  002486                     
 10223                           ; BSR set to: 0
 10224  002486  8176               	bsf	___fldiv@b& (0+255),0,b
 10225  002488                     l1109:
 10226                           
 10227                           ; BSR set to: 0
 10228  002488  90D8               	bcf	status,0,c
 10229  00248A  3789               	rlcf	___fldiv@grs& (0+255),f,b
 10230  00248C  378A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10231  00248E  378B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10232  002490  378C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10233  002492  0787               	decf	___fldiv@new_exp& (0+255),f,b
 10234  002494  A0D8               	btfss	status,0,c
 10235  002496  0788               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10236  002498                     l5679:
 10237                           
 10238                           ; BSR set to: 0
 10239  002498  AF78               	btfss	(___fldiv@b+2)& (0+255),7,b
 10240  00249A  EF51  F012         	goto	u7761
 10241  00249E  EF53  F012         	goto	u7760
 10242  0024A2                     u7761:
 10243  0024A2  EF37  F012         	goto	l5673
 10244  0024A6                     u7760:
 10245  0024A6                     
 10246                           ; BSR set to: 0
 10247  0024A6  0E00               	movlw	0
 10248  0024A8  6F8E               	movwf	___fldiv@aexp& (0+255),b
 10249  0024AA                     
 10250                           ; BSR set to: 0
 10251  0024AA  AF8C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10252  0024AC  EF5A  F012         	goto	u7771
 10253  0024B0  EF5C  F012         	goto	u7770
 10254  0024B4                     u7771:
 10255  0024B4  EF80  F012         	goto	l1111
 10256  0024B8                     u7770:
 10257  0024B8                     
 10258                           ; BSR set to: 0
 10259  0024B8  0EFF               	movlw	255
 10260  0024BA  1589               	andwf	___fldiv@grs& (0+255),w,b
 10261  0024BC  6F7E               	movwf	??___fldiv& (0+255),b
 10262  0024BE  0EFF               	movlw	255
 10263  0024C0  158A               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10264  0024C2  6F7F               	movwf	(??___fldiv+1)& (0+255),b
 10265  0024C4  0EFF               	movlw	255
 10266  0024C6  158B               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10267  0024C8  6F80               	movwf	(??___fldiv+2)& (0+255),b
 10268  0024CA  0E7F               	movlw	127
 10269  0024CC  158C               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10270  0024CE  6F81               	movwf	(??___fldiv+3)& (0+255),b
 10271  0024D0  517E               	movf	??___fldiv& (0+255),w,b
 10272  0024D2  117F               	iorwf	(??___fldiv+1)& (0+255),w,b
 10273  0024D4  1180               	iorwf	(??___fldiv+2)& (0+255),w,b
 10274  0024D6  1181               	iorwf	(??___fldiv+3)& (0+255),w,b
 10275  0024D8  B4D8               	btfsc	status,2,c
 10276  0024DA  EF71  F012         	goto	u7781
 10277  0024DE  EF73  F012         	goto	u7780
 10278  0024E2                     u7781:
 10279  0024E2  EF77  F012         	goto	l1112
 10280  0024E6                     u7780:
 10281  0024E6                     l5687:
 10282                           
 10283                           ; BSR set to: 0
 10284  0024E6  0E01               	movlw	1
 10285  0024E8  6F8E               	movwf	___fldiv@aexp& (0+255),b
 10286  0024EA  EF80  F012         	goto	l1111
 10287  0024EE                     l1112:
 10288                           
 10289                           ; BSR set to: 0
 10290  0024EE  A176               	btfss	___fldiv@b& (0+255),0,b
 10291  0024F0  EF7C  F012         	goto	u7791
 10292  0024F4  EF7E  F012         	goto	u7790
 10293  0024F8                     u7791:
 10294  0024F8  EF80  F012         	goto	l1111
 10295  0024FC                     u7790:
 10296  0024FC  EF73  F012         	goto	l5687
 10297  002500                     l1111:
 10298                           
 10299                           ; BSR set to: 0
 10300  002500  518E               	movf	___fldiv@aexp& (0+255),w,b
 10301  002502  B4D8               	btfsc	status,2,c
 10302  002504  EF86  F012         	goto	u7801
 10303  002508  EF88  F012         	goto	u7800
 10304  00250C                     u7801:
 10305  00250C  EFAC  F012         	goto	l5699
 10306  002510                     u7800:
 10307  002510                     
 10308                           ; BSR set to: 0
 10309  002510  0E01               	movlw	1
 10310  002512  2776               	addwf	___fldiv@b& (0+255),f,b
 10311  002514  0E00               	movlw	0
 10312  002516  2377               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10313  002518  2378               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10314  00251A  2379               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10315  00251C                     
 10316                           ; BSR set to: 0
 10317  00251C  A179               	btfss	(___fldiv@b+3)& (0+255),0,b
 10318  00251E  EF93  F012         	goto	u7811
 10319  002522  EF95  F012         	goto	u7810
 10320  002526                     u7811:
 10321  002526  EFAC  F012         	goto	l5699
 10322  00252A                     u7810:
 10323  00252A                     
 10324                           ; BSR set to: 0
 10325  00252A  C076  F07E         	movff	___fldiv@b,??___fldiv
 10326  00252E  C077  F07F         	movff	___fldiv@b+1,??___fldiv+1
 10327  002532  C078  F080         	movff	___fldiv@b+2,??___fldiv+2
 10328  002536  C079  F081         	movff	___fldiv@b+3,??___fldiv+3
 10329  00253A  3581               	rlcf	(??___fldiv+3)& (0+255),w,b
 10330  00253C  3381               	rrcf	(??___fldiv+3)& (0+255),f,b
 10331  00253E  3380               	rrcf	(??___fldiv+2)& (0+255),f,b
 10332  002540  337F               	rrcf	(??___fldiv+1)& (0+255),f,b
 10333  002542  337E               	rrcf	??___fldiv& (0+255),f,b
 10334  002544  C07E  F076         	movff	??___fldiv,___fldiv@b
 10335  002548  C07F  F077         	movff	??___fldiv+1,___fldiv@b+1
 10336  00254C  C080  F078         	movff	??___fldiv+2,___fldiv@b+2
 10337  002550  C081  F079         	movff	??___fldiv+3,___fldiv@b+3
 10338  002554                     
 10339                           ; BSR set to: 0
 10340  002554  4B87               	infsnz	___fldiv@new_exp& (0+255),f,b
 10341  002556  2B88               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10342  002558                     l5699:
 10343                           
 10344                           ; BSR set to: 0
 10345  002558  BF88               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10346  00255A  EFB7  F012         	goto	u7821
 10347  00255E  5188               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10348  002560  E108               	bnz	u7820
 10349  002562  2987               	incf	___fldiv@new_exp& (0+255),w,b
 10350  002564  A0D8               	btfss	status,0,c
 10351  002566  EFB7  F012         	goto	u7821
 10352  00256A  EFB9  F012         	goto	u7820
 10353  00256E                     u7821:
 10354  00256E  EFC4  F012         	goto	l5703
 10355  002572                     u7820:
 10356  002572                     
 10357                           ; BSR set to: 0
 10358  002572  0E00               	movlw	0
 10359  002574  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10360  002576  6987               	setf	___fldiv@new_exp& (0+255),b
 10361  002578  0E00               	movlw	0
 10362  00257A  6F76               	movwf	___fldiv@b& (0+255),b
 10363  00257C  0E00               	movlw	0
 10364  00257E  6F77               	movwf	(___fldiv@b+1)& (0+255),b
 10365  002580  0E00               	movlw	0
 10366  002582  6F78               	movwf	(___fldiv@b+2)& (0+255),b
 10367  002584  0E00               	movlw	0
 10368  002586  6F79               	movwf	(___fldiv@b+3)& (0+255),b
 10369  002588                     l5703:
 10370                           
 10371                           ; BSR set to: 0
 10372  002588  BF88               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10373  00258A  EFD1  F012         	goto	u7830
 10374  00258E  5188               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10375  002590  E106               	bnz	u7831
 10376  002592  0587               	decf	___fldiv@new_exp& (0+255),w,b
 10377  002594  B0D8               	btfsc	status,0,c
 10378  002596  EFCF  F012         	goto	u7831
 10379  00259A  EFD1  F012         	goto	u7830
 10380  00259E                     u7831:
 10381  00259E  EFDF  F012         	goto	l5707
 10382  0025A2                     u7830:
 10383  0025A2                     
 10384                           ; BSR set to: 0
 10385  0025A2  0E00               	movlw	0
 10386  0025A4  6F88               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10387  0025A6  0E00               	movlw	0
 10388  0025A8  6F87               	movwf	___fldiv@new_exp& (0+255),b
 10389  0025AA  0E00               	movlw	0
 10390  0025AC  6F76               	movwf	___fldiv@b& (0+255),b
 10391  0025AE  0E00               	movlw	0
 10392  0025B0  6F77               	movwf	(___fldiv@b+1)& (0+255),b
 10393  0025B2  0E00               	movlw	0
 10394  0025B4  6F78               	movwf	(___fldiv@b+2)& (0+255),b
 10395  0025B6  0E00               	movlw	0
 10396  0025B8  6F79               	movwf	(___fldiv@b+3)& (0+255),b
 10397  0025BA  0E00               	movlw	0
 10398  0025BC  6F86               	movwf	___fldiv@sign& (0+255),b
 10399  0025BE                     l5707:
 10400                           
 10401                           ; BSR set to: 0
 10402  0025BE  C087  F08D         	movff	___fldiv@new_exp,___fldiv@bexp
 10403  0025C2                     
 10404                           ; BSR set to: 0
 10405  0025C2  A18D               	btfss	___fldiv@bexp& (0+255),0,b
 10406  0025C4  EFE6  F012         	goto	u7841
 10407  0025C8  EFE8  F012         	goto	u7840
 10408  0025CC                     u7841:
 10409  0025CC  EFEB  F012         	goto	l5713
 10410  0025D0                     u7840:
 10411  0025D0                     
 10412                           ; BSR set to: 0
 10413  0025D0  8F78               	bsf	(___fldiv@b+2)& (0+255),7,b
 10414  0025D2  EFEC  F012         	goto	l5715
 10415  0025D6                     l5713:
 10416                           
 10417                           ; BSR set to: 0
 10418  0025D6  9F78               	bcf	(___fldiv@b+2)& (0+255),7,b
 10419  0025D8                     l5715:
 10420                           
 10421                           ; BSR set to: 0
 10422  0025D8  90D8               	bcf	status,0,c
 10423  0025DA  318D               	rrcf	___fldiv@bexp& (0+255),w,b
 10424  0025DC  6F79               	movwf	(___fldiv@b+3)& (0+255),b
 10425  0025DE  EFA2  F011         	goto	l5629
 10426  0025E2                     l1098:
 10427                           
 10428                           ; BSR set to: 0
 10429  0025E2  0012               	return		;funcret
 10430  0025E4                     __end_of___fldiv:
 10431                           	opt callstack 0
 10432                           
 10433 ;; *************** function ___fladd *****************
 10434 ;; Defined at:
 10435 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  b               4   47[BANK0 ] unsigned char 
 10438 ;;  a               4   51[BANK0 ] unsigned char 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  grs             1   62[BANK0 ] unsigned char 
 10441 ;;  bexp            1   61[BANK0 ] unsigned char 
 10442 ;;  aexp            1   60[BANK0 ] unsigned char 
 10443 ;;  signs           1   59[BANK0 ] unsigned char 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  4   47[BANK0 ] unsigned char 
 10446 ;; Registers used:
 10447 ;;		wreg, status,2, status,0
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10453 ;;      Params:         0       8       0       0       0       0       0       0       0
 10454 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10455 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10456 ;;      Totals:         0      16       0       0       0       0       0       0       0
 10457 ;;Total ram usage:       16 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    4
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_compTemp
 10464 ;;		_USART_Init
 10465 ;;		_efgtoa
 10466 ;;		___flsub
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text44
 10471  00195A                     __ptext44:
 10472                           	opt callstack 0
 10473  00195A                     ___fladd:
 10474                           	opt callstack 20
 10475  00195A  0100               	movlb	0	; () banked
 10476  00195C  5192               	movf	(___fladd@b+3)& (0+255),w,b
 10477  00195E  0B80               	andlw	128
 10478  001960  6F9B               	movwf	___fladd@signs& (0+255),b
 10479  001962  5192               	movf	(___fladd@b+3)& (0+255),w,b
 10480  001964  2592               	addwf	(___fladd@b+3)& (0+255),w,b
 10481  001966  6F9D               	movwf	___fladd@bexp& (0+255),b
 10482  001968                     
 10483                           ; BSR set to: 0
 10484  001968  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
 10485  00196A  EFB9  F00C         	goto	u6811
 10486  00196E  EFBB  F00C         	goto	u6810
 10487  001972                     u6811:
 10488  001972  EFBC  F00C         	goto	l5209
 10489  001976                     u6810:
 10490  001976                     
 10491                           ; BSR set to: 0
 10492  001976  819D               	bsf	___fladd@bexp& (0+255),0,b
 10493  001978                     l5209:
 10494                           
 10495                           ; BSR set to: 0
 10496  001978  519D               	movf	___fladd@bexp& (0+255),w,b
 10497  00197A  B4D8               	btfsc	status,2,c
 10498  00197C  EFC2  F00C         	goto	u6821
 10499  001980  EFC4  F00C         	goto	u6820
 10500  001984                     u6821:
 10501  001984  EFD9  F00C         	goto	l5219
 10502  001988                     u6820:
 10503  001988                     
 10504                           ; BSR set to: 0
 10505  001988  299D               	incf	___fladd@bexp& (0+255),w,b
 10506  00198A  A4D8               	btfss	status,2,c
 10507  00198C  EFCA  F00C         	goto	u6831
 10508  001990  EFCC  F00C         	goto	u6830
 10509  001994                     u6831:
 10510  001994  EFD4  F00C         	goto	l5215
 10511  001998                     u6830:
 10512  001998                     
 10513                           ; BSR set to: 0
 10514  001998  0E00               	movlw	0
 10515  00199A  6F8F               	movwf	___fladd@b& (0+255),b
 10516  00199C  0E00               	movlw	0
 10517  00199E  6F90               	movwf	(___fladd@b+1)& (0+255),b
 10518  0019A0  0E00               	movlw	0
 10519  0019A2  6F91               	movwf	(___fladd@b+2)& (0+255),b
 10520  0019A4  0E00               	movlw	0
 10521  0019A6  6F92               	movwf	(___fladd@b+3)& (0+255),b
 10522  0019A8                     l5215:
 10523                           
 10524                           ; BSR set to: 0
 10525  0019A8  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
 10526  0019AA                     
 10527                           ; BSR set to: 0
 10528  0019AA  0E00               	movlw	0
 10529  0019AC  6F92               	movwf	(___fladd@b+3)& (0+255),b
 10530  0019AE  EFE1  F00C         	goto	l5221
 10531  0019B2                     l5219:
 10532                           
 10533                           ; BSR set to: 0
 10534  0019B2  0E00               	movlw	0
 10535  0019B4  6F8F               	movwf	___fladd@b& (0+255),b
 10536  0019B6  0E00               	movlw	0
 10537  0019B8  6F90               	movwf	(___fladd@b+1)& (0+255),b
 10538  0019BA  0E00               	movlw	0
 10539  0019BC  6F91               	movwf	(___fladd@b+2)& (0+255),b
 10540  0019BE  0E00               	movlw	0
 10541  0019C0  6F92               	movwf	(___fladd@b+3)& (0+255),b
 10542  0019C2                     l5221:
 10543                           
 10544                           ; BSR set to: 0
 10545  0019C2  5196               	movf	(___fladd@a+3)& (0+255),w,b
 10546  0019C4  0B80               	andlw	128
 10547  0019C6  6F9C               	movwf	___fladd@aexp& (0+255),b
 10548  0019C8                     
 10549                           ; BSR set to: 0
 10550  0019C8  519B               	movf	___fladd@signs& (0+255),w,b
 10551  0019CA  199C               	xorwf	___fladd@aexp& (0+255),w,b
 10552  0019CC  B4D8               	btfsc	status,2,c
 10553  0019CE  EFEB  F00C         	goto	u6841
 10554  0019D2  EFED  F00C         	goto	u6840
 10555  0019D6                     u6841:
 10556  0019D6  EFEE  F00C         	goto	l5227
 10557  0019DA                     u6840:
 10558  0019DA                     
 10559                           ; BSR set to: 0
 10560  0019DA  8D9B               	bsf	___fladd@signs& (0+255),6,b
 10561  0019DC                     l5227:
 10562                           
 10563                           ; BSR set to: 0
 10564  0019DC  5196               	movf	(___fladd@a+3)& (0+255),w,b
 10565  0019DE  2596               	addwf	(___fladd@a+3)& (0+255),w,b
 10566  0019E0  6F9C               	movwf	___fladd@aexp& (0+255),b
 10567  0019E2                     
 10568                           ; BSR set to: 0
 10569  0019E2  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
 10570  0019E4  EFF6  F00C         	goto	u6851
 10571  0019E8  EFF8  F00C         	goto	u6850
 10572  0019EC                     u6851:
 10573  0019EC  EFF9  F00C         	goto	l5233
 10574  0019F0                     u6850:
 10575  0019F0                     
 10576                           ; BSR set to: 0
 10577  0019F0  819C               	bsf	___fladd@aexp& (0+255),0,b
 10578  0019F2                     l5233:
 10579                           
 10580                           ; BSR set to: 0
 10581  0019F2  519C               	movf	___fladd@aexp& (0+255),w,b
 10582  0019F4  B4D8               	btfsc	status,2,c
 10583  0019F6  EFFF  F00C         	goto	u6861
 10584  0019FA  EF01  F00D         	goto	u6860
 10585  0019FE                     u6861:
 10586  0019FE  EF16  F00D         	goto	l5243
 10587  001A02                     u6860:
 10588  001A02                     
 10589                           ; BSR set to: 0
 10590  001A02  299C               	incf	___fladd@aexp& (0+255),w,b
 10591  001A04  A4D8               	btfss	status,2,c
 10592  001A06  EF07  F00D         	goto	u6871
 10593  001A0A  EF09  F00D         	goto	u6870
 10594  001A0E                     u6871:
 10595  001A0E  EF11  F00D         	goto	l5239
 10596  001A12                     u6870:
 10597  001A12                     
 10598                           ; BSR set to: 0
 10599  001A12  0E00               	movlw	0
 10600  001A14  6F93               	movwf	___fladd@a& (0+255),b
 10601  001A16  0E00               	movlw	0
 10602  001A18  6F94               	movwf	(___fladd@a+1)& (0+255),b
 10603  001A1A  0E00               	movlw	0
 10604  001A1C  6F95               	movwf	(___fladd@a+2)& (0+255),b
 10605  001A1E  0E00               	movlw	0
 10606  001A20  6F96               	movwf	(___fladd@a+3)& (0+255),b
 10607  001A22                     l5239:
 10608                           
 10609                           ; BSR set to: 0
 10610  001A22  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
 10611  001A24                     
 10612                           ; BSR set to: 0
 10613  001A24  0E00               	movlw	0
 10614  001A26  6F96               	movwf	(___fladd@a+3)& (0+255),b
 10615  001A28  EF1E  F00D         	goto	l5245
 10616  001A2C                     l5243:
 10617                           
 10618                           ; BSR set to: 0
 10619  001A2C  0E00               	movlw	0
 10620  001A2E  6F93               	movwf	___fladd@a& (0+255),b
 10621  001A30  0E00               	movlw	0
 10622  001A32  6F94               	movwf	(___fladd@a+1)& (0+255),b
 10623  001A34  0E00               	movlw	0
 10624  001A36  6F95               	movwf	(___fladd@a+2)& (0+255),b
 10625  001A38  0E00               	movlw	0
 10626  001A3A  6F96               	movwf	(___fladd@a+3)& (0+255),b
 10627  001A3C                     l5245:
 10628                           
 10629                           ; BSR set to: 0
 10630  001A3C  519D               	movf	___fladd@bexp& (0+255),w,b
 10631  001A3E  5D9C               	subwf	___fladd@aexp& (0+255),w,b
 10632  001A40  B0D8               	btfsc	status,0,c
 10633  001A42  EF25  F00D         	goto	u6881
 10634  001A46  EF27  F00D         	goto	u6880
 10635  001A4A                     u6881:
 10636  001A4A  EF4E  F00D         	goto	l5281
 10637  001A4E                     u6880:
 10638  001A4E                     
 10639                           ; BSR set to: 0
 10640  001A4E  AD9B               	btfss	___fladd@signs& (0+255),6,b
 10641  001A50  EF2C  F00D         	goto	u6891
 10642  001A54  EF2E  F00D         	goto	u6890
 10643  001A58                     u6891:
 10644  001A58  EF30  F00D         	goto	l5251
 10645  001A5C                     u6890:
 10646  001A5C                     
 10647                           ; BSR set to: 0
 10648  001A5C  0E80               	movlw	128
 10649  001A5E  1B9B               	xorwf	___fladd@signs& (0+255),f,b
 10650  001A60                     l5251:
 10651                           
 10652                           ; BSR set to: 0
 10653  001A60  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
 10654  001A64                     
 10655                           ; BSR set to: 0
 10656  001A64  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
 10657  001A68                     
 10658                           ; BSR set to: 0
 10659  001A68  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
 10660  001A6C                     
 10661                           ; BSR set to: 0
 10662  001A6C  C08F  F09E         	movff	___fladd@b,___fladd@grs
 10663  001A70                     
 10664                           ; BSR set to: 0
 10665  001A70  C093  F08F         	movff	___fladd@a,___fladd@b
 10666  001A74                     
 10667                           ; BSR set to: 0
 10668  001A74  C09E  F093         	movff	___fladd@grs,___fladd@a
 10669  001A78                     
 10670                           ; BSR set to: 0
 10671  001A78  C090  F09E         	movff	___fladd@b+1,___fladd@grs
 10672  001A7C                     
 10673                           ; BSR set to: 0
 10674  001A7C  C094  F090         	movff	___fladd@a+1,___fladd@b+1
 10675  001A80                     
 10676                           ; BSR set to: 0
 10677  001A80  C09E  F094         	movff	___fladd@grs,___fladd@a+1
 10678  001A84                     
 10679                           ; BSR set to: 0
 10680  001A84  C091  F09E         	movff	___fladd@b+2,___fladd@grs
 10681  001A88                     
 10682                           ; BSR set to: 0
 10683  001A88  C095  F091         	movff	___fladd@a+2,___fladd@b+2
 10684  001A8C                     
 10685                           ; BSR set to: 0
 10686  001A8C  C09E  F095         	movff	___fladd@grs,___fladd@a+2
 10687  001A90                     
 10688                           ; BSR set to: 0
 10689  001A90  C092  F09E         	movff	___fladd@b+3,___fladd@grs
 10690  001A94                     
 10691                           ; BSR set to: 0
 10692  001A94  C096  F092         	movff	___fladd@a+3,___fladd@b+3
 10693  001A98                     
 10694                           ; BSR set to: 0
 10695  001A98  C09E  F096         	movff	___fladd@grs,___fladd@a+3
 10696  001A9C                     l5281:
 10697                           
 10698                           ; BSR set to: 0
 10699  001A9C  0E00               	movlw	0
 10700  001A9E  6F9E               	movwf	___fladd@grs& (0+255),b
 10701  001AA0                     
 10702                           ; BSR set to: 0
 10703  001AA0  519D               	movf	___fladd@bexp& (0+255),w,b
 10704  001AA2  C09C  F097         	movff	___fladd@aexp,??___fladd
 10705  001AA6  6B98               	clrf	(??___fladd+1)& (0+255),b
 10706  001AA8  5F97               	subwf	??___fladd& (0+255),f,b
 10707  001AAA  0E00               	movlw	0
 10708  001AAC  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
 10709  001AAE  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
 10710  001AB0  EF63  F00D         	goto	u6901
 10711  001AB4  5198               	movf	(??___fladd+1)& (0+255),w,b
 10712  001AB6  E109               	bnz	u6900
 10713  001AB8  0E1A               	movlw	26
 10714  001ABA  5D97               	subwf	??___fladd& (0+255),w,b
 10715  001ABC  A0D8               	btfss	status,0,c
 10716  001ABE  EF63  F00D         	goto	u6901
 10717  001AC2  EF65  F00D         	goto	u6900
 10718  001AC6                     u6901:
 10719  001AC6  EF9C  F00D         	goto	l1045
 10720  001ACA                     u6900:
 10721  001ACA                     
 10722                           ; BSR set to: 0
 10723  001ACA  518F               	movf	___fladd@b& (0+255),w,b
 10724  001ACC  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
 10725  001ACE  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
 10726  001AD0  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
 10727  001AD2  A4D8               	btfss	status,2,c
 10728  001AD4  EF6E  F00D         	goto	u6911
 10729  001AD8  EF71  F00D         	goto	u6910
 10730  001ADC                     u6911:
 10731  001ADC  0E01               	movlw	1
 10732  001ADE  EF72  F00D         	goto	u6920
 10733  001AE2                     u6910:
 10734  001AE2  0E00               	movlw	0
 10735  001AE4                     u6920:
 10736  001AE4  6F9E               	movwf	___fladd@grs& (0+255),b
 10737  001AE6                     
 10738                           ; BSR set to: 0
 10739  001AE6  0E00               	movlw	0
 10740  001AE8  6F8F               	movwf	___fladd@b& (0+255),b
 10741  001AEA  0E00               	movlw	0
 10742  001AEC  6F90               	movwf	(___fladd@b+1)& (0+255),b
 10743  001AEE  0E00               	movlw	0
 10744  001AF0  6F91               	movwf	(___fladd@b+2)& (0+255),b
 10745  001AF2  0E00               	movlw	0
 10746  001AF4  6F92               	movwf	(___fladd@b+3)& (0+255),b
 10747  001AF6                     
 10748                           ; BSR set to: 0
 10749  001AF6  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
 10750  001AFA  EFA5  F00D         	goto	l1044
 10751  001AFE                     l1046:
 10752                           
 10753                           ; BSR set to: 0
 10754  001AFE  A19E               	btfss	___fladd@grs& (0+255),0,b
 10755  001B00  EF84  F00D         	goto	u6931
 10756  001B04  EF86  F00D         	goto	u6930
 10757  001B08                     u6931:
 10758  001B08  EF8C  F00D         	goto	l5293
 10759  001B0C                     u6930:
 10760  001B0C                     
 10761                           ; BSR set to: 0
 10762  001B0C  90D8               	bcf	status,0,c
 10763  001B0E  319E               	rrcf	___fladd@grs& (0+255),w,b
 10764  001B10  0901               	iorlw	1
 10765  001B12  6F9E               	movwf	___fladd@grs& (0+255),b
 10766  001B14  EF8E  F00D         	goto	l5295
 10767  001B18                     l5293:
 10768                           
 10769                           ; BSR set to: 0
 10770  001B18  90D8               	bcf	status,0,c
 10771  001B1A  339E               	rrcf	___fladd@grs& (0+255),f,b
 10772  001B1C                     l5295:
 10773                           
 10774                           ; BSR set to: 0
 10775  001B1C  A18F               	btfss	___fladd@b& (0+255),0,b
 10776  001B1E  EF93  F00D         	goto	u6941
 10777  001B22  EF95  F00D         	goto	u6940
 10778  001B26                     u6941:
 10779  001B26  EF96  F00D         	goto	l5299
 10780  001B2A                     u6940:
 10781  001B2A                     
 10782                           ; BSR set to: 0
 10783  001B2A  8F9E               	bsf	___fladd@grs& (0+255),7,b
 10784  001B2C                     l5299:
 10785                           
 10786                           ; BSR set to: 0
 10787  001B2C  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
 10788  001B2E  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
 10789  001B30  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
 10790  001B32  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
 10791  001B34  338F               	rrcf	___fladd@b& (0+255),f,b
 10792  001B36                     
 10793                           ; BSR set to: 0
 10794  001B36  2B9D               	incf	___fladd@bexp& (0+255),f,b
 10795  001B38                     l1045:
 10796                           
 10797                           ; BSR set to: 0
 10798  001B38  519C               	movf	___fladd@aexp& (0+255),w,b
 10799  001B3A  5D9D               	subwf	___fladd@bexp& (0+255),w,b
 10800  001B3C  A0D8               	btfss	status,0,c
 10801  001B3E  EFA3  F00D         	goto	u6951
 10802  001B42  EFA5  F00D         	goto	u6950
 10803  001B46                     u6951:
 10804  001B46  EF7F  F00D         	goto	l1046
 10805  001B4A                     u6950:
 10806  001B4A                     l1044:
 10807                           
 10808                           ; BSR set to: 0
 10809  001B4A  BD9B               	btfsc	___fladd@signs& (0+255),6,b
 10810  001B4C  EFAA  F00D         	goto	u6961
 10811  001B50  EFAC  F00D         	goto	u6960
 10812  001B54                     u6961:
 10813  001B54  EFEC  F00D         	goto	l5327
 10814  001B58                     u6960:
 10815  001B58                     
 10816                           ; BSR set to: 0
 10817  001B58  519D               	movf	___fladd@bexp& (0+255),w,b
 10818  001B5A  A4D8               	btfss	status,2,c
 10819  001B5C  EFB2  F00D         	goto	u6971
 10820  001B60  EFB4  F00D         	goto	u6970
 10821  001B64                     u6971:
 10822  001B64  EFBE  F00D         	goto	l5309
 10823  001B68                     u6970:
 10824  001B68                     
 10825                           ; BSR set to: 0
 10826  001B68  0E00               	movlw	0
 10827  001B6A  6F8F               	movwf	?___fladd& (0+255),b
 10828  001B6C  0E00               	movlw	0
 10829  001B6E  6F90               	movwf	(?___fladd+1)& (0+255),b
 10830  001B70  0E00               	movlw	0
 10831  001B72  6F91               	movwf	(?___fladd+2)& (0+255),b
 10832  001B74  0E00               	movlw	0
 10833  001B76  6F92               	movwf	(?___fladd+3)& (0+255),b
 10834  001B78  EF0D  F00F         	goto	l1053
 10835  001B7C                     l5309:
 10836                           
 10837                           ; BSR set to: 0
 10838  001B7C  5193               	movf	___fladd@a& (0+255),w,b
 10839  001B7E  278F               	addwf	___fladd@b& (0+255),f,b
 10840  001B80  5194               	movf	(___fladd@a+1)& (0+255),w,b
 10841  001B82  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
 10842  001B84  5195               	movf	(___fladd@a+2)& (0+255),w,b
 10843  001B86  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
 10844  001B88  5196               	movf	(___fladd@a+3)& (0+255),w,b
 10845  001B8A  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
 10846  001B8C                     
 10847                           ; BSR set to: 0
 10848  001B8C  A192               	btfss	(___fladd@b+3)& (0+255),0,b
 10849  001B8E  EFCB  F00D         	goto	u6981
 10850  001B92  EFCD  F00D         	goto	u6980
 10851  001B96                     u6981:
 10852  001B96  EF79  F00E         	goto	l5363
 10853  001B9A                     u6980:
 10854  001B9A                     
 10855                           ; BSR set to: 0
 10856  001B9A  A19E               	btfss	___fladd@grs& (0+255),0,b
 10857  001B9C  EFD2  F00D         	goto	u6991
 10858  001BA0  EFD4  F00D         	goto	u6990
 10859  001BA4                     u6991:
 10860  001BA4  EFDA  F00D         	goto	l5317
 10861  001BA8                     u6990:
 10862  001BA8                     
 10863                           ; BSR set to: 0
 10864  001BA8  90D8               	bcf	status,0,c
 10865  001BAA  319E               	rrcf	___fladd@grs& (0+255),w,b
 10866  001BAC  0901               	iorlw	1
 10867  001BAE  6F9E               	movwf	___fladd@grs& (0+255),b
 10868  001BB0  EFDC  F00D         	goto	l5319
 10869  001BB4                     l5317:
 10870                           
 10871                           ; BSR set to: 0
 10872  001BB4  90D8               	bcf	status,0,c
 10873  001BB6  339E               	rrcf	___fladd@grs& (0+255),f,b
 10874  001BB8                     l5319:
 10875                           
 10876                           ; BSR set to: 0
 10877  001BB8  A18F               	btfss	___fladd@b& (0+255),0,b
 10878  001BBA  EFE1  F00D         	goto	u7001
 10879  001BBE  EFE3  F00D         	goto	u7000
 10880  001BC2                     u7001:
 10881  001BC2  EFE4  F00D         	goto	l5323
 10882  001BC6                     u7000:
 10883  001BC6                     
 10884                           ; BSR set to: 0
 10885  001BC6  8F9E               	bsf	___fladd@grs& (0+255),7,b
 10886  001BC8                     l5323:
 10887                           
 10888                           ; BSR set to: 0
 10889  001BC8  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
 10890  001BCA  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
 10891  001BCC  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
 10892  001BCE  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
 10893  001BD0  338F               	rrcf	___fladd@b& (0+255),f,b
 10894  001BD2                     
 10895                           ; BSR set to: 0
 10896  001BD2  2B9D               	incf	___fladd@bexp& (0+255),f,b
 10897  001BD4  EF79  F00E         	goto	l5363
 10898  001BD8                     l5327:
 10899                           
 10900                           ; BSR set to: 0
 10901  001BD8  5193               	movf	___fladd@a& (0+255),w,b
 10902  001BDA  5D8F               	subwf	___fladd@b& (0+255),w,b
 10903  001BDC  5194               	movf	(___fladd@a+1)& (0+255),w,b
 10904  001BDE  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
 10905  001BE0  5195               	movf	(___fladd@a+2)& (0+255),w,b
 10906  001BE2  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
 10907  001BE4  5192               	movf	(___fladd@b+3)& (0+255),w,b
 10908  001BE6  0A80               	xorlw	128
 10909  001BE8  6F97               	movwf	??___fladd& (0+255),b
 10910  001BEA  5196               	movf	(___fladd@a+3)& (0+255),w,b
 10911  001BEC  0A80               	xorlw	128
 10912  001BEE  5997               	subwfb	??___fladd& (0+255),w,b
 10913  001BF0  B0D8               	btfsc	status,0,c
 10914  001BF2  EFFD  F00D         	goto	u7011
 10915  001BF6  EFFF  F00D         	goto	u7010
 10916  001BFA                     u7011:
 10917  001BFA  EF2A  F00E         	goto	l5337
 10918  001BFE                     u7010:
 10919  001BFE                     
 10920                           ; BSR set to: 0
 10921  001BFE  518F               	movf	___fladd@b& (0+255),w,b
 10922  001C00  5D93               	subwf	___fladd@a& (0+255),w,b
 10923  001C02  6F97               	movwf	??___fladd& (0+255),b
 10924  001C04  5190               	movf	(___fladd@b+1)& (0+255),w,b
 10925  001C06  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
 10926  001C08  6F98               	movwf	(??___fladd+1)& (0+255),b
 10927  001C0A  5191               	movf	(___fladd@b+2)& (0+255),w,b
 10928  001C0C  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
 10929  001C0E  6F99               	movwf	(??___fladd+2)& (0+255),b
 10930  001C10  5192               	movf	(___fladd@b+3)& (0+255),w,b
 10931  001C12  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
 10932  001C14  6F9A               	movwf	(??___fladd+3)& (0+255),b
 10933  001C16  0EFF               	movlw	255
 10934  001C18  2597               	addwf	??___fladd& (0+255),w,b
 10935  001C1A  6F8F               	movwf	___fladd@b& (0+255),b
 10936  001C1C  0EFF               	movlw	255
 10937  001C1E  2198               	addwfc	(??___fladd+1)& (0+255),w,b
 10938  001C20  6F90               	movwf	(___fladd@b+1)& (0+255),b
 10939  001C22  0EFF               	movlw	255
 10940  001C24  2199               	addwfc	(??___fladd+2)& (0+255),w,b
 10941  001C26  6F91               	movwf	(___fladd@b+2)& (0+255),b
 10942  001C28  0EFF               	movlw	255
 10943  001C2A  219A               	addwfc	(??___fladd+3)& (0+255),w,b
 10944  001C2C  6F92               	movwf	(___fladd@b+3)& (0+255),b
 10945  001C2E  0E80               	movlw	128
 10946  001C30  1B9B               	xorwf	___fladd@signs& (0+255),f,b
 10947  001C32                     
 10948                           ; BSR set to: 0
 10949  001C32  6D9E               	negf	___fladd@grs& (0+255),b
 10950  001C34                     
 10951                           ; BSR set to: 0
 10952  001C34  519E               	movf	___fladd@grs& (0+255),w,b
 10953  001C36  A4D8               	btfss	status,2,c
 10954  001C38  EF20  F00E         	goto	u7021
 10955  001C3C  EF22  F00E         	goto	u7020
 10956  001C40                     u7021:
 10957  001C40  EF32  F00E         	goto	l1061
 10958  001C44                     u7020:
 10959  001C44                     
 10960                           ; BSR set to: 0
 10961  001C44  0E01               	movlw	1
 10962  001C46  278F               	addwf	___fladd@b& (0+255),f,b
 10963  001C48  0E00               	movlw	0
 10964  001C4A  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
 10965  001C4C  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
 10966  001C4E  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
 10967  001C50  EF32  F00E         	goto	l1061
 10968  001C54                     l5337:
 10969                           
 10970                           ; BSR set to: 0
 10971  001C54  5193               	movf	___fladd@a& (0+255),w,b
 10972  001C56  5F8F               	subwf	___fladd@b& (0+255),f,b
 10973  001C58  5194               	movf	(___fladd@a+1)& (0+255),w,b
 10974  001C5A  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
 10975  001C5C  5195               	movf	(___fladd@a+2)& (0+255),w,b
 10976  001C5E  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
 10977  001C60  5196               	movf	(___fladd@a+3)& (0+255),w,b
 10978  001C62  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
 10979  001C64                     l1061:
 10980                           
 10981                           ; BSR set to: 0
 10982  001C64  518F               	movf	___fladd@b& (0+255),w,b
 10983  001C66  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
 10984  001C68  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
 10985  001C6A  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
 10986  001C6C  A4D8               	btfss	status,2,c
 10987  001C6E  EF3B  F00E         	goto	u7031
 10988  001C72  EF3D  F00E         	goto	u7030
 10989  001C76                     u7031:
 10990  001C76  EF72  F00E         	goto	l5361
 10991  001C7A                     u7030:
 10992  001C7A                     
 10993                           ; BSR set to: 0
 10994  001C7A  519E               	movf	___fladd@grs& (0+255),w,b
 10995  001C7C  A4D8               	btfss	status,2,c
 10996  001C7E  EF43  F00E         	goto	u7041
 10997  001C82  EF45  F00E         	goto	u7040
 10998  001C86                     u7041:
 10999  001C86  EF72  F00E         	goto	l5361
 11000  001C8A                     u7040:
 11001  001C8A                     
 11002                           ; BSR set to: 0
 11003  001C8A  0E00               	movlw	0
 11004  001C8C  6F8F               	movwf	?___fladd& (0+255),b
 11005  001C8E  0E00               	movlw	0
 11006  001C90  6F90               	movwf	(?___fladd+1)& (0+255),b
 11007  001C92  0E00               	movlw	0
 11008  001C94  6F91               	movwf	(?___fladd+2)& (0+255),b
 11009  001C96  0E00               	movlw	0
 11010  001C98  6F92               	movwf	(?___fladd+3)& (0+255),b
 11011  001C9A  EF0D  F00F         	goto	l1053
 11012  001C9E                     l5345:
 11013                           
 11014                           ; BSR set to: 0
 11015  001C9E  90D8               	bcf	status,0,c
 11016  001CA0  378F               	rlcf	___fladd@b& (0+255),f,b
 11017  001CA2  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
 11018  001CA4  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
 11019  001CA6  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
 11020  001CA8                     
 11021                           ; BSR set to: 0
 11022  001CA8  AF9E               	btfss	___fladd@grs& (0+255),7,b
 11023  001CAA  EF59  F00E         	goto	u7051
 11024  001CAE  EF5B  F00E         	goto	u7050
 11025  001CB2                     u7051:
 11026  001CB2  EF5C  F00E         	goto	l5351
 11027  001CB6                     u7050:
 11028  001CB6                     
 11029                           ; BSR set to: 0
 11030  001CB6  818F               	bsf	___fladd@b& (0+255),0,b
 11031  001CB8                     l5351:
 11032                           
 11033                           ; BSR set to: 0
 11034  001CB8  A19E               	btfss	___fladd@grs& (0+255),0,b
 11035  001CBA  EF61  F00E         	goto	u7061
 11036  001CBE  EF63  F00E         	goto	u7060
 11037  001CC2                     u7061:
 11038  001CC2  EF67  F00E         	goto	l5355
 11039  001CC6                     u7060:
 11040  001CC6                     
 11041                           ; BSR set to: 0
 11042  001CC6  80D8               	bsf	status,0,c
 11043  001CC8  379E               	rlcf	___fladd@grs& (0+255),f,b
 11044  001CCA  EF69  F00E         	goto	l5357
 11045  001CCE                     l5355:
 11046                           
 11047                           ; BSR set to: 0
 11048  001CCE  90D8               	bcf	status,0,c
 11049  001CD0  379E               	rlcf	___fladd@grs& (0+255),f,b
 11050  001CD2                     l5357:
 11051                           
 11052                           ; BSR set to: 0
 11053  001CD2  519D               	movf	___fladd@bexp& (0+255),w,b
 11054  001CD4  B4D8               	btfsc	status,2,c
 11055  001CD6  EF6F  F00E         	goto	u7071
 11056  001CDA  EF71  F00E         	goto	u7070
 11057  001CDE                     u7071:
 11058  001CDE  EF72  F00E         	goto	l5361
 11059  001CE2                     u7070:
 11060  001CE2                     
 11061                           ; BSR set to: 0
 11062  001CE2  079D               	decf	___fladd@bexp& (0+255),f,b
 11063  001CE4                     l5361:
 11064                           
 11065                           ; BSR set to: 0
 11066  001CE4  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
 11067  001CE6  EF77  F00E         	goto	u7081
 11068  001CEA  EF79  F00E         	goto	u7080
 11069  001CEE                     u7081:
 11070  001CEE  EF4F  F00E         	goto	l5345
 11071  001CF2                     u7080:
 11072  001CF2                     l5363:
 11073                           
 11074                           ; BSR set to: 0
 11075  001CF2  0E00               	movlw	0
 11076  001CF4  6F9C               	movwf	___fladd@aexp& (0+255),b
 11077  001CF6                     
 11078                           ; BSR set to: 0
 11079  001CF6  AF9E               	btfss	___fladd@grs& (0+255),7,b
 11080  001CF8  EF80  F00E         	goto	u7091
 11081  001CFC  EF82  F00E         	goto	u7090
 11082  001D00                     u7091:
 11083  001D00  EF9A  F00E         	goto	l1070
 11084  001D04                     u7090:
 11085  001D04                     
 11086                           ; BSR set to: 0
 11087  001D04  C09E  F097         	movff	___fladd@grs,??___fladd
 11088  001D08  0E7F               	movlw	127
 11089  001D0A  1797               	andwf	??___fladd& (0+255),f,b
 11090  001D0C  B4D8               	btfsc	status,2,c
 11091  001D0E  EF8B  F00E         	goto	u7101
 11092  001D12  EF8D  F00E         	goto	u7100
 11093  001D16                     u7101:
 11094  001D16  EF91  F00E         	goto	l1071
 11095  001D1A                     u7100:
 11096  001D1A                     l5369:
 11097                           
 11098                           ; BSR set to: 0
 11099  001D1A  0E01               	movlw	1
 11100  001D1C  6F9C               	movwf	___fladd@aexp& (0+255),b
 11101  001D1E  EF9A  F00E         	goto	l1070
 11102  001D22                     l1071:
 11103                           
 11104                           ; BSR set to: 0
 11105  001D22  A18F               	btfss	___fladd@b& (0+255),0,b
 11106  001D24  EF96  F00E         	goto	u7111
 11107  001D28  EF98  F00E         	goto	u7110
 11108  001D2C                     u7111:
 11109  001D2C  EF9A  F00E         	goto	l1070
 11110  001D30                     u7110:
 11111  001D30  EF8D  F00E         	goto	l5369
 11112  001D34                     l1070:
 11113                           
 11114                           ; BSR set to: 0
 11115  001D34  519C               	movf	___fladd@aexp& (0+255),w,b
 11116  001D36  B4D8               	btfsc	status,2,c
 11117  001D38  EFA0  F00E         	goto	u7121
 11118  001D3C  EFA2  F00E         	goto	u7120
 11119  001D40                     u7121:
 11120  001D40  EFCD  F00E         	goto	l5381
 11121  001D44                     u7120:
 11122  001D44                     
 11123                           ; BSR set to: 0
 11124  001D44  0E01               	movlw	1
 11125  001D46  278F               	addwf	___fladd@b& (0+255),f,b
 11126  001D48  0E00               	movlw	0
 11127  001D4A  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
 11128  001D4C  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
 11129  001D4E  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
 11130  001D50                     
 11131                           ; BSR set to: 0
 11132  001D50  A192               	btfss	(___fladd@b+3)& (0+255),0,b
 11133  001D52  EFAD  F00E         	goto	u7131
 11134  001D56  EFAF  F00E         	goto	u7130
 11135  001D5A                     u7131:
 11136  001D5A  EFCD  F00E         	goto	l5381
 11137  001D5E                     u7130:
 11138  001D5E                     
 11139                           ; BSR set to: 0
 11140  001D5E  C08F  F097         	movff	___fladd@b,??___fladd
 11141  001D62  C090  F098         	movff	___fladd@b+1,??___fladd+1
 11142  001D66  C091  F099         	movff	___fladd@b+2,??___fladd+2
 11143  001D6A  C092  F09A         	movff	___fladd@b+3,??___fladd+3
 11144  001D6E  359A               	rlcf	(??___fladd+3)& (0+255),w,b
 11145  001D70  339A               	rrcf	(??___fladd+3)& (0+255),f,b
 11146  001D72  3399               	rrcf	(??___fladd+2)& (0+255),f,b
 11147  001D74  3398               	rrcf	(??___fladd+1)& (0+255),f,b
 11148  001D76  3397               	rrcf	??___fladd& (0+255),f,b
 11149  001D78  C097  F08F         	movff	??___fladd,___fladd@b
 11150  001D7C  C098  F090         	movff	??___fladd+1,___fladd@b+1
 11151  001D80  C099  F091         	movff	??___fladd+2,___fladd@b+2
 11152  001D84  C09A  F092         	movff	??___fladd+3,___fladd@b+3
 11153  001D88  299D               	incf	___fladd@bexp& (0+255),w,b
 11154  001D8A  B4D8               	btfsc	status,2,c
 11155  001D8C  EFCA  F00E         	goto	u7141
 11156  001D90  EFCC  F00E         	goto	u7140
 11157  001D94                     u7141:
 11158  001D94  EFCD  F00E         	goto	l5381
 11159  001D98                     u7140:
 11160  001D98                     
 11161                           ; BSR set to: 0
 11162  001D98  2B9D               	incf	___fladd@bexp& (0+255),f,b
 11163  001D9A                     l5381:
 11164                           
 11165                           ; BSR set to: 0
 11166  001D9A  299D               	incf	___fladd@bexp& (0+255),w,b
 11167  001D9C  B4D8               	btfsc	status,2,c
 11168  001D9E  EFD3  F00E         	goto	u7151
 11169  001DA2  EFD5  F00E         	goto	u7150
 11170  001DA6                     u7151:
 11171  001DA6  EFDD  F00E         	goto	l5385
 11172  001DAA                     u7150:
 11173  001DAA                     
 11174                           ; BSR set to: 0
 11175  001DAA  519D               	movf	___fladd@bexp& (0+255),w,b
 11176  001DAC  A4D8               	btfss	status,2,c
 11177  001DAE  EFDB  F00E         	goto	u7161
 11178  001DB2  EFDD  F00E         	goto	u7160
 11179  001DB6                     u7161:
 11180  001DB6  EFEF  F00E         	goto	l5389
 11181  001DBA                     u7160:
 11182  001DBA                     l5385:
 11183                           
 11184                           ; BSR set to: 0
 11185  001DBA  0E00               	movlw	0
 11186  001DBC  6F8F               	movwf	___fladd@b& (0+255),b
 11187  001DBE  0E00               	movlw	0
 11188  001DC0  6F90               	movwf	(___fladd@b+1)& (0+255),b
 11189  001DC2  0E00               	movlw	0
 11190  001DC4  6F91               	movwf	(___fladd@b+2)& (0+255),b
 11191  001DC6  0E00               	movlw	0
 11192  001DC8  6F92               	movwf	(___fladd@b+3)& (0+255),b
 11193  001DCA  519D               	movf	___fladd@bexp& (0+255),w,b
 11194  001DCC  A4D8               	btfss	status,2,c
 11195  001DCE  EFEB  F00E         	goto	u7171
 11196  001DD2  EFED  F00E         	goto	u7170
 11197  001DD6                     u7171:
 11198  001DD6  EFEF  F00E         	goto	l5389
 11199  001DDA                     u7170:
 11200  001DDA                     
 11201                           ; BSR set to: 0
 11202  001DDA  0E00               	movlw	0
 11203  001DDC  6F9B               	movwf	___fladd@signs& (0+255),b
 11204  001DDE                     l5389:
 11205                           
 11206                           ; BSR set to: 0
 11207  001DDE  A19D               	btfss	___fladd@bexp& (0+255),0,b
 11208  001DE0  EFF4  F00E         	goto	u7181
 11209  001DE4  EFF6  F00E         	goto	u7180
 11210  001DE8                     u7181:
 11211  001DE8  EFF9  F00E         	goto	l5393
 11212  001DEC                     u7180:
 11213  001DEC                     
 11214                           ; BSR set to: 0
 11215  001DEC  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
 11216  001DEE  EFFA  F00E         	goto	l5395
 11217  001DF2                     l5393:
 11218                           
 11219                           ; BSR set to: 0
 11220  001DF2  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
 11221  001DF4                     l5395:
 11222                           
 11223                           ; BSR set to: 0
 11224  001DF4  90D8               	bcf	status,0,c
 11225  001DF6  319D               	rrcf	___fladd@bexp& (0+255),w,b
 11226  001DF8  6F92               	movwf	(___fladd@b+3)& (0+255),b
 11227  001DFA                     
 11228                           ; BSR set to: 0
 11229  001DFA  AF9B               	btfss	___fladd@signs& (0+255),7,b
 11230  001DFC  EF02  F00F         	goto	u7191
 11231  001E00  EF04  F00F         	goto	u7190
 11232  001E04                     u7191:
 11233  001E04  EF05  F00F         	goto	l5401
 11234  001E08                     u7190:
 11235  001E08                     
 11236                           ; BSR set to: 0
 11237  001E08  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
 11238  001E0A                     l5401:
 11239                           
 11240                           ; BSR set to: 0
 11241  001E0A  C08F  F08F         	movff	___fladd@b,?___fladd
 11242  001E0E  C090  F090         	movff	___fladd@b+1,?___fladd+1
 11243  001E12  C091  F091         	movff	___fladd@b+2,?___fladd+2
 11244  001E16  C092  F092         	movff	___fladd@b+3,?___fladd+3
 11245  001E1A                     l1053:
 11246                           
 11247                           ; BSR set to: 0
 11248  001E1A  0012               	return		;funcret
 11249  001E1C                     __end_of___fladd:
 11250                           	opt callstack 0
 11251                           
 11252 ;; *************** function _TempExternaMinima *****************
 11253 ;; Defined at:
 11254 ;;		line 175 in file "Proj_Principal.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, status,0, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11270 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11271 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11272 ;;Total ram usage:        1 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    5
 11275 ;; This function calls:
 11276 ;;		___flge
 11277 ;;		___xxtofl
 11278 ;; This function is called by:
 11279 ;;		_main
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text45
 11284  003F1E                     __ptext45:
 11285                           	opt callstack 0
 11286  003F1E                     _TempExternaMinima:
 11287                           	opt callstack 25
 11288  003F1E                     
 11289                           ;Proj_Principal.c: 176:     if (TempExternaAtual > TempExtAtiv) {
 11290  003F1E  C1A4  F068         	movff	_TempExtAtiv,___xxtofl@val
 11291  003F22  C1A5  F069         	movff	_TempExtAtiv+1,___xxtofl@val+1
 11292  003F26  0100               	movlb	0	; () banked
 11293  003F28  0E00               	movlw	0
 11294  003F2A  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 11295  003F2C  0EFF               	movlw	-1
 11296  003F2E  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
 11297  003F30  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
 11298  003F32  0E01               	movlw	1
 11299  003F34  EC79  F018         	call	___xxtofl
 11300  003F38  C068  F09F         	movff	?___xxtofl,___flge@ff1
 11301  003F3C  C069  F0A0         	movff	?___xxtofl+1,___flge@ff1+1
 11302  003F40  C06A  F0A1         	movff	?___xxtofl+2,___flge@ff1+2
 11303  003F44  C06B  F0A2         	movff	?___xxtofl+3,___flge@ff1+3
 11304  003F48  C100  F0A3         	movff	_TempExternaAtual,___flge@ff2
 11305  003F4C  C101  F0A4         	movff	_TempExternaAtual+1,___flge@ff2+1
 11306  003F50  C102  F0A5         	movff	_TempExternaAtual+2,___flge@ff2+2
 11307  003F54  C103  F0A6         	movff	_TempExternaAtual+3,___flge@ff2+3
 11308  003F58  EC76  F01C         	call	___flge	;wreg free
 11309  003F5C  0100               	movlb	0	; () banked
 11310  003F5E  B0D8               	btfsc	status,0,c
 11311  003F60  EFB4  F01F         	goto	u9601
 11312  003F64  EFB6  F01F         	goto	u9600
 11313  003F68                     u9601:
 11314  003F68  EFD4  F01F         	goto	l6783
 11315  003F6C                     u9600:
 11316  003F6C                     
 11317                           ; BSR set to: 0
 11318                           ;Proj_Principal.c: 177:         liberado = 1;
 11319  003F6C  0E00               	movlw	0
 11320  003F6E  6E36               	movwf	(_liberado+1)^0,c
 11321  003F70  0E01               	movlw	1
 11322  003F72  6E35               	movwf	_liberado^0,c
 11323  003F74                     
 11324                           ; BSR set to: 0
 11325                           ;Proj_Principal.c: 178:         PORTAbits.RA4 = !liberado;
 11326  003F74  5035               	movf	_liberado^0,w,c
 11327  003F76  1036               	iorwf	(_liberado+1)^0,w,c
 11328  003F78  B4D8               	btfsc	status,2,c
 11329  003F7A  EFC1  F01F         	goto	u9611
 11330  003F7E  EFC5  F01F         	goto	u9610
 11331  003F82                     u9611:
 11332  003F82  6BAB               	clrf	??_TempExternaMinima& (0+255),b
 11333  003F84  2BAB               	incf	??_TempExternaMinima& (0+255),f,b
 11334  003F86  EFC7  F01F         	goto	u9628
 11335  003F8A                     u9610:
 11336  003F8A  0100               	movlb	0	; () banked
 11337  003F8C  6BAB               	clrf	??_TempExternaMinima& (0+255),b
 11338  003F8E                     u9628:
 11339  003F8E  3BAB               	swapf	??_TempExternaMinima& (0+255),f,b
 11340  003F90  5080               	movf	128,w,c	;volatile
 11341  003F92  19AB               	xorwf	??_TempExternaMinima& (0+255),w,b
 11342  003F94  0BEF               	andlw	-17
 11343  003F96  19AB               	xorwf	??_TempExternaMinima& (0+255),w,b
 11344  003F98  6E80               	movwf	128,c	;volatile
 11345  003F9A                     
 11346                           ; BSR set to: 0
 11347                           ;Proj_Principal.c: 179:         PORTAbits.RA5 = liberado;
 11348  003F9A  B035               	btfsc	_liberado^0,0,c
 11349  003F9C  D002               	bra	u9635
 11350  003F9E  9A80               	bcf	128,5,c	;volatile
 11351  003FA0  D001               	bra	u9636
 11352  003FA2                     u9635:
 11353  003FA2  8A80               	bsf	128,5,c	;volatile
 11354  003FA4                     u9636:
 11355                           
 11356                           ;Proj_Principal.c: 180:     } else {
 11357  003FA4  EFF0  F01F         	goto	l217
 11358  003FA8                     l6783:
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;Proj_Principal.c: 181:         liberado = 0;
 11362  003FA8  0E00               	movlw	0
 11363  003FAA  6E36               	movwf	(_liberado+1)^0,c
 11364  003FAC  0E00               	movlw	0
 11365  003FAE  6E35               	movwf	_liberado^0,c
 11366  003FB0                     
 11367                           ; BSR set to: 0
 11368                           ;Proj_Principal.c: 182:         PORTAbits.RA4 = !liberado;
 11369  003FB0  5035               	movf	_liberado^0,w,c
 11370  003FB2  1036               	iorwf	(_liberado+1)^0,w,c
 11371  003FB4  B4D8               	btfsc	status,2,c
 11372  003FB6  EFDF  F01F         	goto	u9641
 11373  003FBA  EFE3  F01F         	goto	u9640
 11374  003FBE                     u9641:
 11375  003FBE  6BAB               	clrf	??_TempExternaMinima& (0+255),b
 11376  003FC0  2BAB               	incf	??_TempExternaMinima& (0+255),f,b
 11377  003FC2  EFE5  F01F         	goto	u9658
 11378  003FC6                     u9640:
 11379  003FC6  0100               	movlb	0	; () banked
 11380  003FC8  6BAB               	clrf	??_TempExternaMinima& (0+255),b
 11381  003FCA                     u9658:
 11382  003FCA  3BAB               	swapf	??_TempExternaMinima& (0+255),f,b
 11383  003FCC  5080               	movf	128,w,c	;volatile
 11384  003FCE  19AB               	xorwf	??_TempExternaMinima& (0+255),w,b
 11385  003FD0  0BEF               	andlw	-17
 11386  003FD2  19AB               	xorwf	??_TempExternaMinima& (0+255),w,b
 11387  003FD4  6E80               	movwf	128,c	;volatile
 11388  003FD6                     
 11389                           ; BSR set to: 0
 11390                           ;Proj_Principal.c: 183:         PORTAbits.RA5 = liberado;
 11391  003FD6  B035               	btfsc	_liberado^0,0,c
 11392  003FD8  D002               	bra	u9665
 11393  003FDA  9A80               	bcf	128,5,c	;volatile
 11394  003FDC  D001               	bra	u9666
 11395  003FDE                     u9665:
 11396  003FDE  8A80               	bsf	128,5,c	;volatile
 11397  003FE0                     u9666:
 11398  003FE0                     l217:
 11399  003FE0  0012               	return		;funcret
 11400  003FE2                     __end_of_TempExternaMinima:
 11401                           	opt callstack 0
 11402                           
 11403 ;; *************** function ___xxtofl *****************
 11404 ;; Defined at:
 11405 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  sign            1    wreg     unsigned char 
 11408 ;;  val             4    8[BANK0 ] long 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  sign            1   16[BANK0 ] unsigned char 
 11411 ;;  arg             4   18[BANK0 ] unsigned long 
 11412 ;;  exp             1   17[BANK0 ] unsigned char 
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  4    8[BANK0 ] unsigned char 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, status,0
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11422 ;;      Params:         0       4       0       0       0       0       0       0       0
 11423 ;;      Locals:         0       6       0       0       0       0       0       0       0
 11424 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11425 ;;      Totals:         0      14       0       0       0       0       0       0       0
 11426 ;;Total ram usage:       14 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    4
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_letemp
 11433 ;;		_compTemp
 11434 ;;		_TempExternaMinima
 11435 ;;		_USART_Init
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text46
 11440  0030F2                     __ptext46:
 11441                           	opt callstack 0
 11442  0030F2                     ___xxtofl:
 11443                           	opt callstack 25
 11444                           
 11445                           ;incstack = 0
 11446                           ;___xxtofl@sign stored from wreg
 11447  0030F2  0100               	movlb	0	; () banked
 11448  0030F4  6F70               	movwf	___xxtofl@sign& (0+255),b
 11449  0030F6  0100               	movlb	0	; () banked
 11450  0030F8  5170               	movf	___xxtofl@sign& (0+255),w,b
 11451  0030FA  B4D8               	btfsc	status,2,c
 11452  0030FC  EF82  F018         	goto	u9481
 11453  003100  EF84  F018         	goto	u9480
 11454  003104                     u9481:
 11455  003104  EFA6  F018         	goto	l1171
 11456  003108                     u9480:
 11457  003108                     
 11458                           ; BSR set to: 0
 11459  003108  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11460  00310A  EF8B  F018         	goto	u9490
 11461  00310E  EF89  F018         	goto	u9491
 11462  003112                     u9491:
 11463  003112  EFA6  F018         	goto	l1171
 11464  003116                     u9490:
 11465  003116                     
 11466                           ; BSR set to: 0
 11467  003116  C068  F06C         	movff	___xxtofl@val,??___xxtofl
 11468  00311A  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
 11469  00311E  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
 11470  003122  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
 11471  003126  1F6C               	comf	??___xxtofl& (0+255),f,b
 11472  003128  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
 11473  00312A  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
 11474  00312C  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
 11475  00312E  2B6C               	incf	??___xxtofl& (0+255),f,b
 11476  003130  0E00               	movlw	0
 11477  003132  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11478  003134  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11479  003136  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11480  003138  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
 11481  00313C  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
 11482  003140  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
 11483  003144  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
 11484  003148  EFAE  F018         	goto	l6663
 11485  00314C                     l1171:
 11486                           
 11487                           ; BSR set to: 0
 11488  00314C  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
 11489  003150  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11490  003154  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11491  003158  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11492  00315C                     l6663:
 11493                           
 11494                           ; BSR set to: 0
 11495  00315C  5168               	movf	___xxtofl@val& (0+255),w,b
 11496  00315E  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11497  003160  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11498  003162  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11499  003164  A4D8               	btfss	status,2,c
 11500  003166  EFB7  F018         	goto	u9501
 11501  00316A  EFB9  F018         	goto	u9500
 11502  00316E                     u9501:
 11503  00316E  EFC3  F018         	goto	l6669
 11504  003172                     u9500:
 11505  003172                     
 11506                           ; BSR set to: 0
 11507  003172  0E00               	movlw	0
 11508  003174  6F68               	movwf	?___xxtofl& (0+255),b
 11509  003176  0E00               	movlw	0
 11510  003178  6F69               	movwf	(?___xxtofl+1)& (0+255),b
 11511  00317A  0E00               	movlw	0
 11512  00317C  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
 11513  00317E  0E00               	movlw	0
 11514  003180  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
 11515  003182  EF54  F019         	goto	l1174
 11516  003186                     l6669:
 11517                           
 11518                           ; BSR set to: 0
 11519  003186  0E96               	movlw	150
 11520  003188  6F71               	movwf	___xxtofl@exp& (0+255),b
 11521  00318A  EFCD  F018         	goto	l6673
 11522  00318E                     l6671:
 11523                           
 11524                           ; BSR set to: 0
 11525  00318E  2B71               	incf	___xxtofl@exp& (0+255),f,b
 11526  003190  90D8               	bcf	status,0,c
 11527  003192  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11528  003194  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11529  003196  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11530  003198  3372               	rrcf	___xxtofl@arg& (0+255),f,b
 11531  00319A                     l6673:
 11532                           
 11533                           ; BSR set to: 0
 11534  00319A  0E00               	movlw	0
 11535  00319C  1572               	andwf	___xxtofl@arg& (0+255),w,b
 11536  00319E  6F6C               	movwf	??___xxtofl& (0+255),b
 11537  0031A0  0E00               	movlw	0
 11538  0031A2  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11539  0031A4  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
 11540  0031A6  0E00               	movlw	0
 11541  0031A8  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11542  0031AA  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
 11543  0031AC  0EFE               	movlw	254
 11544  0031AE  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11545  0031B0  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
 11546  0031B2  516C               	movf	??___xxtofl& (0+255),w,b
 11547  0031B4  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11548  0031B6  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11549  0031B8  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11550  0031BA  A4D8               	btfss	status,2,c
 11551  0031BC  EFE2  F018         	goto	u9511
 11552  0031C0  EFE4  F018         	goto	u9510
 11553  0031C4                     u9511:
 11554  0031C4  EFC7  F018         	goto	l6671
 11555  0031C8                     u9510:
 11556  0031C8  EFF2  F018         	goto	l1178
 11557  0031CC                     l6675:
 11558                           
 11559                           ; BSR set to: 0
 11560  0031CC  2B71               	incf	___xxtofl@exp& (0+255),f,b
 11561  0031CE                     
 11562                           ; BSR set to: 0
 11563  0031CE  0E01               	movlw	1
 11564  0031D0  2772               	addwf	___xxtofl@arg& (0+255),f,b
 11565  0031D2  0E00               	movlw	0
 11566  0031D4  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11567  0031D6  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11568  0031D8  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11569  0031DA                     
 11570                           ; BSR set to: 0
 11571  0031DA  90D8               	bcf	status,0,c
 11572  0031DC  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11573  0031DE  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11574  0031E0  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11575  0031E2  3372               	rrcf	___xxtofl@arg& (0+255),f,b
 11576  0031E4                     l1178:
 11577                           
 11578                           ; BSR set to: 0
 11579  0031E4  0E00               	movlw	0
 11580  0031E6  1572               	andwf	___xxtofl@arg& (0+255),w,b
 11581  0031E8  6F6C               	movwf	??___xxtofl& (0+255),b
 11582  0031EA  0E00               	movlw	0
 11583  0031EC  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11584  0031EE  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
 11585  0031F0  0E00               	movlw	0
 11586  0031F2  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11587  0031F4  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
 11588  0031F6  0EFF               	movlw	255
 11589  0031F8  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11590  0031FA  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
 11591  0031FC  516C               	movf	??___xxtofl& (0+255),w,b
 11592  0031FE  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11593  003200  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11594  003202  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11595  003204  A4D8               	btfss	status,2,c
 11596  003206  EF07  F019         	goto	u9521
 11597  00320A  EF09  F019         	goto	u9520
 11598  00320E                     u9521:
 11599  00320E  EFE6  F018         	goto	l6675
 11600  003212                     u9520:
 11601  003212  EF11  F019         	goto	l6683
 11602  003216                     l6681:
 11603                           
 11604                           ; BSR set to: 0
 11605  003216  0771               	decf	___xxtofl@exp& (0+255),f,b
 11606  003218  90D8               	bcf	status,0,c
 11607  00321A  3772               	rlcf	___xxtofl@arg& (0+255),f,b
 11608  00321C  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11609  00321E  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11610  003220  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11611  003222                     l6683:
 11612                           
 11613                           ; BSR set to: 0
 11614  003222  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11615  003224  EF16  F019         	goto	u9531
 11616  003228  EF18  F019         	goto	u9530
 11617  00322C                     u9531:
 11618  00322C  EF20  F019         	goto	l1185
 11619  003230                     u9530:
 11620  003230                     
 11621                           ; BSR set to: 0
 11622  003230  0E02               	movlw	2
 11623  003232  6171               	cpfslt	___xxtofl@exp& (0+255),b
 11624  003234  EF1E  F019         	goto	u9541
 11625  003238  EF20  F019         	goto	u9540
 11626  00323C                     u9541:
 11627  00323C  EF0B  F019         	goto	l6681
 11628  003240                     u9540:
 11629  003240                     l1185:
 11630                           
 11631                           ; BSR set to: 0
 11632  003240  B171               	btfsc	___xxtofl@exp& (0+255),0,b
 11633  003242  EF25  F019         	goto	u9551
 11634  003246  EF27  F019         	goto	u9550
 11635  00324A                     u9551:
 11636  00324A  EF28  F019         	goto	l6689
 11637  00324E                     u9550:
 11638  00324E                     
 11639                           ; BSR set to: 0
 11640  00324E  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 11641  003250                     l6689:
 11642                           
 11643                           ; BSR set to: 0
 11644  003250  90D8               	bcf	status,0,c
 11645  003252  3371               	rrcf	___xxtofl@exp& (0+255),f,b
 11646  003254                     
 11647                           ; BSR set to: 0
 11648  003254  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
 11649  003258  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
 11650  00325A  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
 11651  00325C  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
 11652  00325E  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
 11653  003262  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
 11654  003264  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
 11655  003266  6B6C               	clrf	??___xxtofl& (0+255),b
 11656  003268  516C               	movf	??___xxtofl& (0+255),w,b
 11657  00326A  1372               	iorwf	___xxtofl@arg& (0+255),f,b
 11658  00326C  516D               	movf	(??___xxtofl+1)& (0+255),w,b
 11659  00326E  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11660  003270  516E               	movf	(??___xxtofl+2)& (0+255),w,b
 11661  003272  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11662  003274  516F               	movf	(??___xxtofl+3)& (0+255),w,b
 11663  003276  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11664  003278                     
 11665                           ; BSR set to: 0
 11666  003278  5170               	movf	___xxtofl@sign& (0+255),w,b
 11667  00327A  B4D8               	btfsc	status,2,c
 11668  00327C  EF42  F019         	goto	u9561
 11669  003280  EF44  F019         	goto	u9560
 11670  003284                     u9561:
 11671  003284  EF4C  F019         	goto	l6699
 11672  003288                     u9560:
 11673  003288                     
 11674                           ; BSR set to: 0
 11675  003288  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11676  00328A  EF4B  F019         	goto	u9570
 11677  00328E  EF49  F019         	goto	u9571
 11678  003292                     u9571:
 11679  003292  EF4C  F019         	goto	l6699
 11680  003296                     u9570:
 11681  003296                     
 11682                           ; BSR set to: 0
 11683  003296  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11684  003298                     l6699:
 11685                           
 11686                           ; BSR set to: 0
 11687  003298  C072  F068         	movff	___xxtofl@arg,?___xxtofl
 11688  00329C  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
 11689  0032A0  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
 11690  0032A4  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
 11691  0032A8                     l1174:
 11692                           
 11693                           ; BSR set to: 0
 11694  0032A8  0012               	return		;funcret
 11695  0032AA                     __end_of___xxtofl:
 11696                           	opt callstack 0
 11697                           
 11698 ;; *************** function ___flge *****************
 11699 ;; Defined at:
 11700 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  ff1             4   63[BANK0 ] unsigned char 
 11703 ;;  ff2             4   67[BANK0 ] unsigned char 
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;		None
 11706 ;; Return value:  Size  Location     Type
 11707 ;;		None               void
 11708 ;; Registers used:
 11709 ;;		wreg, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11715 ;;      Params:         0       8       0       0       0       0       0       0       0
 11716 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11717 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11718 ;;      Totals:         0      12       0       0       0       0       0       0       0
 11719 ;;Total ram usage:       12 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; Hardware stack levels required when called:    4
 11722 ;; This function calls:
 11723 ;;		Nothing
 11724 ;; This function is called by:
 11725 ;;		_compTemp
 11726 ;;		_TempExternaMinima
 11727 ;;		_efgtoa
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text47
 11732  0038EC                     __ptext47:
 11733                           	opt callstack 0
 11734  0038EC                     ___flge:
 11735                           	opt callstack 21
 11736  0038EC  0E00               	movlw	0
 11737  0038EE  0100               	movlb	0	; () banked
 11738  0038F0  159F               	andwf	___flge@ff1& (0+255),w,b
 11739  0038F2  6FA7               	movwf	??___flge& (0+255),b
 11740  0038F4  0E00               	movlw	0
 11741  0038F6  15A0               	andwf	(___flge@ff1+1)& (0+255),w,b
 11742  0038F8  6FA8               	movwf	(??___flge+1)& (0+255),b
 11743  0038FA  0E80               	movlw	128
 11744  0038FC  15A1               	andwf	(___flge@ff1+2)& (0+255),w,b
 11745  0038FE  6FA9               	movwf	(??___flge+2)& (0+255),b
 11746  003900  0E7F               	movlw	127
 11747  003902  15A2               	andwf	(___flge@ff1+3)& (0+255),w,b
 11748  003904  6FAA               	movwf	(??___flge+3)& (0+255),b
 11749  003906  51A7               	movf	??___flge& (0+255),w,b
 11750  003908  11A8               	iorwf	(??___flge+1)& (0+255),w,b
 11751  00390A  11A9               	iorwf	(??___flge+2)& (0+255),w,b
 11752  00390C  11AA               	iorwf	(??___flge+3)& (0+255),w,b
 11753  00390E  A4D8               	btfss	status,2,c
 11754  003910  EF8C  F01C         	goto	u8191
 11755  003914  EF8E  F01C         	goto	u8190
 11756  003918                     u8191:
 11757  003918  EF96  F01C         	goto	l5959
 11758  00391C                     u8190:
 11759  00391C                     
 11760                           ; BSR set to: 0
 11761  00391C  0E00               	movlw	0
 11762  00391E  6F9F               	movwf	___flge@ff1& (0+255),b
 11763  003920  0E00               	movlw	0
 11764  003922  6FA0               	movwf	(___flge@ff1+1)& (0+255),b
 11765  003924  0E00               	movlw	0
 11766  003926  6FA1               	movwf	(___flge@ff1+2)& (0+255),b
 11767  003928  0E00               	movlw	0
 11768  00392A  6FA2               	movwf	(___flge@ff1+3)& (0+255),b
 11769  00392C                     l5959:
 11770                           
 11771                           ; BSR set to: 0
 11772  00392C  0E00               	movlw	0
 11773  00392E  15A3               	andwf	___flge@ff2& (0+255),w,b
 11774  003930  6FA7               	movwf	??___flge& (0+255),b
 11775  003932  0E00               	movlw	0
 11776  003934  15A4               	andwf	(___flge@ff2+1)& (0+255),w,b
 11777  003936  6FA8               	movwf	(??___flge+1)& (0+255),b
 11778  003938  0E80               	movlw	128
 11779  00393A  15A5               	andwf	(___flge@ff2+2)& (0+255),w,b
 11780  00393C  6FA9               	movwf	(??___flge+2)& (0+255),b
 11781  00393E  0E7F               	movlw	127
 11782  003940  15A6               	andwf	(___flge@ff2+3)& (0+255),w,b
 11783  003942  6FAA               	movwf	(??___flge+3)& (0+255),b
 11784  003944  51A7               	movf	??___flge& (0+255),w,b
 11785  003946  11A8               	iorwf	(??___flge+1)& (0+255),w,b
 11786  003948  11A9               	iorwf	(??___flge+2)& (0+255),w,b
 11787  00394A  11AA               	iorwf	(??___flge+3)& (0+255),w,b
 11788  00394C  A4D8               	btfss	status,2,c
 11789  00394E  EFAB  F01C         	goto	u8201
 11790  003952  EFAD  F01C         	goto	u8200
 11791  003956                     u8201:
 11792  003956  EFB5  F01C         	goto	l5963
 11793  00395A                     u8200:
 11794  00395A                     
 11795                           ; BSR set to: 0
 11796  00395A  0E00               	movlw	0
 11797  00395C  6FA3               	movwf	___flge@ff2& (0+255),b
 11798  00395E  0E00               	movlw	0
 11799  003960  6FA4               	movwf	(___flge@ff2+1)& (0+255),b
 11800  003962  0E00               	movlw	0
 11801  003964  6FA5               	movwf	(___flge@ff2+2)& (0+255),b
 11802  003966  0E00               	movlw	0
 11803  003968  6FA6               	movwf	(___flge@ff2+3)& (0+255),b
 11804  00396A                     l5963:
 11805                           
 11806                           ; BSR set to: 0
 11807  00396A  AFA2               	btfss	(___flge@ff1+3)& (0+255),7,b
 11808  00396C  EFBA  F01C         	goto	u8211
 11809  003970  EFBC  F01C         	goto	u8210
 11810  003974                     u8211:
 11811  003974  EFC5  F01C         	goto	l5967
 11812  003978                     u8210:
 11813  003978                     
 11814                           ; BSR set to: 0
 11815  003978  6D9F               	negf	___flge@ff1& (0+255),b
 11816  00397A  1FA0               	comf	(___flge@ff1+1)& (0+255),f,b
 11817  00397C  B0D8               	btfsc	status,0,c
 11818  00397E  2BA0               	incf	(___flge@ff1+1)& (0+255),f,b
 11819  003980  1FA1               	comf	(___flge@ff1+2)& (0+255),f,b
 11820  003982  B0D8               	btfsc	status,0,c
 11821  003984  2BA1               	incf	(___flge@ff1+2)& (0+255),f,b
 11822  003986  0E80               	movlw	128
 11823  003988  57A2               	subfwb	(___flge@ff1+3)& (0+255),f,b
 11824  00398A                     l5967:
 11825                           
 11826                           ; BSR set to: 0
 11827  00398A  AFA6               	btfss	(___flge@ff2+3)& (0+255),7,b
 11828  00398C  EFCA  F01C         	goto	u8221
 11829  003990  EFCC  F01C         	goto	u8220
 11830  003994                     u8221:
 11831  003994  EFD5  F01C         	goto	l781
 11832  003998                     u8220:
 11833  003998                     
 11834                           ; BSR set to: 0
 11835  003998  6DA3               	negf	___flge@ff2& (0+255),b
 11836  00399A  1FA4               	comf	(___flge@ff2+1)& (0+255),f,b
 11837  00399C  B0D8               	btfsc	status,0,c
 11838  00399E  2BA4               	incf	(___flge@ff2+1)& (0+255),f,b
 11839  0039A0  1FA5               	comf	(___flge@ff2+2)& (0+255),f,b
 11840  0039A2  B0D8               	btfsc	status,0,c
 11841  0039A4  2BA5               	incf	(___flge@ff2+2)& (0+255),f,b
 11842  0039A6  0E80               	movlw	128
 11843  0039A8  57A6               	subfwb	(___flge@ff2+3)& (0+255),f,b
 11844  0039AA                     l781:
 11845                           
 11846                           ; BSR set to: 0
 11847  0039AA  0E00               	movlw	0
 11848  0039AC  1B9F               	xorwf	___flge@ff1& (0+255),f,b
 11849  0039AE  0E00               	movlw	0
 11850  0039B0  1BA0               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11851  0039B2  0E00               	movlw	0
 11852  0039B4  1BA1               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11853  0039B6  0E80               	movlw	128
 11854  0039B8  1BA2               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11855  0039BA  0E00               	movlw	0
 11856  0039BC  1BA3               	xorwf	___flge@ff2& (0+255),f,b
 11857  0039BE  0E00               	movlw	0
 11858  0039C0  1BA4               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11859  0039C2  0E00               	movlw	0
 11860  0039C4  1BA5               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11861  0039C6  0E80               	movlw	128
 11862  0039C8  1BA6               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11863  0039CA  51A3               	movf	___flge@ff2& (0+255),w,b
 11864  0039CC  5D9F               	subwf	___flge@ff1& (0+255),w,b
 11865  0039CE  51A4               	movf	(___flge@ff2+1)& (0+255),w,b
 11866  0039D0  59A0               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11867  0039D2  51A5               	movf	(___flge@ff2+2)& (0+255),w,b
 11868  0039D4  59A1               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11869  0039D6  51A6               	movf	(___flge@ff2+3)& (0+255),w,b
 11870  0039D8  59A2               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11871  0039DA  B0D8               	btfsc	status,0,c
 11872  0039DC  EFF2  F01C         	goto	u8231
 11873  0039E0  EFF4  F01C         	goto	u8230
 11874  0039E4                     u8231:
 11875  0039E4  EFF7  F01C         	goto	l5973
 11876  0039E8                     u8230:
 11877  0039E8                     
 11878                           ; BSR set to: 0
 11879  0039E8  90D8               	bcf	status,0,c
 11880  0039EA  EFF8  F01C         	goto	l786
 11881  0039EE                     l5973:
 11882                           
 11883                           ; BSR set to: 0
 11884  0039EE  80D8               	bsf	status,0,c
 11885  0039F0                     l786:
 11886                           
 11887                           ; BSR set to: 0
 11888  0039F0  0012               	return		;funcret
 11889  0039F2                     __end_of___flge:
 11890                           	opt callstack 0
 11891                           
 11892 ;; *************** function _LCD_Init *****************
 11893 ;; Defined at:
 11894 ;;		line 5 in file "LCD_16x2.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;		None
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0, cstack
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11908 ;;      Params:         0       0       0       0       0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11910 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11911 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11912 ;;Total ram usage:        0 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:    6
 11915 ;; This function calls:
 11916 ;;		_LCD_Command
 11917 ;;		_MSdelay
 11918 ;; This function is called by:
 11919 ;;		_main
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text48
 11924  0048D4                     __ptext48:
 11925                           	opt callstack 0
 11926  0048D4                     _LCD_Init:
 11927                           	opt callstack 24
 11928  0048D4                     
 11929                           ;LCD_16x2.c: 7:     TRISB = 0x00;
 11930  0048D4  0E00               	movlw	0
 11931  0048D6  6E93               	movwf	147,c	;volatile
 11932                           
 11933                           ;LCD_16x2.c: 8:     TRISD = 0x00;
 11934  0048D8  0E00               	movlw	0
 11935  0048DA  6E95               	movwf	149,c	;volatile
 11936  0048DC                     
 11937                           ;LCD_16x2.c: 9:     MSdelay(15);
 11938  0048DC  0E00               	movlw	0
 11939  0048DE  0100               	movlb	0	; () banked
 11940  0048E0  6F61               	movwf	(MSdelay@val+1)& (0+255),b
 11941  0048E2  0E0F               	movlw	15
 11942  0048E4  6F60               	movwf	MSdelay@val& (0+255),b
 11943  0048E6  ECB9  F023         	call	_MSdelay	;wreg free
 11944  0048EA                     
 11945                           ;LCD_16x2.c: 10:  LCD_Command(0x38);
 11946  0048EA  0E38               	movlw	56
 11947  0048EC  EC9D  F025         	call	_LCD_Command
 11948  0048F0                     
 11949                           ;LCD_16x2.c: 11:     LCD_Command(0x0c);
 11950  0048F0  0E0C               	movlw	12
 11951  0048F2  EC9D  F025         	call	_LCD_Command
 11952  0048F6                     
 11953                           ;LCD_16x2.c: 12:     LCD_Command(0x06);
 11954  0048F6  0E06               	movlw	6
 11955  0048F8  EC9D  F025         	call	_LCD_Command
 11956  0048FC                     
 11957                           ;LCD_16x2.c: 13:  LCD_Command(0x01);
 11958  0048FC  0E01               	movlw	1
 11959  0048FE  EC9D  F025         	call	_LCD_Command
 11960  004902                     
 11961                           ;LCD_16x2.c: 14:  MSdelay(2);
 11962  004902  0E00               	movlw	0
 11963  004904  0100               	movlb	0	; () banked
 11964  004906  6F61               	movwf	(MSdelay@val+1)& (0+255),b
 11965  004908  0E02               	movlw	2
 11966  00490A  6F60               	movwf	MSdelay@val& (0+255),b
 11967  00490C  ECB9  F023         	call	_MSdelay	;wreg free
 11968  004910  0012               	return		;funcret
 11969  004912                     __end_of_LCD_Init:
 11970                           	opt callstack 0
 11971                           
 11972 ;; *************** function _LCD_Command *****************
 11973 ;; Defined at:
 11974 ;;		line 23 in file "LCD_16x2.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;  cmd             1    wreg     unsigned char 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  cmd             1    6[BANK0 ] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0
 11989 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11991 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11992 ;;Total ram usage:        1 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    5
 11995 ;; This function calls:
 11996 ;;		_MSdelay
 11997 ;; This function is called by:
 11998 ;;		_LCD_Init
 11999 ;;		_LCD_Clear
 12000 ;;		_LCD_String_xy
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text49
 12005  004B3A                     __ptext49:
 12006                           	opt callstack 0
 12007  004B3A                     _LCD_Command:
 12008                           	opt callstack 23
 12009                           
 12010                           ;incstack = 0
 12011                           ;LCD_Command@cmd stored from wreg
 12012  004B3A  0100               	movlb	0	; () banked
 12013  004B3C  6F66               	movwf	LCD_Command@cmd& (0+255),b
 12014  004B3E                     
 12015                           ;LCD_16x2.c: 23: void LCD_Command(char cmd );LCD_16x2.c: 24: {;LCD_16x2.c: 25:  LATB= cm
      +                          d;
 12016  004B3E  C066  FF8A         	movff	LCD_Command@cmd,3978	;volatile
 12017  004B42                     
 12018                           ;LCD_16x2.c: 26:  LATD0 = 0;
 12019  004B42  908C               	bcf	3980,0,c	;volatile
 12020  004B44                     
 12021                           ;LCD_16x2.c: 27:  LATD1 = 1;
 12022  004B44  828C               	bsf	3980,1,c	;volatile
 12023  004B46                     
 12024                           ;LCD_16x2.c: 28:  MSdelay(1);
 12025  004B46  0E00               	movlw	0
 12026  004B48  0100               	movlb	0	; () banked
 12027  004B4A  6F61               	movwf	(MSdelay@val+1)& (0+255),b
 12028  004B4C  0E01               	movlw	1
 12029  004B4E  6F60               	movwf	MSdelay@val& (0+255),b
 12030  004B50  ECB9  F023         	call	_MSdelay	;wreg free
 12031  004B54                     
 12032                           ;LCD_16x2.c: 29:  LATD1 = 0;
 12033  004B54  928C               	bcf	3980,1,c	;volatile
 12034  004B56  0012               	return		;funcret
 12035  004B58                     __end_of_LCD_Command:
 12036                           	opt callstack 0
 12037                           
 12038 ;; *************** function _MSdelay *****************
 12039 ;; Defined at:
 12040 ;;		line 71 in file "LCD_16x2.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;  val             2    0[BANK0 ] unsigned int 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  j               2    4[BANK0 ] unsigned int 
 12045 ;;  i               2    2[BANK0 ] unsigned int 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12055 ;;      Params:         0       2       0       0       0       0       0       0       0
 12056 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12058 ;;      Totals:         0       6       0       0       0       0       0       0       0
 12059 ;;Total ram usage:        6 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    4
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_LCD_Init
 12066 ;;		_LCD_Clear
 12067 ;;		_LCD_Command
 12068 ;;		_LCD_Char
 12069 ;;		_main
 12070 ;;		_escreveLCD
 12071 ;; This function uses a non-reentrant model
 12072 ;;
 12073                           
 12074                           	psect	text50
 12075  004772                     __ptext50:
 12076                           	opt callstack 0
 12077  004772                     _MSdelay:
 12078                           	opt callstack 25
 12079  004772                     
 12080                           ;LCD_16x2.c: 71: void MSdelay(unsigned int val);LCD_16x2.c: 72: {;LCD_16x2.c: 73:      u
      +                          nsigned int i,j;;LCD_16x2.c: 74:         for(i=0;i<=val;i++)
 12081  004772  0E00               	movlw	0
 12082  004774  0100               	movlb	0	; () banked
 12083  004776  6F63               	movwf	(MSdelay@i+1)& (0+255),b
 12084  004778  0E00               	movlw	0
 12085  00477A  6F62               	movwf	MSdelay@i& (0+255),b
 12086  00477C  EFD3  F023         	goto	l6055
 12087  004780                     l6043:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;LCD_16x2.c: 75:             for(j=0;j<81;j++);
 12091  004780  0E00               	movlw	0
 12092  004782  6F65               	movwf	(MSdelay@j+1)& (0+255),b
 12093  004784  0E00               	movlw	0
 12094  004786  6F64               	movwf	MSdelay@j& (0+255),b
 12095  004788                     l6049:
 12096                           
 12097                           ; BSR set to: 0
 12098  004788  4B64               	infsnz	MSdelay@j& (0+255),f,b
 12099  00478A  2B65               	incf	(MSdelay@j+1)& (0+255),f,b
 12100  00478C                     
 12101                           ; BSR set to: 0
 12102  00478C  5165               	movf	(MSdelay@j+1)& (0+255),w,b
 12103  00478E  E109               	bnz	u8340
 12104  004790  0E51               	movlw	81
 12105  004792  5D64               	subwf	MSdelay@j& (0+255),w,b
 12106  004794  A0D8               	btfss	status,0,c
 12107  004796  EFCF  F023         	goto	u8341
 12108  00479A  EFD1  F023         	goto	u8340
 12109  00479E                     u8341:
 12110  00479E  EFC4  F023         	goto	l6049
 12111  0047A2                     u8340:
 12112  0047A2                     
 12113                           ; BSR set to: 0
 12114  0047A2  4B62               	infsnz	MSdelay@i& (0+255),f,b
 12115  0047A4  2B63               	incf	(MSdelay@i+1)& (0+255),f,b
 12116  0047A6                     l6055:
 12117                           
 12118                           ; BSR set to: 0
 12119  0047A6  5162               	movf	MSdelay@i& (0+255),w,b
 12120  0047A8  5D60               	subwf	MSdelay@val& (0+255),w,b
 12121  0047AA  5163               	movf	(MSdelay@i+1)& (0+255),w,b
 12122  0047AC  5961               	subwfb	(MSdelay@val+1)& (0+255),w,b
 12123  0047AE  B0D8               	btfsc	status,0,c
 12124  0047B0  EFDC  F023         	goto	u8351
 12125  0047B4  EFDE  F023         	goto	u8350
 12126  0047B8                     u8351:
 12127  0047B8  EFC0  F023         	goto	l6043
 12128  0047BC                     u8350:
 12129  0047BC                     
 12130                           ; BSR set to: 0
 12131  0047BC  0012               	return		;funcret
 12132  0047BE                     __end_of_MSdelay:
 12133                           	opt callstack 0
 12134                           
 12135 ;; *************** function _ADC_Init *****************
 12136 ;; Defined at:
 12137 ;;		line 4 in file "ADC.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;		None
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      void 
 12144 ;; Registers used:
 12145 ;;		wreg, status,2
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12151 ;;      Params:         0       0       0       0       0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12154 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12155 ;;Total ram usage:        0 bytes
 12156 ;; Hardware stack levels used:    1
 12157 ;; Hardware stack levels required when called:    4
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_main
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text51
 12166  004B84                     __ptext51:
 12167                           	opt callstack 0
 12168  004B84                     _ADC_Init:
 12169                           	opt callstack 26
 12170  004B84                     
 12171                           ;ADC.c: 5:     TRISA = 0xff;
 12172  004B84  6892               	setf	146,c	;volatile
 12173  004B86                     
 12174                           ;ADC.c: 6:     ADCON1 = 0x0e;
 12175  004B86  0E0E               	movlw	14
 12176  004B88  6EC1               	movwf	193,c	;volatile
 12177                           
 12178                           ;ADC.c: 7:     ADCON2 = 0x92;
 12179  004B8A  0E92               	movlw	146
 12180  004B8C  6EC0               	movwf	192,c	;volatile
 12181                           
 12182                           ;ADC.c: 8:     ADRESH = 0;
 12183  004B8E  0E00               	movlw	0
 12184  004B90  6EC4               	movwf	196,c	;volatile
 12185                           
 12186                           ;ADC.c: 9:     ADRESL = 0;
 12187  004B92  0E00               	movlw	0
 12188  004B94  6EC3               	movwf	195,c	;volatile
 12189  004B96  0012               	return		;funcret
 12190  004B98                     __end_of_ADC_Init:
 12191                           	opt callstack 0
 12192                           
 12193 ;; *************** function _ISR1 *****************
 12194 ;; Defined at:
 12195 ;;		line 60 in file "Proj_Principal.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;		None
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;  res             1   35[COMRAM] unsigned char 
 12200 ;; Return value:  Size  Location     Type
 12201 ;;                  1    wreg      void 
 12202 ;; Registers used:
 12203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12204 ;; Tracked objects:
 12205 ;;		On entry : 0/0
 12206 ;;		On exit  : 0/0
 12207 ;;		Unchanged: 0/0
 12208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12209 ;;      Params:         0       0       0       0       0       0       0       0       0
 12210 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12211 ;;      Temps:         10       0       0       0       0       0       0       0       0
 12212 ;;      Totals:        11       0       0       0       0       0       0       0       0
 12213 ;;Total ram usage:       11 bytes
 12214 ;; Hardware stack levels used:    1
 12215 ;; Hardware stack levels required when called:    3
 12216 ;; This function calls:
 12217 ;;		_mandatempext
 12218 ;;		_mandatempextativ
 12219 ;;		_mandatempideal
 12220 ;;		_mandatempint
 12221 ;;		_setatempexterna
 12222 ;;		_setatempinterna
 12223 ;; This function is called by:
 12224 ;;		Interrupt level 2
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	intcode
 12229  000008                     __pintcode:
 12230                           	opt callstack 0
 12231  000008                     _ISR1:
 12232                           	opt callstack 18
 12233                           
 12234                           ;incstack = 0
 12235  000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12236  00000A  ED79  F01D         	call	int_func,f	;refresh shadow registers
 12237                           
 12238                           	psect	intcode_body
 12239  003AF2                     __pintcode_body:
 12240                           	opt callstack 18
 12241  003AF2                     int_func:
 12242                           	opt callstack 18
 12243  003AF2  0006               	pop		; remove dummy address from shadow register refresh
 12244  003AF4  CFE1 F01A          	movff	fsr1l,??_ISR1
 12245  003AF8  CFE2 F01B          	movff	fsr1h,??_ISR1+1
 12246  003AFC  CFD9 F01C          	movff	fsr2l,??_ISR1+2
 12247  003B00  CFDA F01D          	movff	fsr2h,??_ISR1+3
 12248  003B04  CFF3 F01E          	movff	prodl,??_ISR1+4
 12249  003B08  CFF4 F01F          	movff	prodh,??_ISR1+5
 12250  003B0C  CFF6 F020          	movff	tblptrl,??_ISR1+6
 12251  003B10  CFF7 F021          	movff	tblptrh,??_ISR1+7
 12252  003B14  CFF8 F022          	movff	tblptru,??_ISR1+8
 12253  003B18  CFF5 F023          	movff	tablat,??_ISR1+9
 12254  003B1C                     
 12255                           ;Proj_Principal.c: 61:     if (RCIF) {
 12256  003B1C  AA9E               	btfss	3998,5,c	;volatile
 12257  003B1E  EF93  F01D         	goto	i2u665_41
 12258  003B22  EF95  F01D         	goto	i2u665_40
 12259  003B26                     i2u665_41:
 12260  003B26  EFE0  F01D         	goto	i2l152
 12261  003B2A                     i2u665_40:
 12262  003B2A                     i2l143:
 12263  003B2A  AA9E               	btfss	3998,5,c	;volatile
 12264  003B2C  EF9A  F01D         	goto	i2u666_41
 12265  003B30  EF9C  F01D         	goto	i2u666_40
 12266  003B34                     i2u666_41:
 12267  003B34  EF95  F01D         	goto	i2l143
 12268  003B38                     i2u666_40:
 12269  003B38                     
 12270                           ;Proj_Principal.c: 63:         char res = RCREG;
 12271  003B38  CFAE F024          	movff	4014,ISR1@res	;volatile
 12272  003B3C                     
 12273                           ;Proj_Principal.c: 64:         if (res == 'I') {
 12274  003B3C  0E49               	movlw	73
 12275  003B3E  1824               	xorwf	ISR1@res^0,w,c
 12276  003B40  A4D8               	btfss	status,2,c
 12277  003B42  EFA5  F01D         	goto	i2u667_41
 12278  003B46  EFA7  F01D         	goto	i2u667_40
 12279  003B4A                     i2u667_41:
 12280  003B4A  EFA9  F01D         	goto	i2l5107
 12281  003B4E                     i2u667_40:
 12282  003B4E                     
 12283                           ;Proj_Principal.c: 65:             setatempinterna();
 12284  003B4E  EC46  F021         	call	_setatempinterna	;wreg free
 12285  003B52                     i2l5107:
 12286                           
 12287                           ;Proj_Principal.c: 67:         if (res == 'E') {
 12288  003B52  0E45               	movlw	69
 12289  003B54  1824               	xorwf	ISR1@res^0,w,c
 12290  003B56  A4D8               	btfss	status,2,c
 12291  003B58  EFB0  F01D         	goto	i2u668_41
 12292  003B5C  EFB2  F01D         	goto	i2u668_40
 12293  003B60                     i2u668_41:
 12294  003B60  EFB4  F01D         	goto	i2l5111
 12295  003B64                     i2u668_40:
 12296  003B64                     
 12297                           ;Proj_Principal.c: 68:             setatempexterna();
 12298  003B64  EC7F  F021         	call	_setatempexterna	;wreg free
 12299  003B68                     i2l5111:
 12300                           
 12301                           ;Proj_Principal.c: 70:         if (res == 'R') {
 12302  003B68  0E52               	movlw	82
 12303  003B6A  1824               	xorwf	ISR1@res^0,w,c
 12304  003B6C  A4D8               	btfss	status,2,c
 12305  003B6E  EFBB  F01D         	goto	i2u669_41
 12306  003B72  EFBD  F01D         	goto	i2u669_40
 12307  003B76                     i2u669_41:
 12308  003B76  EFBF  F01D         	goto	i2l5115
 12309  003B7A                     i2u669_40:
 12310  003B7A                     
 12311                           ;Proj_Principal.c: 71:             mandatempint();
 12312  003B7A  ECD3  F025         	call	_mandatempint	;wreg free
 12313  003B7E                     i2l5115:
 12314                           
 12315                           ;Proj_Principal.c: 73:         if (res == 'F') {
 12316  003B7E  0E46               	movlw	70
 12317  003B80  1824               	xorwf	ISR1@res^0,w,c
 12318  003B82  A4D8               	btfss	status,2,c
 12319  003B84  EFC6  F01D         	goto	i2u670_41
 12320  003B88  EFC8  F01D         	goto	i2u670_40
 12321  003B8C                     i2u670_41:
 12322  003B8C  EFCA  F01D         	goto	i2l5119
 12323  003B90                     i2u670_40:
 12324  003B90                     
 12325                           ;Proj_Principal.c: 74:             mandatempext();
 12326  003B90  ECE8  F025         	call	_mandatempext	;wreg free
 12327  003B94                     i2l5119:
 12328                           
 12329                           ;Proj_Principal.c: 76:         if (res == 'L') {
 12330  003B94  0E4C               	movlw	76
 12331  003B96  1824               	xorwf	ISR1@res^0,w,c
 12332  003B98  A4D8               	btfss	status,2,c
 12333  003B9A  EFD1  F01D         	goto	i2u671_41
 12334  003B9E  EFD3  F01D         	goto	i2u671_40
 12335  003BA2                     i2u671_41:
 12336  003BA2  EFD5  F01D         	goto	i2l5123
 12337  003BA6                     i2u671_40:
 12338  003BA6                     
 12339                           ;Proj_Principal.c: 77:             mandatempideal();
 12340  003BA6  ECDA  F025         	call	_mandatempideal	;wreg free
 12341  003BAA                     i2l5123:
 12342                           
 12343                           ;Proj_Principal.c: 79:         if (res == 'T'){
 12344  003BAA  0E54               	movlw	84
 12345  003BAC  1824               	xorwf	ISR1@res^0,w,c
 12346  003BAE  A4D8               	btfss	status,2,c
 12347  003BB0  EFDC  F01D         	goto	i2u672_41
 12348  003BB4  EFDE  F01D         	goto	i2u672_40
 12349  003BB8                     i2u672_41:
 12350  003BB8  EFE0  F01D         	goto	i2l152
 12351  003BBC                     i2u672_40:
 12352  003BBC                     
 12353                           ;Proj_Principal.c: 80:             mandatempextativ();
 12354  003BBC  ECE1  F025         	call	_mandatempextativ	;wreg free
 12355  003BC0                     i2l152:
 12356  003BC0  C023  FFF5         	movff	??_ISR1+9,tablat
 12357  003BC4  C022  FFF8         	movff	??_ISR1+8,tblptru
 12358  003BC8  C021  FFF7         	movff	??_ISR1+7,tblptrh
 12359  003BCC  C020  FFF6         	movff	??_ISR1+6,tblptrl
 12360  003BD0  C01F  FFF4         	movff	??_ISR1+5,prodh
 12361  003BD4  C01E  FFF3         	movff	??_ISR1+4,prodl
 12362  003BD8  C01D  FFDA         	movff	??_ISR1+3,fsr2h
 12363  003BDC  C01C  FFD9         	movff	??_ISR1+2,fsr2l
 12364  003BE0  C01B  FFE2         	movff	??_ISR1+1,fsr1h
 12365  003BE4  C01A  FFE1         	movff	??_ISR1,fsr1l
 12366  003BE8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12367  003BEA  0011               	retfie		f
 12368  003BEC                     __end_of_ISR1:
 12369                           	opt callstack 0
 12370                           
 12371 ;; *************** function _setatempinterna *****************
 12372 ;; Defined at:
 12373 ;;		line 100 in file "Proj_Principal.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;		None
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  valor           3   22[COMRAM] unsigned char [3]
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0
 12388 ;;      Locals:         3       0       0       0       0       0       0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12390 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12391 ;;Total ram usage:        3 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:    2
 12394 ;; This function calls:
 12395 ;;		_EEPROM_WriteString
 12396 ;;		i2_atoi
 12397 ;; This function is called by:
 12398 ;;		_ISR1
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text53
 12403  00428C                     __ptext53:
 12404                           	opt callstack 0
 12405  00428C                     _setatempinterna:
 12406                           	opt callstack 18
 12407  00428C                     
 12408                           ;Proj_Principal.c: 101:     char valor[3];;Proj_Principal.c: 102:     PIE1bits.RCIE = 0;
 12409  00428C  9A9D               	bcf	157,5,c	;volatile
 12410  00428E                     i2l170:
 12411  00428E  A89E               	btfss	3998,4,c	;volatile
 12412  004290  EF4C  F021         	goto	i2u657_41
 12413  004294  EF4E  F021         	goto	i2u657_40
 12414  004298                     i2u657_41:
 12415  004298  EF47  F021         	goto	i2l170
 12416  00429C                     i2u657_40:
 12417  00429C                     i2l173:
 12418  00429C  AA9E               	btfss	3998,5,c	;volatile
 12419  00429E  EF53  F021         	goto	i2u658_41
 12420  0042A2  EF55  F021         	goto	i2u658_40
 12421  0042A6                     i2u658_41:
 12422  0042A6  EF4E  F021         	goto	i2l173
 12423  0042AA                     i2u658_40:
 12424  0042AA                     
 12425                           ;Proj_Principal.c: 105:     valor[0] = RCREG;
 12426  0042AA  CFAE F017          	movff	4014,setatempinterna@valor	;volatile
 12427  0042AE                     i2l176:
 12428  0042AE  A89E               	btfss	3998,4,c	;volatile
 12429  0042B0  EF5C  F021         	goto	i2u659_41
 12430  0042B4  EF5E  F021         	goto	i2u659_40
 12431  0042B8                     i2u659_41:
 12432  0042B8  EF57  F021         	goto	i2l176
 12433  0042BC                     i2u659_40:
 12434  0042BC                     i2l179:
 12435  0042BC  AA9E               	btfss	3998,5,c	;volatile
 12436  0042BE  EF63  F021         	goto	i2u660_41
 12437  0042C2  EF65  F021         	goto	i2u660_40
 12438  0042C6                     i2u660_41:
 12439  0042C6  EF5E  F021         	goto	i2l179
 12440  0042CA                     i2u660_40:
 12441  0042CA                     
 12442                           ;Proj_Principal.c: 108:     valor[1] = RCREG;
 12443  0042CA  CFAE F018          	movff	4014,setatempinterna@valor+1	;volatile
 12444  0042CE                     
 12445                           ;Proj_Principal.c: 109:     valor[2] = '\0';
 12446  0042CE  0E00               	movlw	0
 12447  0042D0  6E19               	movwf	(setatempinterna@valor+2)^0,c
 12448  0042D2                     
 12449                           ;Proj_Principal.c: 110:     EEPROM_WriteString(6, valor);
 12450  0042D2  0E00               	movlw	0
 12451  0042D4  6E05               	movwf	(EEPROM_WriteString@address+1)^0,c
 12452  0042D6  0E06               	movlw	6
 12453  0042D8  6E04               	movwf	EEPROM_WriteString@address^0,c
 12454  0042DA  0E17               	movlw	low setatempinterna@valor
 12455  0042DC  6E06               	movwf	EEPROM_WriteString@data^0,c
 12456  0042DE  0E00               	movlw	high setatempinterna@valor
 12457  0042E0  6E07               	movwf	(EEPROM_WriteString@data+1)^0,c
 12458  0042E2  EC89  F024         	call	_EEPROM_WriteString	;wreg free
 12459  0042E6                     
 12460                           ;Proj_Principal.c: 111:     TempIdealInt = atoi(valor);
 12461  0042E6  0E17               	movlw	low setatempinterna@valor
 12462  0042E8  6E08               	movwf	i2atoi@s^0,c
 12463  0042EA  0E00               	movlw	high setatempinterna@valor
 12464  0042EC  6E09               	movwf	(i2atoi@s+1)^0,c
 12465  0042EE  EC7D  F017         	call	i2_atoi	;wreg free
 12466  0042F2  C008  F1A6         	movff	?i2_atoi,_TempIdealInt
 12467  0042F6  C009  F1A7         	movff	?i2_atoi+1,_TempIdealInt+1
 12468  0042FA                     
 12469                           ;Proj_Principal.c: 112:     PIE1bits.RCIE = 1;
 12470  0042FA  8A9D               	bsf	157,5,c	;volatile
 12471  0042FC  0012               	return		;funcret
 12472  0042FE                     __end_of_setatempinterna:
 12473                           	opt callstack 0
 12474                           
 12475 ;; *************** function _setatempexterna *****************
 12476 ;; Defined at:
 12477 ;;		line 85 in file "Proj_Principal.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;		None
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  valor           3   22[COMRAM] unsigned char [3]
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      void 
 12484 ;; Registers used:
 12485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0
 12492 ;;      Locals:         3       0       0       0       0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12494 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12495 ;;Total ram usage:        3 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    2
 12498 ;; This function calls:
 12499 ;;		_EEPROM_WriteString
 12500 ;;		i2_atoi
 12501 ;; This function is called by:
 12502 ;;		_ISR1
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text54
 12507  0042FE                     __ptext54:
 12508                           	opt callstack 0
 12509  0042FE                     _setatempexterna:
 12510                           	opt callstack 18
 12511  0042FE                     
 12512                           ;Proj_Principal.c: 86:     char valor[3];;Proj_Principal.c: 87:     PIE1bits.RCIE = 0;
 12513  0042FE  9A9D               	bcf	157,5,c	;volatile
 12514  004300                     i2l155:
 12515  004300  A89E               	btfss	3998,4,c	;volatile
 12516  004302  EF85  F021         	goto	i2u661_41
 12517  004306  EF87  F021         	goto	i2u661_40
 12518  00430A                     i2u661_41:
 12519  00430A  EF80  F021         	goto	i2l155
 12520  00430E                     i2u661_40:
 12521  00430E                     i2l158:
 12522  00430E  AA9E               	btfss	3998,5,c	;volatile
 12523  004310  EF8C  F021         	goto	i2u662_41
 12524  004314  EF8E  F021         	goto	i2u662_40
 12525  004318                     i2u662_41:
 12526  004318  EF87  F021         	goto	i2l158
 12527  00431C                     i2u662_40:
 12528  00431C                     
 12529                           ;Proj_Principal.c: 90:     valor[0] = RCREG;
 12530  00431C  CFAE F017          	movff	4014,setatempexterna@valor	;volatile
 12531  004320                     i2l161:
 12532  004320  A89E               	btfss	3998,4,c	;volatile
 12533  004322  EF95  F021         	goto	i2u663_41
 12534  004326  EF97  F021         	goto	i2u663_40
 12535  00432A                     i2u663_41:
 12536  00432A  EF90  F021         	goto	i2l161
 12537  00432E                     i2u663_40:
 12538  00432E                     i2l164:
 12539  00432E  AA9E               	btfss	3998,5,c	;volatile
 12540  004330  EF9C  F021         	goto	i2u664_41
 12541  004334  EF9E  F021         	goto	i2u664_40
 12542  004338                     i2u664_41:
 12543  004338  EF97  F021         	goto	i2l164
 12544  00433C                     i2u664_40:
 12545  00433C                     
 12546                           ;Proj_Principal.c: 93:     valor[1] = RCREG;
 12547  00433C  CFAE F018          	movff	4014,setatempexterna@valor+1	;volatile
 12548  004340                     
 12549                           ;Proj_Principal.c: 94:     valor[2] = '\0';
 12550  004340  0E00               	movlw	0
 12551  004342  6E19               	movwf	(setatempexterna@valor+2)^0,c
 12552  004344                     
 12553                           ;Proj_Principal.c: 95:     EEPROM_WriteString(0, valor);
 12554  004344  0E00               	movlw	0
 12555  004346  6E05               	movwf	(EEPROM_WriteString@address+1)^0,c
 12556  004348  0E00               	movlw	0
 12557  00434A  6E04               	movwf	EEPROM_WriteString@address^0,c
 12558  00434C  0E17               	movlw	low setatempexterna@valor
 12559  00434E  6E06               	movwf	EEPROM_WriteString@data^0,c
 12560  004350  0E00               	movlw	high setatempexterna@valor
 12561  004352  6E07               	movwf	(EEPROM_WriteString@data+1)^0,c
 12562  004354  EC89  F024         	call	_EEPROM_WriteString	;wreg free
 12563  004358                     
 12564                           ;Proj_Principal.c: 96:     TempExtAtiv = atoi(valor);
 12565  004358  0E17               	movlw	low setatempexterna@valor
 12566  00435A  6E08               	movwf	i2atoi@s^0,c
 12567  00435C  0E00               	movlw	high setatempexterna@valor
 12568  00435E  6E09               	movwf	(i2atoi@s+1)^0,c
 12569  004360  EC7D  F017         	call	i2_atoi	;wreg free
 12570  004364  C008  F1A4         	movff	?i2_atoi,_TempExtAtiv
 12571  004368  C009  F1A5         	movff	?i2_atoi+1,_TempExtAtiv+1
 12572  00436C                     
 12573                           ;Proj_Principal.c: 97:     PIE1bits.RCIE = 1;
 12574  00436C  8A9D               	bsf	157,5,c	;volatile
 12575  00436E  0012               	return		;funcret
 12576  004370                     __end_of_setatempexterna:
 12577                           	opt callstack 0
 12578                           
 12579 ;; *************** function i2_atoi *****************
 12580 ;; Defined at:
 12581 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;  s               2    7[COMRAM] PTR const unsigned char 
 12584 ;;		 -> carregaTempIdeal@ideal(3), carregaTempExterna@externa(3), STR_8(3), STR_7(3), 
 12585 ;;		 -> STR_2(5), STR_1(6), setatempinterna@valor(3), setatempexterna@valor(3), 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  atoi            2   20[COMRAM] int 
 12588 ;;  atoi            2   13[COMRAM] int 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  2    7[COMRAM] int 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12598 ;;      Params:         2       0       0       0       0       0       0       0       0
 12599 ;;      Locals:         9       0       0       0       0       0       0       0       0
 12600 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12601 ;;      Totals:        15       0       0       0       0       0       0       0       0
 12602 ;;Total ram usage:       15 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    1
 12605 ;; This function calls:
 12606 ;;		i2___wmul
 12607 ;;		i2_isdigit
 12608 ;;		i2_isspace
 12609 ;; This function is called by:
 12610 ;;		_setatempexterna
 12611 ;;		_setatempinterna
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	text55
 12616  002EFA                     __ptext55:
 12617                           	opt callstack 0
 12618  002EFA                     i2_atoi:
 12619                           	opt callstack 18
 12620  002EFA  0E00               	movlw	0
 12621  002EFC  6E16               	movwf	(i2atoi@n+1)^0,c
 12622  002EFE  0E00               	movlw	0
 12623  002F00  6E15               	movwf	i2atoi@n^0,c
 12624  002F02  0E00               	movlw	0
 12625  002F04  6E0F               	movwf	(i2atoi@neg+1)^0,c
 12626  002F06  0E00               	movlw	0
 12627  002F08  6E0E               	movwf	i2atoi@neg^0,c
 12628  002F0A  EF89  F017         	goto	i2l4845
 12629  002F0E                     i2l4843:
 12630  002F0E  4A08               	infsnz	i2atoi@s^0,f,c
 12631  002F10  2A09               	incf	(i2atoi@s+1)^0,f,c
 12632  002F12                     i2l4845:
 12633  002F12  0E01               	movlw	1
 12634  002F14  6E14               	movwf	i2_atoi$1265^0,c
 12635  002F16  C008  FFF6         	movff	i2atoi@s,tblptrl
 12636  002F1A  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12637  002F1E  6AF8               	clrf	tblptru,c
 12638  002F20  0E07               	movlw	(high __ramtop+-1)
 12639  002F22  64F7               	cpfsgt	tblptrh,c
 12640  002F24  D003               	bra	i2u630_47
 12641  002F26  0008               	tblrd		*
 12642  002F28  50F5               	movf	tablat,w,c
 12643  002F2A  D005               	bra	i2u630_40
 12644  002F2C                     i2u630_47:
 12645  002F2C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12646  002F30  CFF7 FFE2          	movff	tblptrh,fsr1h
 12647  002F34  50E7               	movf	indf1,w,c
 12648  002F36                     i2u630_40:
 12649  002F36  0A20               	xorlw	32
 12650  002F38  B4D8               	btfsc	status,2,c
 12651  002F3A  EFA1  F017         	goto	i2u631_41
 12652  002F3E  EFA3  F017         	goto	i2u631_40
 12653  002F42                     i2u631_41:
 12654  002F42  EFCA  F017         	goto	i2l4853
 12655  002F46                     i2u631_40:
 12656  002F46  0EF7               	movlw	247
 12657  002F48  6E0A               	movwf	??i2_atoi^0,c
 12658  002F4A  0EFF               	movlw	255
 12659  002F4C  6E0B               	movwf	(??i2_atoi+1)^0,c
 12660  002F4E  C008  FFF6         	movff	i2atoi@s,tblptrl
 12661  002F52  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12662  002F56  6AF8               	clrf	tblptru,c
 12663  002F58  0E07               	movlw	(high __ramtop+-1)
 12664  002F5A  64F7               	cpfsgt	tblptrh,c
 12665  002F5C  D003               	bra	i2u632_47
 12666  002F5E  0008               	tblrd		*
 12667  002F60  50F5               	movf	tablat,w,c
 12668  002F62  D005               	bra	i2u632_40
 12669  002F64                     i2u632_47:
 12670  002F64  CFF6 FFE1          	movff	tblptrl,fsr1l
 12671  002F68  CFF7 FFE2          	movff	tblptrh,fsr1h
 12672  002F6C  50E7               	movf	indf1,w,c
 12673  002F6E                     i2u632_40:
 12674  002F6E  6E0C               	movwf	(??i2_atoi+2)^0,c
 12675  002F70  6A0D               	clrf	(??i2_atoi+3)^0,c
 12676  002F72  500A               	movf	??i2_atoi^0,w,c
 12677  002F74  260C               	addwf	(??i2_atoi+2)^0,f,c
 12678  002F76  500B               	movf	(??i2_atoi+1)^0,w,c
 12679  002F78  220D               	addwfc	(??i2_atoi+3)^0,f,c
 12680  002F7A  500D               	movf	(??i2_atoi+3)^0,w,c
 12681  002F7C  E109               	bnz	i2u633_40
 12682  002F7E  0E05               	movlw	5
 12683  002F80  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 12684  002F82  A0D8               	btfss	status,0,c
 12685  002F84  EFC6  F017         	goto	i2u633_41
 12686  002F88  EFC8  F017         	goto	i2u633_40
 12687  002F8C                     i2u633_41:
 12688  002F8C  EFCA  F017         	goto	i2l4853
 12689  002F90                     i2u633_40:
 12690  002F90  0E00               	movlw	0
 12691  002F92  6E14               	movwf	i2_atoi$1265^0,c
 12692  002F94                     i2l4853:
 12693  002F94  C014  F010         	movff	i2_atoi$1265,i2_atoi$1264
 12694  002F98  6A11               	clrf	(i2_atoi$1264+1)^0,c
 12695  002F9A  5010               	movf	i2_atoi$1264^0,w,c
 12696  002F9C  1011               	iorwf	(i2_atoi$1264+1)^0,w,c
 12697  002F9E  A4D8               	btfss	status,2,c
 12698  002FA0  EFD4  F017         	goto	i2u634_41
 12699  002FA4  EFD6  F017         	goto	i2u634_40
 12700  002FA8                     i2u634_41:
 12701  002FA8  EF87  F017         	goto	i2l4843
 12702  002FAC                     i2u634_40:
 12703  002FAC  EFE0  F017         	goto	i2l4863
 12704  002FB0                     i2l4859:
 12705  002FB0  0E00               	movlw	0
 12706  002FB2  6E0F               	movwf	(i2atoi@neg+1)^0,c
 12707  002FB4  0E01               	movlw	1
 12708  002FB6  6E0E               	movwf	i2atoi@neg^0,c
 12709  002FB8                     i2l4861:
 12710  002FB8  4A08               	infsnz	i2atoi@s^0,f,c
 12711  002FBA  2A09               	incf	(i2atoi@s+1)^0,f,c
 12712  002FBC  EF2B  F018         	goto	i2l4869
 12713  002FC0                     i2l4863:
 12714  002FC0  C008  FFF6         	movff	i2atoi@s,tblptrl
 12715  002FC4  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12716  002FC8  6AF8               	clrf	tblptru,c
 12717  002FCA  0E07               	movlw	(high __ramtop+-1)
 12718  002FCC  64F7               	cpfsgt	tblptrh,c
 12719  002FCE  D003               	bra	i2u635_47
 12720  002FD0  0008               	tblrd		*
 12721  002FD2  50F5               	movf	tablat,w,c
 12722  002FD4  D005               	bra	i2u635_40
 12723  002FD6                     i2u635_47:
 12724  002FD6  CFF6 FFE1          	movff	tblptrl,fsr1l
 12725  002FDA  CFF7 FFE2          	movff	tblptrh,fsr1h
 12726  002FDE  50E7               	movf	indf1,w,c
 12727  002FE0                     i2u635_40:
 12728  002FE0  6E0A               	movwf	??i2_atoi^0,c
 12729  002FE2  6A0B               	clrf	(??i2_atoi+1)^0,c
 12730                           
 12731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12732                           ; Switch size 1, requested type "simple"
 12733                           ; Number of cases is 1, Range of values is 0 to 0
 12734                           ; switch strategies available:
 12735                           ; Name         Instructions Cycles
 12736                           ; simple_byte            4     3 (average)
 12737                           ;	Chosen strategy is simple_byte
 12738  002FE4  500B               	movf	(??i2_atoi+1)^0,w,c
 12739  002FE6  0A00               	xorlw	0	; case 0
 12740  002FE8  B4D8               	btfsc	status,2,c
 12741  002FEA  EFF9  F017         	goto	i2l6937
 12742  002FEE  EF2B  F018         	goto	i2l4869
 12743  002FF2                     i2l6937:
 12744                           
 12745                           ; Switch size 1, requested type "simple"
 12746                           ; Number of cases is 2, Range of values is 43 to 45
 12747                           ; switch strategies available:
 12748                           ; Name         Instructions Cycles
 12749                           ; simple_byte            7     4 (average)
 12750                           ;	Chosen strategy is simple_byte
 12751  002FF2  500A               	movf	??i2_atoi^0,w,c
 12752  002FF4  0A2B               	xorlw	43	; case 43
 12753  002FF6  B4D8               	btfsc	status,2,c
 12754  002FF8  EFDC  F017         	goto	i2l4861
 12755  002FFC  0A06               	xorlw	6	; case 45
 12756  002FFE  B4D8               	btfsc	status,2,c
 12757  003000  EFD8  F017         	goto	i2l4859
 12758  003004  EF2B  F018         	goto	i2l4869
 12759  003008                     i2l4865:
 12760  003008  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
 12761  00300C  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 12762  003010  0E00               	movlw	0
 12763  003012  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 12764  003014  0E0A               	movlw	10
 12765  003016  6E03               	movwf	i2___wmul@multiplicand^0,c
 12766  003018  EC7B  F025         	call	i2___wmul	;wreg free
 12767  00301C  C008  FFF6         	movff	i2atoi@s,tblptrl
 12768  003020  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12769  003024  6AF8               	clrf	tblptru,c
 12770  003026  0E07               	movlw	(high __ramtop+-1)
 12771  003028  64F7               	cpfsgt	tblptrh,c
 12772  00302A  D003               	bra	i2u636_47
 12773  00302C  0008               	tblrd		*
 12774  00302E  50F5               	movf	tablat,w,c
 12775  003030  D005               	bra	i2u636_40
 12776  003032                     i2u636_47:
 12777  003032  CFF6 FFE1          	movff	tblptrl,fsr1l
 12778  003036  CFF7 FFE2          	movff	tblptrh,fsr1h
 12779  00303A  50E7               	movf	indf1,w,c
 12780  00303C                     i2u636_40:
 12781  00303C  6E0A               	movwf	??i2_atoi^0,c
 12782  00303E  500A               	movf	??i2_atoi^0,w,c
 12783  003040  5E01               	subwf	?i2___wmul^0,f,c
 12784  003042  0E00               	movlw	0
 12785  003044  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 12786  003046  0E30               	movlw	48
 12787  003048  2401               	addwf	?i2___wmul^0,w,c
 12788  00304A  6E15               	movwf	i2atoi@n^0,c
 12789  00304C  0E00               	movlw	0
 12790  00304E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 12791  003050  6E16               	movwf	(i2atoi@n+1)^0,c
 12792  003052  EFDC  F017         	goto	i2l4861
 12793  003056                     i2l4869:
 12794  003056  0ED0               	movlw	208
 12795  003058  6E0A               	movwf	??i2_atoi^0,c
 12796  00305A  0EFF               	movlw	255
 12797  00305C  6E0B               	movwf	(??i2_atoi+1)^0,c
 12798  00305E  C008  FFF6         	movff	i2atoi@s,tblptrl
 12799  003062  C009  FFF7         	movff	i2atoi@s+1,tblptrh
 12800  003066  6AF8               	clrf	tblptru,c
 12801  003068  0E07               	movlw	(high __ramtop+-1)
 12802  00306A  64F7               	cpfsgt	tblptrh,c
 12803  00306C  D003               	bra	i2u637_47
 12804  00306E  0008               	tblrd		*
 12805  003070  50F5               	movf	tablat,w,c
 12806  003072  D005               	bra	i2u637_40
 12807  003074                     i2u637_47:
 12808  003074  CFF6 FFE1          	movff	tblptrl,fsr1l
 12809  003078  CFF7 FFE2          	movff	tblptrh,fsr1h
 12810  00307C  50E7               	movf	indf1,w,c
 12811  00307E                     i2u637_40:
 12812  00307E  6E0C               	movwf	(??i2_atoi+2)^0,c
 12813  003080  6A0D               	clrf	(??i2_atoi+3)^0,c
 12814  003082  500A               	movf	??i2_atoi^0,w,c
 12815  003084  260C               	addwf	(??i2_atoi+2)^0,f,c
 12816  003086  500B               	movf	(??i2_atoi+1)^0,w,c
 12817  003088  220D               	addwfc	(??i2_atoi+3)^0,f,c
 12818  00308A  500D               	movf	(??i2_atoi+3)^0,w,c
 12819  00308C  E10A               	bnz	i2u638_40
 12820  00308E  0E0A               	movlw	10
 12821  003090  5C0C               	subwf	(??i2_atoi+2)^0,w,c
 12822  003092  A0D8               	btfss	status,0,c
 12823  003094  EF4E  F018         	goto	i2u638_41
 12824  003098  EF51  F018         	goto	i2u638_40
 12825  00309C                     i2u638_41:
 12826  00309C  0E01               	movlw	1
 12827  00309E  EF52  F018         	goto	i2u639_40
 12828  0030A2                     i2u638_40:
 12829  0030A2  0E00               	movlw	0
 12830  0030A4                     i2u639_40:
 12831  0030A4  6E12               	movwf	i2_atoi$1266^0,c
 12832  0030A6  6A13               	clrf	(i2_atoi$1266+1)^0,c
 12833  0030A8  5012               	movf	i2_atoi$1266^0,w,c
 12834  0030AA  1013               	iorwf	(i2_atoi$1266+1)^0,w,c
 12835  0030AC  A4D8               	btfss	status,2,c
 12836  0030AE  EF5B  F018         	goto	i2u640_41
 12837  0030B2  EF5D  F018         	goto	i2u640_40
 12838  0030B6                     i2u640_41:
 12839  0030B6  EF04  F018         	goto	i2l4865
 12840  0030BA                     i2u640_40:
 12841  0030BA  500E               	movf	i2atoi@neg^0,w,c
 12842  0030BC  100F               	iorwf	(i2atoi@neg+1)^0,w,c
 12843  0030BE  A4D8               	btfss	status,2,c
 12844  0030C0  EF64  F018         	goto	i2u641_41
 12845  0030C4  EF66  F018         	goto	i2u641_40
 12846  0030C8                     i2u641_41:
 12847  0030C8  EF74  F018         	goto	i2l1233
 12848  0030CC                     i2u641_40:
 12849  0030CC  C015  F00A         	movff	i2atoi@n,??i2_atoi
 12850  0030D0  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
 12851  0030D4  1E0A               	comf	??i2_atoi^0,f,c
 12852  0030D6  1E0B               	comf	(??i2_atoi+1)^0,f,c
 12853  0030D8  4A0A               	infsnz	??i2_atoi^0,f,c
 12854  0030DA  2A0B               	incf	(??i2_atoi+1)^0,f,c
 12855  0030DC  C00A  F008         	movff	??i2_atoi,?i2_atoi
 12856  0030E0  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
 12857  0030E4  EF78  F018         	goto	i2l1236
 12858  0030E8                     i2l1233:
 12859  0030E8  C015  F008         	movff	i2atoi@n,?i2_atoi
 12860  0030EC  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
 12861  0030F0                     i2l1236:
 12862  0030F0  0012               	return		;funcret
 12863  0030F2                     __end_ofi2_atoi:
 12864                           	opt callstack 0
 12865                           
 12866 ;; *************** function i2_isspace *****************
 12867 ;; Defined at:
 12868 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;  c               2    0[COMRAM] int 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  2    0[COMRAM] int 
 12875 ;; Registers used:
 12876 ;;		wreg, status,2, status,0
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12882 ;;      Params:         2       0       0       0       0       0       0       0       0
 12883 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12884 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12885 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12886 ;;Total ram usage:        7 bytes
 12887 ;; Hardware stack levels used:    1
 12888 ;; This function calls:
 12889 ;;		Nothing
 12890 ;; This function is called by:
 12891 ;;		i2_atoi
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           	psect	text56
 12896  004720                     __ptext56:
 12897                           	opt callstack 0
 12898  004720                     i2_isspace:
 12899                           	opt callstack 18
 12900  004720  0E01               	movlw	1
 12901  004722  6E07               	movwf	i2_isspace$1295^0,c
 12902  004724  0E20               	movlw	32
 12903  004726  1801               	xorwf	i2isspace@c^0,w,c
 12904  004728  1002               	iorwf	(i2isspace@c+1)^0,w,c
 12905  00472A  B4D8               	btfsc	status,2,c
 12906  00472C  EF9A  F023         	goto	i2u608_41
 12907  004730  EF9C  F023         	goto	i2u608_40
 12908  004734                     i2u608_41:
 12909  004734  EFB5  F023         	goto	i2l4731
 12910  004738                     i2u608_40:
 12911  004738  0EF7               	movlw	247
 12912  00473A  6E03               	movwf	??i2_isspace^0,c
 12913  00473C  0EFF               	movlw	255
 12914  00473E  6E04               	movwf	(??i2_isspace+1)^0,c
 12915  004740  C001  F005         	movff	i2isspace@c,??i2_isspace+2
 12916  004744  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
 12917  004748  5003               	movf	??i2_isspace^0,w,c
 12918  00474A  2605               	addwf	(??i2_isspace+2)^0,f,c
 12919  00474C  5004               	movf	(??i2_isspace+1)^0,w,c
 12920  00474E  2206               	addwfc	(??i2_isspace+3)^0,f,c
 12921  004750  5006               	movf	(??i2_isspace+3)^0,w,c
 12922  004752  E109               	bnz	i2u609_40
 12923  004754  0E05               	movlw	5
 12924  004756  5C05               	subwf	(??i2_isspace+2)^0,w,c
 12925  004758  A0D8               	btfss	status,0,c
 12926  00475A  EFB1  F023         	goto	i2u609_41
 12927  00475E  EFB3  F023         	goto	i2u609_40
 12928  004762                     i2u609_41:
 12929  004762  EFB5  F023         	goto	i2l4731
 12930  004766                     i2u609_40:
 12931  004766  0E00               	movlw	0
 12932  004768  6E07               	movwf	i2_isspace$1295^0,c
 12933  00476A                     i2l4731:
 12934  00476A  C007  F001         	movff	i2_isspace$1295,?i2_isspace
 12935  00476E  6A02               	clrf	(?i2_isspace+1)^0,c
 12936  004770  0012               	return		;funcret
 12937  004772                     __end_ofi2_isspace:
 12938                           	opt callstack 0
 12939                           
 12940 ;; *************** function i2_isdigit *****************
 12941 ;; Defined at:
 12942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  c               2    0[COMRAM] int 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  2    0[COMRAM] int 
 12949 ;; Registers used:
 12950 ;;		wreg, status,2, status,0
 12951 ;; Tracked objects:
 12952 ;;		On entry : 0/0
 12953 ;;		On exit  : 0/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12956 ;;      Params:         2       0       0       0       0       0       0       0       0
 12957 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12958 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12959 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12960 ;;Total ram usage:        6 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		i2_atoi
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text57
 12970  004A38                     __ptext57:
 12971                           	opt callstack 0
 12972  004A38                     i2_isdigit:
 12973                           	opt callstack 18
 12974  004A38  0ED0               	movlw	208
 12975  004A3A  6E03               	movwf	??i2_isdigit^0,c
 12976  004A3C  0EFF               	movlw	255
 12977  004A3E  6E04               	movwf	(??i2_isdigit+1)^0,c
 12978  004A40  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
 12979  004A44  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
 12980  004A48  5003               	movf	??i2_isdigit^0,w,c
 12981  004A4A  2605               	addwf	(??i2_isdigit+2)^0,f,c
 12982  004A4C  5004               	movf	(??i2_isdigit+1)^0,w,c
 12983  004A4E  2206               	addwfc	(??i2_isdigit+3)^0,f,c
 12984  004A50  5006               	movf	(??i2_isdigit+3)^0,w,c
 12985  004A52  E10A               	bnz	i2u606_40
 12986  004A54  0E0A               	movlw	10
 12987  004A56  5C05               	subwf	(??i2_isdigit+2)^0,w,c
 12988  004A58  A0D8               	btfss	status,0,c
 12989  004A5A  EF31  F025         	goto	i2u606_41
 12990  004A5E  EF34  F025         	goto	i2u606_40
 12991  004A62                     i2u606_41:
 12992  004A62  0E01               	movlw	1
 12993  004A64  EF35  F025         	goto	i2u607_40
 12994  004A68                     i2u606_40:
 12995  004A68  0E00               	movlw	0
 12996  004A6A                     i2u607_40:
 12997  004A6A  6E01               	movwf	?i2_isdigit^0,c
 12998  004A6C  6A02               	clrf	(?i2_isdigit+1)^0,c
 12999  004A6E  0012               	return		;funcret
 13000  004A70                     __end_ofi2_isdigit:
 13001                           	opt callstack 0
 13002                           
 13003 ;; *************** function i2___wmul *****************
 13004 ;; Defined at:
 13005 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  multiplier      2    0[COMRAM] unsigned int 
 13008 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;  __wmul          2    4[COMRAM] unsigned int 
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  2    0[COMRAM] unsigned int 
 13013 ;; Registers used:
 13014 ;;		wreg, status,2, status,0, prodl, prodh
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13020 ;;      Params:         4       0       0       0       0       0       0       0       0
 13021 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13022 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13023 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13024 ;;Total ram usage:        6 bytes
 13025 ;; Hardware stack levels used:    1
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		i2_atoi
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text58
 13034  004AF6                     __ptext58:
 13035                           	opt callstack 0
 13036  004AF6                     i2___wmul:
 13037                           	opt callstack 18
 13038  004AF6  5001               	movf	i2___wmul@multiplier^0,w,c
 13039  004AF8  0203               	mulwf	i2___wmul@multiplicand^0,c
 13040  004AFA  CFF3 F005          	movff	prodl,i2___wmul@product
 13041  004AFE  CFF4 F006          	movff	prodh,i2___wmul@product+1
 13042  004B02  5001               	movf	i2___wmul@multiplier^0,w,c
 13043  004B04  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 13044  004B06  50F3               	movf	243,w,c
 13045  004B08  2606               	addwf	(i2___wmul@product+1)^0,f,c
 13046  004B0A  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 13047  004B0C  0203               	mulwf	i2___wmul@multiplicand^0,c
 13048  004B0E  50F3               	movf	243,w,c
 13049  004B10  2606               	addwf	(i2___wmul@product+1)^0,f,c
 13050  004B12  C005  F001         	movff	i2___wmul@product,?i2___wmul
 13051  004B16  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 13052  004B1A  0012               	return		;funcret
 13053  004B1C                     __end_ofi2___wmul:
 13054                           	opt callstack 0
 13055                           
 13056 ;; *************** function _EEPROM_WriteString *****************
 13057 ;; Defined at:
 13058 ;;		line 27 in file "EEPROM.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;  address         2    3[COMRAM] int 
 13061 ;;  data            2    5[COMRAM] PTR unsigned char 
 13062 ;;		 -> setatempinterna@valor(3), setatempexterna@valor(3), 
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      void 
 13067 ;; Registers used:
 13068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13069 ;; Tracked objects:
 13070 ;;		On entry : 0/0
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13074 ;;      Params:         4       0       0       0       0       0       0       0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13077 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13078 ;;Total ram usage:        4 bytes
 13079 ;; Hardware stack levels used:    1
 13080 ;; Hardware stack levels required when called:    1
 13081 ;; This function calls:
 13082 ;;		_EEPROM_Write
 13083 ;; This function is called by:
 13084 ;;		_setatempexterna
 13085 ;;		_setatempinterna
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           	psect	text59
 13090  004912                     __ptext59:
 13091                           	opt callstack 0
 13092  004912                     _EEPROM_WriteString:
 13093                           	opt callstack 18
 13094  004912                     
 13095                           ;EEPROM.c: 27: void EEPROM_WriteString(int address,char *data);EEPROM.c: 28: {;EEPROM.c:
      +                           29:     while(*data!=0)
 13096  004912  EF9B  F024         	goto	i2l4759
 13097  004916                     i2l4753:
 13098                           
 13099                           ;EEPROM.c: 30:     {;EEPROM.c: 31:         EEPROM_Write(address,*data);
 13100  004916  C004  F001         	movff	EEPROM_WriteString@address,EEPROM_Write@address
 13101  00491A  C005  F002         	movff	EEPROM_WriteString@address+1,EEPROM_Write@address+1
 13102  00491E  C006  FFD9         	movff	EEPROM_WriteString@data,fsr2l
 13103  004922  C007  FFDA         	movff	EEPROM_WriteString@data+1,fsr2h
 13104  004926  50DF               	movf	indf2,w,c
 13105  004928  6E03               	movwf	EEPROM_Write@data^0,c
 13106  00492A  EC50  F025         	call	_EEPROM_Write	;wreg free
 13107  00492E                     
 13108                           ;EEPROM.c: 32:         address++;
 13109  00492E  4A04               	infsnz	EEPROM_WriteString@address^0,f,c
 13110  004930  2A05               	incf	(EEPROM_WriteString@address+1)^0,f,c
 13111  004932                     
 13112                           ;EEPROM.c: 33:         *data++;
 13113  004932  4A06               	infsnz	EEPROM_WriteString@data^0,f,c
 13114  004934  2A07               	incf	(EEPROM_WriteString@data+1)^0,f,c
 13115  004936                     i2l4759:
 13116                           
 13117                           ;EEPROM.c: 29:     while(*data!=0)
 13118  004936  C006  FFD9         	movff	EEPROM_WriteString@data,fsr2l
 13119  00493A  C007  FFDA         	movff	EEPROM_WriteString@data+1,fsr2h
 13120  00493E  50DF               	movf	indf2,w,c
 13121  004940  A4D8               	btfss	status,2,c
 13122  004942  EFA5  F024         	goto	i2u611_41
 13123  004946  EFA7  F024         	goto	i2u611_40
 13124  00494A                     i2u611_41:
 13125  00494A  EF8B  F024         	goto	i2l4753
 13126  00494E                     i2u611_40:
 13127  00494E  0012               	return		;funcret
 13128  004950                     __end_of_EEPROM_WriteString:
 13129                           	opt callstack 0
 13130                           
 13131 ;; *************** function _EEPROM_Write *****************
 13132 ;; Defined at:
 13133 ;;		line 4 in file "EEPROM.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;  address         2    0[COMRAM] int 
 13136 ;;  data            1    2[COMRAM] unsigned char 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;		None
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  1    wreg      void 
 13141 ;; Registers used:
 13142 ;;		wreg, status,2
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13148 ;;      Params:         3       0       0       0       0       0       0       0       0
 13149 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13151 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13152 ;;Total ram usage:        3 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; This function calls:
 13155 ;;		Nothing
 13156 ;; This function is called by:
 13157 ;;		_EEPROM_WriteString
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           	psect	text60
 13162  004AA0                     __ptext60:
 13163                           	opt callstack 0
 13164  004AA0                     _EEPROM_Write:
 13165                           	opt callstack 18
 13166  004AA0                     
 13167                           ;EEPROM.c: 4: void EEPROM_Write(int address,char data);EEPROM.c: 5: {;EEPROM.c: 7:     E
      +                          EADR=address;
 13168  004AA0  C001  FFA9         	movff	EEPROM_Write@address,4009	;volatile
 13169                           
 13170                           ;EEPROM.c: 8:     EEDATA=data;
 13171  004AA4  C003  FFA8         	movff	EEPROM_Write@data,4008	;volatile
 13172                           
 13173                           ;EEPROM.c: 9:     EECON1bits.EEPGD=0;
 13174  004AA8  9EA6               	bcf	166,7,c	;volsfr
 13175                           
 13176                           ;EEPROM.c: 10:     EECON1bits.CFGS=0;
 13177  004AAA  9CA6               	bcf	166,6,c	;volsfr
 13178                           
 13179                           ;EEPROM.c: 11:     EECON1bits.WREN=1;
 13180  004AAC  84A6               	bsf	166,2,c	;volsfr
 13181                           
 13182                           ;EEPROM.c: 12:     INTCONbits.GIE=0;
 13183  004AAE  9EF2               	bcf	242,7,c	;volatile
 13184  004AB0                     
 13185                           ;EEPROM.c: 15:     EECON2=0x55;
 13186  004AB0  0E55               	movlw	85
 13187  004AB2  6EA7               	movwf	167,c	;volsfr
 13188                           
 13189                           ;EEPROM.c: 16:     EECON2=0xaa;
 13190  004AB4  0EAA               	movlw	170
 13191  004AB6  6EA7               	movwf	167,c	;volsfr
 13192  004AB8                     
 13193                           ;EEPROM.c: 18:     EECON1bits.WR=1;
 13194  004AB8  82A6               	bsf	166,1,c	;volsfr
 13195  004ABA                     
 13196                           ;EEPROM.c: 19:     INTCONbits.GIE=1;
 13197  004ABA  8EF2               	bsf	242,7,c	;volatile
 13198  004ABC                     i2l302:
 13199  004ABC  A8A1               	btfss	161,4,c	;volatile
 13200  004ABE  EF63  F025         	goto	i2u604_41
 13201  004AC2  EF65  F025         	goto	i2u604_40
 13202  004AC6                     i2u604_41:
 13203  004AC6  EF5E  F025         	goto	i2l302
 13204  004ACA                     i2u604_40:
 13205  004ACA                     
 13206                           ;EEPROM.c: 23:     PIR2bits.EEIF=0;
 13207  004ACA  98A1               	bcf	161,4,c	;volatile
 13208  004ACC  0012               	return		;funcret
 13209  004ACE                     __end_of_EEPROM_Write:
 13210                           	opt callstack 0
 13211                           
 13212 ;; *************** function _mandatempint *****************
 13213 ;; Defined at:
 13214 ;;		line 115 in file "Proj_Principal.c"
 13215 ;; Parameters:    Size  Location     Type
 13216 ;;		None
 13217 ;; Auto vars:     Size  Location     Type
 13218 ;;		None
 13219 ;; Return value:  Size  Location     Type
 13220 ;;                  1    wreg      void 
 13221 ;; Registers used:
 13222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13223 ;; Tracked objects:
 13224 ;;		On entry : 0/0
 13225 ;;		On exit  : 0/0
 13226 ;;		Unchanged: 0/0
 13227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13228 ;;      Params:         0       0       0       0       0       0       0       0       0
 13229 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13231 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13232 ;;Total ram usage:        0 bytes
 13233 ;; Hardware stack levels used:    1
 13234 ;; Hardware stack levels required when called:    2
 13235 ;; This function calls:
 13236 ;;		_USART_SendString
 13237 ;; This function is called by:
 13238 ;;		_ISR1
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text61
 13243  004BA6                     __ptext61:
 13244                           	opt callstack 0
 13245  004BA6                     _mandatempint:
 13246                           	opt callstack 18
 13247  004BA6                     
 13248                           ;Proj_Principal.c: 116:     USART_SendString(TempInterna);
 13249  004BA6  0E39               	movlw	low _TempInterna
 13250  004BA8  6E02               	movwf	USART_SendString@out^0,c
 13251  004BAA  0E00               	movlw	high _TempInterna
 13252  004BAC  6E03               	movwf	(USART_SendString@out+1)^0,c
 13253  004BAE  EC38  F025         	call	_USART_SendString	;wreg free
 13254  004BB2  0012               	return		;funcret
 13255  004BB4                     __end_of_mandatempint:
 13256                           	opt callstack 0
 13257                           
 13258 ;; *************** function _mandatempideal *****************
 13259 ;; Defined at:
 13260 ;;		line 127 in file "Proj_Principal.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    2
 13281 ;; This function calls:
 13282 ;;		_USART_SendString
 13283 ;; This function is called by:
 13284 ;;		_ISR1
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text62
 13289  004BB4                     __ptext62:
 13290                           	opt callstack 0
 13291  004BB4                     _mandatempideal:
 13292                           	opt callstack 18
 13293  004BB4                     
 13294                           ;Proj_Principal.c: 128:     USART_SendString(TempInternaIdeal);
 13295  004BB4  0E58               	movlw	low _TempInternaIdeal
 13296  004BB6  6E02               	movwf	USART_SendString@out^0,c
 13297  004BB8  0E01               	movlw	high _TempInternaIdeal
 13298  004BBA  6E03               	movwf	(USART_SendString@out+1)^0,c
 13299  004BBC  EC38  F025         	call	_USART_SendString	;wreg free
 13300  004BC0  0012               	return		;funcret
 13301  004BC2                     __end_of_mandatempideal:
 13302                           	opt callstack 0
 13303                           
 13304 ;; *************** function _mandatempextativ *****************
 13305 ;; Defined at:
 13306 ;;		line 123 in file "Proj_Principal.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    2
 13327 ;; This function calls:
 13328 ;;		_USART_SendString
 13329 ;; This function is called by:
 13330 ;;		_ISR1
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text63
 13335  004BC2                     __ptext63:
 13336                           	opt callstack 0
 13337  004BC2                     _mandatempextativ:
 13338                           	opt callstack 18
 13339  004BC2                     
 13340                           ;Proj_Principal.c: 124:     USART_SendString(TempExteAtivacao);
 13341  004BC2  0E62               	movlw	low _TempExteAtivacao
 13342  004BC4  6E02               	movwf	USART_SendString@out^0,c
 13343  004BC6  0E01               	movlw	high _TempExteAtivacao
 13344  004BC8  6E03               	movwf	(USART_SendString@out+1)^0,c
 13345  004BCA  EC38  F025         	call	_USART_SendString	;wreg free
 13346  004BCE  0012               	return		;funcret
 13347  004BD0                     __end_of_mandatempextativ:
 13348                           	opt callstack 0
 13349                           
 13350 ;; *************** function _mandatempext *****************
 13351 ;; Defined at:
 13352 ;;		line 119 in file "Proj_Principal.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;		None
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;		None
 13357 ;; Return value:  Size  Location     Type
 13358 ;;                  1    wreg      void 
 13359 ;; Registers used:
 13360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13361 ;; Tracked objects:
 13362 ;;		On entry : 0/0
 13363 ;;		On exit  : 0/0
 13364 ;;		Unchanged: 0/0
 13365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13366 ;;      Params:         0       0       0       0       0       0       0       0       0
 13367 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13368 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13369 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13370 ;;Total ram usage:        0 bytes
 13371 ;; Hardware stack levels used:    1
 13372 ;; Hardware stack levels required when called:    2
 13373 ;; This function calls:
 13374 ;;		_USART_SendString
 13375 ;; This function is called by:
 13376 ;;		_ISR1
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text64
 13381  004BD0                     __ptext64:
 13382                           	opt callstack 0
 13383  004BD0                     _mandatempext:
 13384                           	opt callstack 18
 13385  004BD0                     
 13386                           ;Proj_Principal.c: 120:     USART_SendString(TempExterna);
 13387  004BD0  0E6C               	movlw	low _TempExterna
 13388  004BD2  6E02               	movwf	USART_SendString@out^0,c
 13389  004BD4  0E01               	movlw	high _TempExterna
 13390  004BD6  6E03               	movwf	(USART_SendString@out+1)^0,c
 13391  004BD8  EC38  F025         	call	_USART_SendString	;wreg free
 13392  004BDC  0012               	return		;funcret
 13393  004BDE                     __end_of_mandatempext:
 13394                           	opt callstack 0
 13395                           
 13396 ;; *************** function _USART_SendString *****************
 13397 ;; Defined at:
 13398 ;;		line 23 in file "USART.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  out             2    1[COMRAM] PTR const unsigned char 
 13401 ;;		 -> TempInternaIdeal(10), TempExteAtivacao(10), TempExterna(10), TempInterna(10), 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13413 ;;      Params:         2       0       0       0       0       0       0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13416 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13417 ;;Total ram usage:        2 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:    1
 13420 ;; This function calls:
 13421 ;;		_USART_TxChar
 13422 ;; This function is called by:
 13423 ;;		_mandatempint
 13424 ;;		_mandatempext
 13425 ;;		_mandatempextativ
 13426 ;;		_mandatempideal
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           	psect	text65
 13431  004A70                     __ptext65:
 13432                           	opt callstack 0
 13433  004A70                     _USART_SendString:
 13434                           	opt callstack 18
 13435  004A70                     
 13436                           ;USART.c: 24:     while (*out != '\0') {
 13437  004A70  EF43  F025         	goto	i2l4767
 13438  004A74                     i2l4763:
 13439                           
 13440                           ;USART.c: 25:         USART_TxChar(*out);
 13441  004A74  C002  FFD9         	movff	USART_SendString@out,fsr2l
 13442  004A78  C003  FFDA         	movff	USART_SendString@out+1,fsr2h
 13443  004A7C  50DF               	movf	indf2,w,c
 13444  004A7E  ECB7  F025         	call	_USART_TxChar
 13445  004A82                     
 13446                           ;USART.c: 26:         out++;
 13447  004A82  4A02               	infsnz	USART_SendString@out^0,f,c
 13448  004A84  2A03               	incf	(USART_SendString@out+1)^0,f,c
 13449  004A86                     i2l4767:
 13450                           
 13451                           ;USART.c: 24:     while (*out != '\0') {
 13452  004A86  C002  FFD9         	movff	USART_SendString@out,fsr2l
 13453  004A8A  C003  FFDA         	movff	USART_SendString@out+1,fsr2h
 13454  004A8E  50DF               	movf	indf2,w,c
 13455  004A90  A4D8               	btfss	status,2,c
 13456  004A92  EF4D  F025         	goto	i2u612_41
 13457  004A96  EF4F  F025         	goto	i2u612_40
 13458  004A9A                     i2u612_41:
 13459  004A9A  EF3A  F025         	goto	i2l4763
 13460  004A9E                     i2u612_40:
 13461  004A9E  0012               	return		;funcret
 13462  004AA0                     __end_of_USART_SendString:
 13463                           	opt callstack 0
 13464                           
 13465 ;; *************** function _USART_TxChar *****************
 13466 ;; Defined at:
 13467 ;;		line 18 in file "USART.c"
 13468 ;; Parameters:    Size  Location     Type
 13469 ;;  out             1    wreg     unsigned char 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;  out             1    0[COMRAM] unsigned char 
 13472 ;; Return value:  Size  Location     Type
 13473 ;;                  1    wreg      void 
 13474 ;; Registers used:
 13475 ;;		wreg
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13481 ;;      Params:         0       0       0       0       0       0       0       0       0
 13482 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13484 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13485 ;;Total ram usage:        1 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; This function calls:
 13488 ;;		Nothing
 13489 ;; This function is called by:
 13490 ;;		_USART_SendString
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text66
 13495  004B6E                     __ptext66:
 13496                           	opt callstack 0
 13497  004B6E                     _USART_TxChar:
 13498                           	opt callstack 18
 13499                           
 13500                           ;incstack = 0
 13501                           ;USART_TxChar@out stored from wreg
 13502  004B6E  6E01               	movwf	USART_TxChar@out^0,c
 13503  004B70                     i2l251:
 13504  004B70  A89E               	btfss	3998,4,c	;volatile
 13505  004B72  EFBD  F025         	goto	i2u603_41
 13506  004B76  EFBF  F025         	goto	i2u603_40
 13507  004B7A                     i2u603_41:
 13508  004B7A  EFB8  F025         	goto	i2l251
 13509  004B7E                     i2u603_40:
 13510  004B7E                     
 13511                           ;USART.c: 20:     TXREG = out;
 13512  004B7E  C001  FFAD         	movff	USART_TxChar@out,4013	;volatile
 13513  004B82  0012               	return		;funcret
 13514  004B84                     __end_of_USART_TxChar:
 13515                           	opt callstack 0
 13516                           
 13517                           	psect	rparam
 13518  0000                     
 13519                           	psect	temp
 13520  000045                     btemp:
 13521                           	opt callstack 0
 13522  000045                     	ds	1
 13523  0000                     int$flags	set	btemp
 13524  0000                     wtemp8	set	btemp+1
 13525  0000                     ttemp5	set	btemp+1
 13526  0000                     ttemp6	set	btemp+4
 13527  0000                     ttemp7	set	btemp+8
 13528                           tosu	equ	0xFFF
 13529                           tosh	equ	0xFFE
 13530                           tosl	equ	0xFFD
 13531                           stkptr	equ	0xFFC
 13532                           pclatu	equ	0xFFB
 13533                           pclath	equ	0xFFA
 13534                           pcl	equ	0xFF9
 13535                           tblptru	equ	0xFF8
 13536                           tblptrh	equ	0xFF7
 13537                           tblptrl	equ	0xFF6
 13538                           tablat	equ	0xFF5
 13539                           prodh	equ	0xFF4
 13540                           prodl	equ	0xFF3
 13541                           indf0	equ	0xFEF
 13542                           postinc0	equ	0xFEE
 13543                           postdec0	equ	0xFED
 13544                           preinc0	equ	0xFEC
 13545                           plusw0	equ	0xFEB
 13546                           fsr0h	equ	0xFEA
 13547                           fsr0l	equ	0xFE9
 13548                           wreg	equ	0xFE8
 13549                           indf1	equ	0xFE7
 13550                           postinc1	equ	0xFE6
 13551                           postdec1	equ	0xFE5
 13552                           preinc1	equ	0xFE4
 13553                           plusw1	equ	0xFE3
 13554                           fsr1h	equ	0xFE2
 13555                           fsr1l	equ	0xFE1
 13556                           bsr	equ	0xFE0
 13557                           indf2	equ	0xFDF
 13558                           postinc2	equ	0xFDE
 13559                           postdec2	equ	0xFDD
 13560                           preinc2	equ	0xFDC
 13561                           plusw2	equ	0xFDB
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    0
    Data        6
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      68
    BANK0           160    159     159
    BANK1           256     46     168
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_2(CODE[5]), STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1308_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> carregaTempIdeal@ideal(BANK0[3]), carregaTempExterna@externa(BANK0[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[6]), setatempinterna@valor(COMRAM[3]), setatempexterna@valor(COMRAM[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_2(CODE[5]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_2(CODE[5]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    EEPROM_WriteString@data	PTR unsigned char  size(2) Largest target is 3
		 -> setatempinterna@valor(COMRAM[3]), setatempexterna@valor(COMRAM[3]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 10
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_12(CODE[2]), STR_11(CODE[12]), STR_10(CODE[2]), STR_9(CODE[12]), 
		 -> STR_6(CODE[2]), STR_5(CODE[12]), STR_4(CODE[2]), STR_3(CODE[12]), 
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_12(CODE[2]), STR_11(CODE[12]), STR_10(CODE[2]), STR_9(CODE[12]), 
		 -> STR_6(CODE[2]), STR_5(CODE[12]), STR_4(CODE[2]), STR_3(CODE[12]), 
		 -> TempInternaIdeal(BANK1[10]), TempExteAtivacao(BANK1[10]), TempExterna(BANK1[10]), TempInterna(COMRAM[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR1 in COMRAM

    _ISR1->_setatempexterna
    _ISR1->_setatempinterna
    _setatempinterna->i2_atoi
    _setatempexterna->i2_atoi
    i2_atoi->i2_isspace
    _EEPROM_WriteString->_EEPROM_Write
    _mandatempint->_USART_SendString
    _mandatempideal->_USART_SendString
    _mandatempextativ->_USART_SendString
    _mandatempext->_USART_SendString
    _USART_SendString->_USART_TxChar

Critical Paths under _main in BANK0

    _letemp->___fldiv
    _letemp->___flmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _compTemp->___flge
    _carregaTempIdeal->_atoi
    _carregaTempExterna->_atoi
    _atoi->_isspace
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _TempExternaMinima->___flge
    ___xxtofl->_ADC_Read
    ___flge->___fladd
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_escreveLCD
    _escreveLCD->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88193
                           _ADC_Init
                           _LCD_Init
                            _MSdelay
                  _TempExternaMinima
                         _USART_Init
                 _carregaTempExterna
                   _carregaTempIdeal
                           _compTemp
                         _escreveLCD
                             _letemp
 ---------------------------------------------------------------------------------
 (1) _letemp                                               0     0      0    8117
                           _ADC_Read
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     245
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _escreveLCD                                           4     4      0   54686
                                             42 BANK1      4     4      0
                          _LCD_Clear
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   47217
                                             22 BANK1     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   46167
                                            153 BANK0      6     0      6
                                             20 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   45628
                                            143 BANK0     10     4      6
                                              0 BANK1     20    20      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31747
                                             75 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             47 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4547
                                             63 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3593
                                             22 BANK0     25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    4464
                                              9 BANK0      5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1132
                                              7 BANK0      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     977
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1923
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _compTemp                                             0     0      0    6344
                            ___fladd
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _carregaTempIdeal                                     7     7      0    2399
                                             22 BANK0      7     7      0
                        _EEPROM_Read
                               _atoi
 ---------------------------------------------------------------------------------
 (1) _carregaTempExterna                                   5     5      0    2393
                                             22 BANK0      5     5      0
                        _EEPROM_Read
                               _atoi
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1905
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           6     4      2    9023
                                             63 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3263
                                             22 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3982
                                             47 BANK0     16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TempExternaMinima                                    1     1      0    2362
                                             75 BANK0      1     1      0
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1016
                                              8 BANK0     14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1346
                                             63 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1923
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     977
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     946
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR1                                               11    11      0    4423
                                             25 COMRAM    11    11      0
                       _mandatempext
                   _mandatempextativ
                     _mandatempideal
                       _mandatempint
                    _setatempexterna
                    _setatempinterna
 ---------------------------------------------------------------------------------
 (11) _setatempinterna                                     3     3      0    1403
                                             22 COMRAM     3     3      0
                 _EEPROM_WriteString
                             i2_atoi
 ---------------------------------------------------------------------------------
 (11) _setatempexterna                                     3     3      0    1403
                                             22 COMRAM     3     3      0
                 _EEPROM_WriteString
                             i2_atoi
 ---------------------------------------------------------------------------------
 (12) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (13) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           6     4      2      48
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (13) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _EEPROM_WriteString                                  4     0      4     568
                                              3 COMRAM     4     0      4
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (13) _EEPROM_Write                                        3     0      3     196
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (11) _mandatempint                                        0     0      0     371
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (11) _mandatempideal                                      0     0      0     371
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (11) _mandatempextativ                                    0     0      0     371
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (11) _mandatempext                                        0     0      0     371
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (12) _USART_SendString                                    2     0      2     371
                                              1 COMRAM     2     0      2
                       _USART_TxChar
 ---------------------------------------------------------------------------------
 (13) _USART_TxChar                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay
   _TempExternaMinima
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___fltol
     ___xxtofl
       _ADC_Read (ARG)
   _carregaTempExterna
     _EEPROM_Read
     _atoi
       ___wmul
       _isdigit
       _isspace
   _carregaTempIdeal
     _EEPROM_Read
     _atoi
       ___wmul
       _isdigit
       _isspace
   _compTemp
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___flmul (ARG)
         _ADC_Read (ARG)
         ___xxtofl (ARG)
           _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)
   _escreveLCD
     _LCD_Clear
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
             ___fldiv
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     _ADC_Read (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
               ___flmul (ARG)
                 _ADC_Read (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
             ___flmul
               _ADC_Read (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     _ADC_Read (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
               ___flmul (ARG)
                 _ADC_Read (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
                   _ADC_Read (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _letemp
     _ADC_Read
     ___fldiv
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___flmul
       _ADC_Read (ARG)
       ___xxtofl (ARG)
         _ADC_Read (ARG)
     ___xxtofl
       _ADC_Read (ARG)

 _ISR1 (ROOT)
   _mandatempext
     _USART_SendString
       _USART_TxChar
   _mandatempextativ
     _USART_SendString
       _USART_TxChar
   _mandatempideal
     _USART_SendString
       _USART_TxChar
   _mandatempint
     _USART_SendString
       _USART_TxChar
   _setatempexterna
     _EEPROM_WriteString
       _EEPROM_Write
     i2_atoi
       i2___wmul
       i2_isdigit
       i2_isspace
   _setatempinterna
     _EEPROM_WriteString
       _EEPROM_Write
     i2_atoi
       i2___wmul
       i2_isdigit
       i2_isspace

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      A8       7       65.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      20        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 00:08:34 2019

         _carregaTempExterna 4500                 ___fldiv@aexp 008E                 ___fldiv@bexp 008D  
               ___fldiv@sign 0086                 ?_LCD_Command 0001                           l20 4B6C  
                         l23 4B56                           l32 44FE                           l17 4910  
                         l26 4B38                           l45 47BC                           l37 4890  
                         _GO 007E11                 ___awdiv@sign 0065                  __CFG_BOR$ON 000000  
      carregaTempIdeal@ideal 0078          ___wmul@multiplicand 0062                  __CFG_BORV$3 000000  
                ?_LCD_String 0067                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_LVP$ON 000000  
        ?_carregaTempExterna 0001                          l201 2ADC                          l212 37E2  
                        l204 36C2                          l222 455E                          l217 3FE0  
                        l314 4BA4                          l227 43DA                          l406 1412  
                        l248 428A                          l360 3E1A                          l424 0C48  
                        l512 4434                          l281 4B96                          l513 443C  
                        l362 3E56                          l370 268C                          l450 0FE2  
                        l506 189E                          l516 4AF4                          l284 41B8  
                        l357 3DD6                          l630 3432                          l287 41E6  
                        l368 2684                          l643 3598                          l388 28C6  
                        l813 38EA                          l760 4092                          l498 1958  
                        l747 3F1C                          l781 39AA                          l790 49C2  
                        l775 413E                          l786 39F0                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000       carregaTempIdeal@adress 0076                          _abs 4892  
                        _pad 3D90                 ___awmod@sign 0065                          wreg 000FE8  
    __size_of_mandatempideal 000E                 ___flmul@aexp 0083                 ___flmul@bexp 0088  
               ___flmul@sign 0082                 ___flmul@temp 008D                 ___flmul@prod 0089  
                LCD_Char@dat 0066                 ___fltol@exp1 0069                 __CFG_WDT$OFF 000000  
                       l1100 2442                         l1111 2500                         l1103 2406  
                       l1112 24EE                         l1202 48CA                         l1130 1EE2  
                       ?_abs 0072                         l1044 1B4A                         l1140 213E  
                       l1061 1C64                         l1053 1E1A                         l1045 1B38  
                       l1109 2488                         l1205 48D2                         l1070 1D34  
                       l1046 1AFE                         l1134 2246                         l1071 1D22  
                       l1311 49FC                         l1233 2EF0                         l1137 20D8  
                       l1305 461A                         l1242 2CF2                         l1330 449E  
                       l1171 314C                         l1147 2208                         l1139 2150  
                       l1315 3CC2                         l1252 4A36                         l1260 471E  
                       l1236 2EF8                         l1245 2C36                         l1325 4496  
                       l1174 32A8                         l1086 4804                         l1185 3240  
                       l1281 3D8E                         l1178 31E4                         l1098 25E2  
                       l1266 4988                         l1197 3AF0                         l1296 46CA  
                       l1289 484C                         l1299 4BE4                         l6001 385E  
                       l5211 1988                         l5203 195A                         l6011 388A  
                       l5301 1B36                         l5221 19C2                         l5213 1998  
                       l5205 1968                         l6021 38BA                         l6101 2604  
                       l5311 1B8C                         l5303 1B58                         l5231 19F0  
                       l5223 19C8                         l5215 19A8                         l5207 1976  
                       l6023 38CA                         l6007 3876                         l6031 46D2  
                       l6111 2678                         l6103 262E                         l6041 4772  
                       l5401 1E0A                         l5321 1BC6                         l5313 1B9A  
                       l5305 1B68                         l5241 1A24                         l5233 19F2  
                       l5225 19DA                         l5217 19AA                         l5209 1978  
                       l6025 38DA                         l6017 389E                         l6009 3880  
                       l6033 46E6                         l6121 26C2                         l6113 2694  
                       l6105 264E                         l6201 099A                         l6051 478C  
                       l6043 4780                         l5331 1C32                         l5323 1BC8  
                       l5315 1BA8                         l5251 1A60                         l5235 1A02  
                       l5243 1A2C                         l5227 19DC                         l5219 19B2  
                       l6019 38AA                         l6035 4714                         l5171 3CEA  
                       l5411 3DC2                         l6131 2762                         l6123 26CC  
                       l6115 26A6                         l6107 265C                         l6211 0A0E  
                       l6203 09B2                         l6053 47A2                         l5341 1C8A  
                       l5333 1C34                         l5325 1BD2                         l5317 1BB4  
                       l5309 1B7C                         l5261 1A74                         l5253 1A64  
                       l5245 1A3C                         l5237 1A12                         l5229 19E2  
                       l5501 4AEC                         l6037 4718                         l6029 46CC  
                       l6061 2D0E                         l5173 3CF4                         l5181 4806  
                       l5421 3E28                         l5413 3DCE                         l5405 3D90  
                       l6141 2834                         l6125 26D2                         l6133 27C6  
                       l6117 26B4                         l6109 265E                         l6301 0D92  
                       l6205 09BC                         ?_pad 0070                         l6055 47A6  
                       l5351 1CB8                         l5335 1C44                         l5319 1BB8  
                       l5327 1BD8                         l5271 1A88                         l5263 1A78  
                       l5255 1A68                         l5247 1A4E                         l5239 1A22  
                       l6063 2D12                         l5511 32DE                         l5175 3D12  
                       l5167 3CC4                         l5183 4814                         l5191 49D0  
                       l5423 3E3C                         l5415 3DE2                         l5407 3D9E  
                       l6151 287A                         l6135 27E2                         l6143 2842  
                       l6127 2756                         l6119 26BA                         l5431 39F2  
                       l6311 0EA8                         l6303 0DF6                         l6215 0A42  
                       l6049 4788                         l5353 1CC6                         l5345 1C9E  
                       l5361 1CE4                         l5329 1BFE                         l5337 1C54  
                       l5273 1A8C                         l5265 1A7C                         l5257 1A6C  
                       l5249 1A5C                         l5281 1A9C                         l5601 22A0  
                       l6081 2E0C                         l6073 2D9C                         l6065 2D42  
                       l6057 2CF4                         l5521 3320                         l5513 32E2  
                       l5505 32AA                         l5177 3D48                         l5169 3CD8  
                       l5185 4826                         l5193 49D6                         l5417 3DF6  
                       l5409 3DB2                         l6153 2886                         l6145 2854  
                       l6137 2800                         l6129 275C                         l5433 3A12  
                       l6401 1284                         l6321 0F66                         l6313 0EDC  
                       l6305 0E4E                         l6241 0BA6                         l6233 0ADC  
                       l6217 0A54                         l6209 09E6                         l6161 0856  
                       l5355 1CCE                         l5347 1CA8                         l5339 1C7A  
                       l5363 1CF2                         l5291 1B0C                         l5283 1AA0  
                       l5275 1A90                         l5267 1A80                         l5259 1A70  
                       l5611 22CC                         l5603 22B0                         l6091 2EC2  
                       l6075 2DB2                         l6067 2D90                         l6059 2D0A  
                       l5531 337A                         l5523 333E                         l5515 32F0  
                       l5507 32B0                         l5427 4892                         l5187 482C  
                       l5195 49EE                         l5419 3DFC                         l6155 288E  
                       l6147 2862                         l6139 281A                         l5435 3A52  
                       l5443 3A92                         l6411 12B6                         l6403 128C  
                       l6331 0FDA                         l6323 0F76                         l6315 0F10  
                       l6307 0E84                         l6251 0C08                         l6243 0BAE  
                       l6235 0B10                         l6219 0A70                         l6227 0A8C  
                       l6171 08AA                         l6163 0860                         l5373 1D44  
                       l5381 1D9A                         l5365 1CF6                         l5357 1CD2  
                       l5349 1CB6                         l5293 1B18                         l5285 1ACA  
                       l5277 1A94                         l5269 1A84                         l5701 2572  
                       l5613 22DC                         l5621 2306                         l5605 22B6  
                       l6093 2ED4                         l6085 2E5C                         l6077 2DBA  
                       l6069 2D94                         l5533 33A8                         l5525 3346  
                       l5541 33E2                         l5517 3310                         l5509 32BE  
                       l5429 48AE                         l5189 49C4                         l6149 2868  
                       l6157 289E                         l5445 3AA4                         l5437 3A7A  
                       l5453 45BE                         l5461 4476                         l6413 12BC  
                       l6421 130E                         l6405 129A                         l6341 1096  
                       l6333 0FFE                         l6325 0FAA                         l6317 0F24  
                       l6309 0E8A                         l6253 0C1A                         l6237 0B16  
                       l6245 0BE2                         l6229 0AA4                         l6181 08EE  
                       l6173 08B4                         l6165 0870                         l6501 1486  
                       l5391 1DEC                         l5383 1DAA                         l5375 1D50  
                       l5367 1D04                         l5359 1CE2                         l5295 1B1C  
                       l5287 1AE6                         l5279 1A98                         l5711 25D0  
                       l5703 2588                         l5631 2348                         l5623 2316  
                       l5615 22EC                         l5607 22BC                         l6079 2DC2  
                       l5543 33F2                         l5535 33C8                         l5527 335A  
                       l5519 3314                         l5551 343A                         l5439 3A86  
                       l5471 2B56                         l5455 45CE                         l5199 4950  
                       l5463 4488                         l6431 135E                         l6423 1320  
                       l6415 12E4                         l6407 12A2                         l6351 10DE  
                       l6343 10A4                         l6335 1062                         l6327 0FBA  
                       l6319 0F58                         l6271 0CCA                         l6255 0C22  
                       l6247 0BF2                         l6239 0B72                         l6183 08FA  
                       l6191 0910                         l6175 08BC                         l6167 087E  
                       l6511 1520                         l6503 1494                         l5393 1DF2  
                       l5385 1DBA                         l5377 1D5E                         l5369 1D1A  
                       l5297 1B2A                         l5289 1AF6                         l5713 25D6  
                       l5705 25A2                         l5625 232C                         l5617 22FC  
                       l5609 22CA                         l6089 2EB0                         l6601 44A4  
                       l5545 3412                         l5537 33CA                         l5529 3368  
                       l5561 349A                         l5553 3448                         l5801 2092  
                       l5449 3AE8                         l5481 2C26                         l5473 2B6A  
                       l5457 443E                         l6433 1366                         l6425 133A  
                       l6417 1300                         l6409 12AA                         l6361 1108  
                       l6353 10E2                         l6337 1070                         l6345 10AC  
                       l6329 0FCE                         l6281 0D02                         l6273 0CD2  
                       l6265 0C66                         l6257 0C3C                         l6249 0BF6  
                       l6193 0938                         l6185 0902                         l6177 08CE  
                       l6169 0886                         l6521 15B2                         l6505 14B8  
                       l5395 1DF4                         l5387 1DDA                         l5379 1D98  
                       l5299 1B2C                         l5715 25D8                         l5707 25BE  
                       l5651 23CA                         l5643 2380                         l5627 233C  
                       l5635 235C                         l5619 22FE                         l6603 44C8  
                       l5539 33DC                         l5571 3510                         l5563 34B8  
                       l5555 3468                         l6099 25E4                         l5811 20E8  
                       l5803 20A0                         l5731 1E4A                         l5723 1E1C  
                       l5491 2CE2                         l5475 2B78                         l5483 2C5A  
                       l5467 2ADE                         l6451 13EC                         l6443 13B6  
                       l6435 1376                         l6427 1340                         l6419 1308  
                       l6371 113C                         l6363 110E                         l6355 10E8  
                       l6347 10C0                         l6339 1084                         l6291 0D4C  
                       l6283 0D10                         l6267 0C78                         l6275 0CD6  
                       l6259 0C54                         l6187 0906                         l6179 08DC  
                       l6531 1676                         l6523 15E8                         l6515 156A  
                       l6507 14F2                         l6611 43F0                         l5397 1DFA  
                       l5389 1DDE                         l5709 25C2                         l5661 2410  
                       l5653 23D2                         l5645 239A                         l5637 236C  
                       l5629 2344                         l6605 44CE                         l6621 4864  
                       l5581 3578                         l5573 3530                         l5565 34C0  
                       l5557 346C                         l5549 3434                         l5813 20F6  
                       l5805 20BE                         l5741 1E86                         l5733 1E5A  
                       l5725 1E2A                         l5485 2C96                         l5469 2AFE  
                       l6453 13F2                         l6445 13C8                         l6437 137C  
                       l6429 1352                         l6357 10F4                         l6349 10CE  
                       l6365 1114                         l6373 1142                         l6381 11DC  
                       l6293 0D5E                         l6285 0D14                         l6277 0CDE  
                       l6269 0C94                         l6197 096C                         l6189 090A  
                       l6461 3C18                         l6541 171E                         l6533 16BE  
                       l6525 15F8                         l6509 1512                         l6517 157C  
                       l6613 4418                         l6711 48F6                         l6703 48D4  
                       l5399 1E08                         l5671 2468                         l5663 242E  
                       l5655 23E2                         l5647 23AA                         l5639 236C  
                       l5591 2266                         l5495 49FE                         l6615 4B58  
                       l6623 486C                         l5575 3542                         l5567 34D4  
                       l5559 347A                         l5911 4002                         l5903 3FE2  
                       l5823 2160                         l5831 21A8                         l5815 20FA  
                       l5807 20C8                         l5751 1EBC                         l5743 1E8C  
                       l5735 1E6A                         l5727 1E38                         l5487 2CAA  
                       l5479 2BEA                         l6447 13D4                         l6439 1382  
                       l6391 1246                         l6383 11FA                         l6375 119A  
                       l6367 1126                         l6359 1104                         l6287 0D26  
                       l6295 0D66                         l6279 0CF0                         l6199 097E  
                       l6471 3C66                         l6551 17BA                         l6543 172C  
                       l6527 162E                         l6519 15A2                         l6607 43DC  
                       l6631 4678                         l6713 48FC                         l6705 48DC  
                       l5681 24A6                         l5673 246E                         l5665 2430  
                       l5657 23F6                         l5649 23BA                         l5593 2276  
                       l5585 2248                         l6721 4500                         l6801 37D8  
                       l6481 4B24                         l6625 4876                         l6617 4852  
                       l5569 34E2                         l5577 3548                         l5921 403A  
                       l5913 4010                         l5905 3FE8                         l5841 221C  
                       l5833 21C2                         l5825 216C                         l5817 2108  
                       l5809 20D6                         l5753 1ECC                         l5745 1E9A  
                       l5737 1E70                         l5729 1E3A                         l5489 2CD2  
                       l6449 13DC                         l6393 124A                         l6385 1216  
                       l6377 11D0                         l6369 1138                         l6297 0D6E  
                       l6289 0D34                         l6473 3C78                         l6465 3C24  
                       l6545 175C                         l6537 16F6                         l6529 1652  
                       l6609 43E4                         l6633 468A                         l6715 4902  
                       l6707 48EA                         l5691 2510                         l5683 24AA  
                       l5675 2478                         l5667 2440                         l5659 2404  
                       l5595 2286                         l5587 2256                         l6651 4B98  
                       l5499 4ACE                         l6731 452A                         l6803 37E0  
                       l6483 4B26                         l6627 487E                         l6619 4852  
                       l5579 3558                         l5923 4048                         l5931 4072  
                       l5915 4018                         l5907 3FF6                         l5843 222A  
                       l5835 21D6                         l5827 217A                         l5819 2136  
                       l5771 1F4E                         l5763 1F16                         l5755 1ED2  
                       l5747 1E9C                         l5739 1E80                         l6395 125A  
                       l6387 1228                         l6379 11D8                         l6299 0D7E  
                       l6475 3CA0                         l6467 3C32                         l6459 3BEC  
                       l6571 18F8                         l6555 1828                         l6539 1708  
                       l6491 1438                         l6635 4692                         l6811 2928  
                       l6643 4140                         l6717 4B84                         l6709 48F0  
                       l6661 3116                         l5693 251C                         l5685 24B8  
                       l5677 2486                         l5669 2452                         l5597 2296  
                       l5589 2264                         l6653 4BA2                         l6733 4546  
                       l6485 4B28                         l6629 4884                         l5861 3E5E  
                       l5933 4082                         l5925 405E                         l5917 402A  
                       l5909 3FFE                         l5941 40C4                         l5845 222C  
                       l5837 21F0                         l5829 21A4                         l5781 1F98  
                       l5773 1F66                         l5765 1F22                         l5757 1EF2  
                       l5749 1EAC                         l5853 47BE                         l6397 126C  
                       l6389 1236                         l6469 3C4A                         l6557 183A  
                       l6565 18B2                         l6549 1788                         l6493 1446  
                       l6581 1920                         l6637 469A                         l6821 298C  
                       l6813 293C                         l6805 28C8                         l6645 41C6  
                       l6719 4B86                         l6591 4B42                         l6671 318E  
                       l6663 315C                         l5695 252A                         l5687 24E6  
                       l5679 2498                         l5599 2298                         l6735 454A  
                       l6727 450A                         l6751 43C2                         l6743 4382  
                       l6487 4B36                         l6479 4B20                         l5871 3E8E  
                       l5863 3E6C                         l5935 408A                         l5927 4066  
                       l5919 4032                         l5951 413C                         l5943 40D4  
                       l5839 220C                         l5847 2232                         l5791 1FEE  
                       l5783 1FA8                         l5775 1F72                         l5767 1F2C  
                       l5759 1F02                         l5855 47D0                         l6399 1274  
                       l6583 1946                         l6567 18D6                         l6575 1906  
                       l6559 186E                         l6495 1456                         l6639 46B8  
                       l6831 29B8                         l6823 29A0                         l6815 2950  
                       l6807 28CC                         l6647 41DE                         l6593 4B44  
                       l5961 395A                         l6681 3216                         l6673 319A  
                       l6665 3172                         l6657 30F6                         l5697 2554  
                       l6761 4280                         l6729 4524                         l6753 43C6  
                       l6745 439C                         l6737 4370                         l5881 3EBC  
                       l5873 3E92                         l5865 3E74                         l5929 406C  
                       l5945 4102                         l5849 2236                         l5793 200A  
                       l5785 1FB4                         l5777 1F7E                         l5769 1F42  
                       l6577 1914                         l6569 18E4                         l6497 145A  
                       l6489 1414                         l6841 2A2A                         l6833 29BE  
                       l6817 2964                         l6809 28FA                         l6595 4B46  
                       l5971 39E8                         l5963 396A                         l5955 38EC  
                       l6691 3254                         l6683 3222                         l6675 31CC  
                       l6659 3108                         l5699 2558                         l6763 4284  
                       l6755 41E8                         l6747 43A2                         l5891 3EF0  
                       l5883 3ECA                         l5875 3E9A                         l5867 3E78  
                       l5859 3E58                         l5947 4112                         l5939 4094  
                       l5795 2016                         l5787 1FC4                         l5779 1F8C  
                       l6499 147E                         l6851 2A8E                         l6843 2A3E  
                       l6835 29DA                         l6819 2978                         l6771 35F8  
                       l6597 4B54                         l6589 4B3E                         l5973 39EE  
                       l5965 3978                         l5957 391C                         l6693 3278  
                       l6685 3230                         l6677 31CE                         l6669 3186  
                       l6781 3F9A                         l6765 4286                         l6757 41EC  
                       l6749 43A6                         l5893 3EF6                         l5885 3ED0  
                       l5877 3EAC                         l5869 3E86                         l5949 4136  
                       l5797 2032                         l5789 1FDE                         l5981 49B2  
                       l6861 2ABA                         l6853 2AA2                         l6845 2A52  
                       l6837 29DE                         l6829 29AA                         l6773 362E  
                       l5967 398A                         l5959 392C                         l6695 3288  
                       l6687 324E                         l6679 31DA                         l6783 3FA8  
                       l6775 3F1E                         l5991 3810                         l6767 4288  
                       l6759 427C                         l6935 2DF6                         l6791 3736  
                       l6599 44A0                         l5887 3EE6                         l5879 3EB4  
                       l5895 3EFC                         l5799 205C                         l6863 2AC0  
                       l6847 2A66                         l6839 2A04                         l6871 4632  
                       l5969 3998                         l6697 3296                         l6689 3250  
                       l6785 3FB0                         l6777 3F6C                         l5993 383A  
                       l5985 37E4                         l6793 3748                         l5897 3F0C  
                       l5889 3EEE                         l5977 498A                         l6849 2A7A  
                       l6769 359A                         l6881 464E                         l6873 4636  
                       l6865 461C                         l6699 3298                         l6787 3FD6  
                       l6779 3F74                         l5995 383C                         l5987 37FC  
                       l6795 3750                         l5899 3F14                         l5979 49A2  
                       l6859 2AAC                         l6891 4668                         l6883 4650  
                       l6875 463A                         l6867 4620                         _ADON 007E10  
                       l5997 384C                         l6797 3756                         l6789 36C4  
                       l6893 466C                         l6885 4652                         l6877 463E  
                       l6869 462E                         l5999 3850                         l6799 37C6  
                       l6887 4660                         l6879 464C                         l6889 4664  
                       STR_1 0831                         STR_2 0837                         STR_3 080D  
                       STR_4 0852                         STR_5 0801                         STR_6 0852  
                       STR_7 084F                         STR_8 084F                         STR_9 0819  
                       _LATB 000F8A                         u7000 1BC6                         u7001 1BC2  
                       _ISR1 0008                         u7010 1BFE                         u7011 1BFA  
                       u7100 1D1A                         u7020 1C44                         u7101 1D16  
                       u7021 1C40                         u7110 1D30                         u7030 1C7A  
                       u7111 1D2C                         u7031 1C76                         u7120 1D44  
                       u7040 1C8A                         u7200 3D9E                         u8000 217A  
                       u7121 1D40                         u7041 1C86                         u7201 3D9A  
                       u8001 2176                         u7130 1D5E                         u7050 1CB6  
                       u7210 3DC2                         u8010 21C2                         u7131 1D5A  
                       u7051 1CB2                         u7211 3DBE                         u8011 21BE  
                       u7140 1D98                         u7060 1CC6                         u7220 3E1A  
                       u8100 3FF6                         u8020 21F0                         u7300 3ADE  
                       _RCIF 007CF5                         u7141 1D94                         u7061 1CC2  
                       u7221 3E16                         u8101 3FF2                         u8021 21EC  
                       u7301 3AD8                         u7150 1DAA                         u7070 1CE2  
                       u7230 3E28                         u8110 4010                         u8030 222A  
                       u7310 3AE0                         u7151 1DA6                         u7071 1CDE  
                       u7231 3E24                         u8111 400C                         u8031 2226  
                       u8200 395A                         u7160 1DBA                         u7080 1CF2  
                       u7240 48AE                         u8040 3E6C                         u8120 402A  
                       u7320 4608                         u9000 10C0                         u8201 3956  
                       u7161 1DB6                         u7081 1CEE                         u7241 48AA  
                       u8041 3E68                         u8121 4026                         u9001 10BC  
                       u8210 3978                         u7170 1DDA                         u7090 1D04  
                       u8050 3E86                         u8130 4048                         u7250 3A34  
                       u7410 2BE6                         u7330 461A                         u9010 10CE  
                       u8211 3974                         u7171 1DD6                         u7091 1D00  
                       u8051 3E82                         u8131 4044                         u7411 2BE2  
                       u7331 4616                         u9011 10CA                         u8220 3998  
                       u7180 1DEC                         u8300 38BA                         u7500 32F0  
                       u8060 3EAC                         u8140 405E                         u7260 3A52  
                       u7420 2C0A                         u7340 4470                         u9100 133A  
                       u9020 1126                         u8221 3994                         u7181 1DE8  
                       u8301 38B6                         u7501 32EC                         u8061 3EA8  
                       u8141 405A                         u7261 3A4E                         u7405 2B8C  
                       u7341 446A                         u9101 1336                         u9021 1122  
                       u8230 39E8                         u7190 1E08                         u8310 38CA  
                       u8070 3ECA                         u8150 4082                         u7270 3A7A  
                       u7430 2C26                         u7406 2B96                         u7350 4472  
                       u9110 1352                         u9030 11FA                         u8231 39E4  
                       u7191 1E04                         u8311 38C6                         u7511 331A  
                       u8071 3EC6                         u8151 407E                         u7271 3A76  
                       u7255 3A28                         u7431 2C22                         u7407 2BA6  
                       u7327 45FE                         u9111 134E                         u9031 11F6  
                       u8320 46E6                         u8400 2DAE                         u7520 333E  
                       u7600 3510                         u8080 3EE6                         u8160 40C4  
                       u8240 49A2                         u7280 3AA4                         u7440 2C7A  
                       u6800 4984                         u7360 4488                         u9120 13B0  
                       u9040 1216                         u9200 1438                         u8321 46E2  
                       u8401 2DAA                         u7521 333A                         u7601 350C  
                       u8081 3EE2                         u8161 40C0                         u8241 499E  
                       u7281 3AA0                         u7425 2C00                         u7361 4484  
                       u9121 13AA                         u9041 1212                         u9201 1434  
                       u6810 1976                         u8250 37FC                         u8330 4714  
                       u8410 2DE2                         u7530 3368                         u7610 3558  
                       u6730 3CD8                         u8090 3F0C                         u8170 4102  
                       u7450 2C96                         u7370 2B28                         u9130 13B2  
                       u9050 1228                         u9210 147E                         u6811 1972  
                       u8251 37F8                         u8331 4710                         u7531 3364  
                       u7611 3554                         u6731 3CD4                         u8091 3F08  
                       u8171 40FE                         u7451 2C92                         u9051 1224  
                       u9211 147A                         u8340 47A2                         u6900 1ACA  
                       u6820 1988                         u7700 23E2                         u7620 2264  
                       u8260 3830                         u8420 2E40                         u7540 33A8  
                       u6740 3CEA                         u8500 262E                         u8180 4136  
                       u7460 2CD2                         u7380 2B56                         u9140 13C8  
                       u9060 1236                         u9300 1708                         u9220 14B8  
                       u8341 479E                         u6901 1AC6                         u6821 1984  
                       u7701 23DE                         u7621 2260                         u7541 33A4  
                       u6741 3CE6                         u8501 262A                         u8181 4132  
                       u7461 2CCE                         u7445 2C70                         u7381 2B52  
                       u9141 13C4                         u9061 1232                         u9301 1704  
                       u9221 14B4                         u8350 47BC                         u8190 391C  
                       u6910 1AE2                         u6830 1998                         u7710 2404  
                       u7630 2276                         u8270 385E                         u7470 4A30  
                       u8430 2E84                         u7550 33F2                         u6750 3D12  
                       u8510 265C                         u7390 2B78                         u9070 126C  
                       u9150 3C18                         u9310 17BA                         u9230 1562  
                       u8351 47B8                         u8191 3918                         u6911 1ADC  
                       u6831 1994                         u7711 2400                         u7631 2272  
                       u8271 385A                         u7471 4A2A                         u7551 33EE  
                       u6751 3D0E                         u8511 2658                         u7295 3AB6  
                       u7391 2B74                         u7375 2B1E                         u9071 1268  
                       u9151 3C14                         u9311 17B6                         u9231 155C  
                       u6920 1AE4                         u6840 19DA                         u7800 2510  
                       u7720 242E                         u7640 2286                         u8280 3872  
                       u7480 4A32                         u8440 2EAA                         u8360 2D32  
                       u9400 4864                         u7560 3448                         u6760 3D48  
                       u8600 2854                         u8520 2678                         u9080 129A  
                       u9160 3C4A                         u9320 1820                         u9240 1564  
                       u6841 19D6                         u7801 250C                         u7721 242A  
                       u7641 2282                         u8281 386E                         u8265 3826  
                       u8441 2EA4                         u8417 2DD8                         u9401 4860  
                       u7561 3444                         u6761 3D44                         u8601 2850  
                       u8521 2674                         u9081 1296                         u9161 3C46  
                       u9321 181A                         u6930 1B0C                         u6850 19F0  
                       u7810 252A                         u7730 2452                         u7650 22CA  
                       u8290 389A                         u8450 2EAC                         u8370 2D42  
                       u7490 32BE                         u7570 347A                         u6770 484C  
                       u8610 2862                         u8530 26A6                         u9090 1320  
                       u9170 3C66                         u9330 1822                         u9250 157C  
                       u9410 416C                         u6931 1B08                         u6851 19EC  
                       u7811 2526                         u7731 244E                         u7651 22C6  
                       u8291 3896                         u8427 2E36                         u8371 2D3E  
                       u7491 32BA                         u7571 3476                         u6771 4848  
                       u8611 285E                         u8531 26A2                         u9091 131C  
                       u9171 3C62                         u9251 1578                         u9411 4164  
                       u9500 3172                         u6940 1B2A                         u6860 1A02  
                       u7820 2572                         u7740 2468                         u7660 22DC  
                       u8460 2EC2                         u8380 2D6C                         u7580 34B8  
                       u6780 49EE                         u8620 287A                         u8540 26B4  
                       u7900 1EBC                         u8700 097E                         u9180 3C78  
                       u9340 183A                         u9260 15B2                         u9501 316E  
                       u6941 1B26                         u6861 19FE                         u7821 256E  
                       u7741 2464                         u7661 22D8                         u8461 2EBE  
                       u8437 2E7A                         u7581 34B4                         u6781 49EA  
                       u8621 2876                         u8541 26B0                         u7901 1EB8  
                       u8701 097A                         u9181 3C74                         u9341 1836  
                       u9261 15AE                         u9510 31C8                         u6950 1B4A  
                       u6870 1A12                         u7830 25A2                         u7750 2486  
                       u7670 22EC                         u8470 2ED4                         u8390 2D90  
                       u7590 34E2                         u8550 27E2                         u7910 1EF2  
                       u6790 4982                         u8710 0A0E                         u8630 087E  
                       u9190 3CA0                         u9350 18D6                         u9270 15F8  
                       u9511 31C4                         u6951 1B46                         u6871 1A0E  
                       u7831 259E                         u7751 2482                         u7671 22E8  
                       u8471 2ED0                         u8391 2D8C                         u8367 2D28  
                       u7591 34DE                         u8551 27DE                         u7911 1EEE  
                       u6791 497C                         u8711 0A0A                         u8631 087A  
                       u9191 3C9C                         u9351 18D2                         u9271 15F4  
                       u9520 3212                         u9600 3F6C                         u6960 1B58  
                       u6880 1A4E                         u7840 25D0                         u7760 24A6  
                       u7680 232C                         u9360 44C4                         u8560 2800  
                       u8480 2616                         u7920 1F02                         u8800 0C3C  
                       u8720 0A3C                         u8640 08CE                         u9280 1652  
                       u9440 4198                         u9521 320E                         u9601 3F68  
                       u6961 1B54                         u6881 1A4A                         u7841 25CC  
                       u7761 24A2                         u7681 2328                         u8561 27FC  
                       u8481 2610                         u7921 1EFE                         u8801 0C38  
                       u8721 0A36                         u8641 08CA                         u9281 164E  
                       u9441 418E                         u9530 3230                         u9610 3F8A  
                       u6970 1B68                         u6890 1A5C                         u7770 24B8  
                       u7690 236C                         u9370 44EE                         u8570 281A  
                       u8490 2618                         u7930 207C                         u7850 1E38  
                       u8810 0C62                         u8730 0A3E                         u8650 08DC  
                       u9290 1676                         u9434 417E                         u9531 322C  
                       u9611 3F82                         u6971 1B64                         u6891 1A58  
                       u7771 24B4                         u7691 2368                         u8387 2D62  
                       u8571 2816                         u7851 1E34                         u8811 0C5E  
                       u8651 08D8                         u9291 1672                         u9435 417A  
                       u9540 3240                         u6980 1B9A                         u7780 24E6  
                       u9700 37D8                         u9380 44FE                         u8580 2834  
                       u7940 20D6                         u7860 1E4A                         u8900 0D5E  
                       u8820 0C78                         u8740 0A54                         u8660 08EE  
                       u9428 4170                         u9541 323C                         u6981 1B96  
                       u7781 24E2                         u9701 37D4                         u9381 44FA  
                       u8581 2830                         u7941 20D2                         u7861 1E46  
                       u8901 0D5A                         u8821 0C74                         u8741 0A50  
                       u8661 08EA                         u9550 324E                         u6990 1BA8  
                       u7790 24FC                         u8590 2842                         u7950 20F6  
                       u7870 1E5A                         u8910 0EA8                         u8830 0C94  
                       u8750 0AD8                         u8670 0938                         u9390 4434  
                       u9710 29DA                         u9470 41C6                         u9551 324A  
                       u6991 1BA4                         u7791 24F8                         u9367 44BA  
                       u8591 283E                         u7951 20F2                         u7935 2072  
                       u7871 1E56                         u8911 0EA4                         u8831 0C90  
                       u8751 0AD4                         u8671 0934                         u9391 4430  
                       u9711 29D6                         u9471 41C2                         u9560 3288  
                       u9480 3108                         u9640 3FC6                         u7960 2108  
                       u7880 1E9A                         u8920 0F10                         u8840 0CCA  
                       u8760 0B6E                         u8680 0966                         u9720 2ADC  
                       u9464 41AA                         u9561 3284                         u9481 3104  
                       u9641 3FBE                         u9377 44E4                         u7961 2104  
                       u7881 1E96                         u8921 0F0C                         u8841 0CC6  
                       u8761 0B6A                         u8681 0960                         u9721 2AD8  
                       u9465 41A6                         u9570 3296                         u9490 3116  
                       u7970 2136                         u7890 1EAC                         u8930 0F58  
                       u8850 0CF0                         u8770 0BE2                         u8690 0968  
                       u9458 419C                         u9571 3292                         u9491 3112  
                       u9635 3FA2                         u7971 2132                         u7891 1EA8  
                       u8931 0F54                         u8851 0CEC                         u8771 0BDE  
                       u9636 3FA4                         u9628 3F8E                         u9580 4546  
                       u7980 214C                         u8940 0F66                         u8860 0D02  
                       u8780 0C08                         u9581 4542                         u7981 2148  
                       u8941 0F62                         u8861 0CFE                         u8781 0C04  
                       u9590 43C2                         u9670 3736                         u7990 2160  
                       u8950 0FCE                         u8870 0D10                         u8790 0C1A  
                       u9591 43BE                         u9671 3732                         u7991 215C  
                       u8951 0FCA                         u8871 0D0C                         u8791 0C16  
                       u9680 3748                         u8960 1070                         u8880 0D26  
                       u9665 3FDE                         u9681 3744                         u8961 106C  
                       u8881 0D22                         u9666 3FE0                         u9658 3FCA  
                       u9690 37C6                         u8970 1084                         u8890 0D34  
                       u9691 37C2                         u8971 1080                         u8891 0D30  
                       u8980 1096                         u8981 1092                         u8990 10A4  
                       u8991 10A0                         _TXIF 007CF4                         abs@a 0072  
                       _dbuf 0108         ??_carregaTempExterna 0076                         _atoi 2CF4  
                       _main 461C                         _dtoa 25E4           __size_of_LCD_Clear 0016  
                       _prec 0031                         _nout 002D                         pad@i 0077  
                       pad@p 0074                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf1 000FE7                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 0079                         fsr2l 000FD9                         btemp 0045  
   __end_of_USART_SendString 4AA0             __end_of_ADC_Init 4B98             __end_of_ADC_Read 41E8  
              ___fpclassifyf 39F2                  i2_atoi$1264 0010                  i2_atoi$1265 0014  
                i2_atoi$1266 0012                         prodh 000FF4                         prodl 000FF3  
                       start 000E              __end_of_MSdelay 47BE                __CFG_IESO$OFF 000000  
            ___fldiv@new_exp 0087                _LCD_String_xy 484E                 _tolower$1380 006C  
               ___param_bank 000000                        ??_abs 0074         __end_of_EEPROM_Write 4ACE  
                      ??_pad 0076             __end_of_LCD_Char 4B3A                        ?_ISR1 0001  
           __end_of_LCD_Init 4912                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
              ___fltol@sign1 0068              __end_of___aodiv 3434                        ?_atoi 0067  
            __end_of___fladd 1E1C                        ?_main 0001                        ?_dtoa 007B  
            __end_of___aomod 359A              __end_of___fldiv 25E4              __end_of___awdiv 3F1E  
            __end_of___flneg 49C4                        _EEADR 000FA9                        STR_10 0852  
                      STR_11 0825                        STR_12 0852                        STR_21 084C  
                      STR_13 083C                        STR_14 0844                        STR_23 084C  
                      STR_17 0840                        STR_18 0848              __end_of___awmod 4094  
            __end_of___flmul 2248              __end_of___flsub 4806              __end_of___fltol 38EC  
            ___awdiv@divisor 0062                        _LATD0 007C60                        _LATD1 007C61  
              ?_mandatempint 0001                ?_mandatempext 0001                        i2l302 4ABC  
                      i2l311 494E                        i2l143 3B2A                        i2l304 4ACA  
                      i2l160 431C                        i2l152 3BC0                        i2l305 4ACC  
                      i2l161 4320                        i2l145 3B38                        i2l170 428E  
                      i2l251 4B70                        i2l155 4300                        i2l260 4A9E  
                      i2l164 432E                        i2l181 42CA                        i2l173 429C  
                      i2l254 4B82                        i2l166 433C                        i2l158 430E  
                      i2l182 42FC                        i2l191 4BCE                        i2l167 436E  
                      i2l175 42AA                        i2l176 42AE                        i2l185 4BB2  
                      i2l194 4BC0                        i2l179 42BC                        i2l188 4BDC  
                      i2l516 4B1A              ___awdiv@counter 0064                        _RCREG 000FAE  
                      _RCSTA 000FAB                 vfpfcnvrt@fmt 00F1                        _SPBRG 000FAF  
              __CFG_USBDIV$1 000000                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISD 000F95                        _TXREG 000FAD                        _TXSTA 000FAC  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000                   i2isdigit@c 0001  
                      _flags 0033                        _fputc 3CC4                        _fputs 4806  
            __end_of_isdigit 4A38                        atoi@n 0074                        pad@fp 0070  
                      atoi@s 0067                        _power 0043                        _width 002F  
                      _putch 4BE4                        dtoa@d 007D                        dtoa@i 009D  
                      dtoa@n 0095                        dtoa@p 008F                        dtoa@s 0093  
                      dtoa@w 0091              __end_of_isspace 4720              __end_of_isupper 498A  
                      tablat 000FF5             __end_ofi2___wmul 4B1C                  escreveLCD@i 01A0  
                      ttemp5 0046                        ttemp6 0049                        ttemp7 004D  
                      status 000FD8                   i2isspace@c 0001                        wtemp8 0046  
        __size_of_LCD_String 0060              __end_of_sprintf 46CC               ?___fpclassifyf 0060  
            __end_of_tolower 44A0              __end_of_strncmp 3CC4               __CFG_ICPRT$OFF 000000  
           EEPROM_Write@data 0003               __CFG_PBADEN$ON 000000               ?_LCD_String_xy 0069  
       __size_of_EEPROM_Read 000E                  ?_USART_Init 009F                 __end_of_ISR1 3BEC  
             __CFG_MCLRE$OFF 000000              __initialization 4560                 __end_of_atoi 2EFA  
               __end_of_main 4678                 __end_of_dtoa 28C8                       ??_ISR1 001A  
         __size_ofi2_isdigit 0038           __size_ofi2_isspace 0052               ??_mandatempint 0004  
             ??_mandatempext 0004                       ??_atoi 0069                       ??_main 00FF  
                     ??_dtoa 0085            __end_of_LCD_Clear 4B6E                __activetblptr 000002  
   __end_of_mandatempextativ 4BD0              _setatempinterna 428C              _setatempexterna 42FE  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     ?_fputc 0060                       ?_fputs 0069                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _EEDATA 000FA8                       _EECON2 000FA7  
           ___awdiv@dividend 0060                       ?_putch 0001             LCD_String_xy@msg 006A  
           LCD_String_xy@pos 0069             LCD_String_xy@row 006C                    ??_MSdelay 0062  
                     i2l1233 30E8                       i2l1252 4A6E                       i2l1260 4770  
                     i2l1236 30F0                       i2l5111 3B68                       i2l5103 3B3C  
                     i2l5041 428C                       i2l5121 3BA6                       i2l5113 3B7A  
                     i2l5105 3B4E                       i2l5051 42FE                       i2l5043 42CE  
                     i2l5123 3BAA                       i2l5115 3B7E                       i2l5107 3B52  
                     i2l5061 4BA6                       i2l5053 4340                       i2l5045 42D2  
                     i2l5125 3BBC                       i2l5117 3B90                       i2l5109 3B64  
                     i2l5063 4BD0                       i2l5055 4344                       i2l5047 42E6  
                     i2l5119 3B94                       i2l5065 4BB4                       i2l5057 4358  
                     i2l5049 42FA                       i2l5067 4BC2                       i2l5059 436C  
                     i2l4701 4AB8                       i2l4703 4ABA                       i2l4713 4AF6  
                     i2l4715 4B12                       i2l4731 476A                       i2l4723 4720  
                     i2l5099 3B1C                       i2l4725 4724                       i2l4751 4912  
                     i2l4719 4A38                       i2l4727 4738                       i2l4761 4A70  
                     i2l4753 4916                       i2l4729 4766                       i2l4841 2EFA  
                     i2l4763 4A74                       i2l4755 492E                       i2l4851 2F90  
                     i2l4843 2F0E                       i2l4693 4B70                       i2l4765 4A82  
                     i2l4757 4932                       i2l4861 2FB8                       i2l4853 2F94  
                     i2l4845 2F12                       i2l4695 4B7E                       i2l4767 4A86  
                     i2l4759 4936                       i2l4863 2FC0                       i2l4847 2F16  
                     i2l4697 4AA0                       i2l4873 30A8                       i2l4865 3008  
                     i2l4857 2F9A                       i2l4849 2F46                       i2l4699 4AB0  
                     i2l4875 30BA                       i2l4859 2FB0                       i2l4877 30CC  
                     i2l4869 3056                       i2l6937 2FF2                       _OSCCON 000FD3  
                     _TRISC6 007CA6                       _TRISC7 007CA7             __end_of___xxtofl 32AA  
                     i2_atoi 2EFA               __CFG_XINST$OFF 000000             __end_of_compTemp 37E4  
               vfprintf@cfmt 018A                       ___flge 38EC                       ___fleq 4094  
                  ??___aodiv 0070                    ??___fladd 0097                    ??___aomod 0070  
                     ___wmul 4ACE                    ??___fldiv 007E                    ??___awdiv 0064  
                  ??___flneg 0064               __CFG_STVREN$ON 000000                    ??___awmod 0064  
                  ??___flmul 007E                    ??___flsub 00A7                    ??___fltol 0064  
                     _efgtoa 0856              ADC_Read@channel 0060                       _floorf 2ADE  
                     _ligado 0037                       _letemp 359A              ADC_Read@digital 0066  
                     clear_0 459E                       clear_1 45AA             ___awdiv@quotient 0066  
            ___awmod@divisor 0062              ___awmod@counter 0064                       pad@buf 0072  
       __size_of_LCD_Command 001E                       dtoa@fp 007B                       _strcpy 45BE  
                     _strlen 49C4                       fputc@c 0060                       fputs@c 006D  
                     fputs@i 006E                 __pdataCOMRAM 0043                       fputs@s 0069  
                  ??_isdigit 0062              ___fpclassifyf@e 0068                    ?_ADC_Init 0001  
            ___fpclassifyf@u 006A                    ?_ADC_Read 0060              ___fpclassifyf@x 0060  
             _mandatempideal 4BB4                 __mediumconst 0000                    ??_isspace 0062  
                     tblptrh 000FF7                    ??_isupper 0062                       tblptrl 000FF6  
                     tblptru 000FF8          __size_of_USART_Init 00A4         setatempinterna@valor 0017  
                     putch@c 0001             __end_of_vfprintf 443E                    ??_sprintf 00FF  
                  ??_tolower 0068                    ??_strncmp 0066                   ___flge@ff1 009F  
                 ___flge@ff2 00A3              ??___fpclassifyf 0064                 ___xxtofl@arg 0072  
          __end_ofi2_isdigit 4A70                 ___xxtofl@exp 0071                 ___xxtofl@val 0068  
                 ___fleq@ff1 0060                   ___fleq@ff2 0064                    ?_LCD_Char 0001  
                 __accesstop 0060      __end_of__initialization 45B0                    ?_LCD_Init 0001  
          __end_ofi2_isspace 4772            ?_carregaTempIdeal 0001              ??_LCD_String_xy 006C  
                 ___flneg@f1 0060                ___rparam_used 000001                   ___fltol@f1 0060  
         ??_carregaTempIdeal 0076        __size_of_EEPROM_Write 002E               __pcstackCOMRAM 0001  
           _TempExteAtivacao 0162                 __pidataBANK1 4BDE                __end_of_fputc 3D90  
              __end_of_fputs 484E                __end_of_putch 4BE6                 ??_LCD_String 0069  
    __end_of_setatempinterna 42FE      __end_of_setatempexterna 4370       __end_of_mandatempideal 4BC2  
                  ?i2___wmul 0001                   ??_ADC_Init 0060                   ??_ADC_Read 0062  
        carregaTempExterna@i 0079         setatempexterna@valor 0017                      ??_fputc 0064  
                    ??_fputs 006D                      ??_putch 0060                 _EEPROM_Write 4AA0  
                 __pbssBANK1 0100            carregaTempIdeal@i 007B                   ??_LCD_Char 0066  
           _TempInternaIdeal 0158                   ??_LCD_Init 0067             _TempInternaAtual 0104  
                    ISR1@res 0024         __end_of_mandatempint 4BB4         __end_of_mandatempext 4BDE  
                    ?i2_atoi 0008           __end_of_LCD_String 4500            ?_USART_SendString 0002  
__size_of_EEPROM_WriteString 003E                   _efgtoa$761 00BB                   _efgtoa$770 00C1  
                 _efgtoa$762 00BD                   _efgtoa$771 00C3                   _efgtoa$772 00C5  
                 _efgtoa$766 00BF           ??_USART_SendString 0004                      ?___flge 009F  
                    ?___fleq 0060                      ?___wmul 0060                      ?_efgtoa 00AB  
                    ?_floorf 008F                      ?_letemp 0001             _TempExternaAtual 0100  
                    ?_strcpy 0060                      ?_strlen 0060                   ??i2___wmul 0005  
            ?_mandatempideal 0001                    ?___xxtofl 0068           __size_of_vfpfcnvrt 0546  
                  ?_compTemp 0001                      _MSdelay 4772                  _TempExtAtiv 01A4  
            __CFG_VREGEN$OFF 000000                      i2atoi@n 0015                      i2atoi@s 0008  
                _TempInterna 0039                  _TempExterna 016C                   _escreveLCD 28C8  
__size_of_carregaTempExterna 0060              __size_ofi2_atoi 01F8                LCD_String@msg 0067  
               ??_USART_Init 00A1                      __Hparam 0000                      __Lparam 0000  
            __size_of___flge 0106              __size_of___fleq 00AC                      ___aodiv 32AA  
                    ___fladd 195A                      ___aomod 3434                      ___fldiv 2248  
                    ___awdiv 3E58                      ___flneg 498A                      ___awmod 3FE2  
                    ___flmul 1E1C                      ___flsub 47BE                      ___fltol 37E4  
            __size_of___wmul 0028                    ?_vfprintf 00F9                 __psmallconst 0800  
            __size_of_efgtoa 0BBE              __size_of_floorf 0216                      __pcinit 4560  
            __size_of_letemp 012A                      __ramtop 0800             ?_setatempinterna 0001  
                    __ptext0 461C                      __ptext1 359A                      __ptext2 4140  
                    __ptext3 28C8                      __ptext4 4678                      __ptext5 43DC  
                    __ptext6 1414                      __ptext7 3BEC                      __ptext8 0856  
                    __ptext9 443E          USART_SendString@out 0002             ?_setatempexterna 0001  
            __size_of_strcpy 005E              __size_of_strlen 003A               USART_Init@temp 00A1  
               __size_of_abs 0042                 __size_of_pad 00C8                      _isdigit 49FE  
                 ??___xxtofl 006C             ___awmod@dividend 0060                      _isspace 46CC  
                    _isupper 4950                      efgtoa@c 00B1                      efgtoa@d 00CF  
                    efgtoa@e 00E7                      efgtoa@f 00AD                      efgtoa@g 00E3  
                    efgtoa@h 00D9                      efgtoa@i 00E1                      efgtoa@l 00DD  
                    efgtoa@m 00CB                      efgtoa@n 00E9                      efgtoa@p 00D3  
                    efgtoa@t 00C7                      efgtoa@u 00EB                      efgtoa@w 00D6  
                  _LCD_Clear 4B58            ?_mandatempextativ 0001                      atoi@neg 006D  
         __end_of_USART_Init 428C                      _sprintf 4678                      _tolower 443E  
                 ??_compTemp 00AB                      _strncmp 3BEC               __pintcode_body 3AF2  
         ??_mandatempextativ 0004         end_of_initialization 45B0                      floorf@e 009D  
                    floorf@m 0099                      floorf@u 009F                      floorf@x 008F  
              ??_EEPROM_Read 0062                      fputc@fp 0062               LCD_Command@cmd 0066  
              __Lmediumconst 0000                      int_func 3AF2                      fputs@fp 006B  
        i2___wmul@multiplier 0001            __end_of_vfpfcnvrt 195A                   efgtoa@mode 00D8  
                 efgtoa@sign 00D1                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
                 ??_vfprintf 00FF                      strcpy@d 0068                      strlen@a 0062  
                    strcpy@s 0066                      strlen@s 0060                    _PORTAbits 000F80  
                ___fladd@grs 009E                ___xxtofl@sign 0070                    _TRISAbits 000F92  
                 ?_LCD_Clear 0001                  ___fldiv@grs 0089                  ___fldiv@rem 0082  
          __size_of_ADC_Init 0014            __size_of_ADC_Read 00A8       EEPROM_WriteString@data 0006  
      __size_of_mandatempint 000E        __size_of_mandatempext 000E          USART_Init@baud_rate 009F  
                ___flmul@grs 0084                  ?_escreveLCD 0001                ?_USART_TxChar 0001  
          __size_of_LCD_Char 001E                    i2_isdigit 4A38            __size_of_LCD_Init 003E  
             __end_ofi2_atoi 30F2                    i2_isspace 4720          __end_of_EEPROM_Read 4BA6  
                  i2atoi@neg 000E                ??_LCD_Command 0066               __end_of___flge 39F2  
             __end_of___fleq 4140                  vfpfcnvrt@ap 00F3                  vfpfcnvrt@ct 0186  
                vfpfcnvrt@fp 00EF                  vfpfcnvrt@ll 0176               __end_of___wmul 4AF6  
              __pidataCOMRAM 4BE2    __size_of_carregaTempIdeal 006C               __end_of_efgtoa 1414  
             __end_of_floorf 2CF4               __end_of_letemp 36C4                   floorf@F524 0025  
           i2___wmul@product 0005                 _mandatempint 4BA6                 _mandatempext 4BD0  
             __end_of_strcpy 461C               __end_of_strlen 49FE          start_initialization 4560  
          __size_ofi2___wmul 0026                  __end_of_abs 48D4                  __end_of_pad 3E58  
             ??_USART_TxChar 0001        __end_of___fpclassifyf 3AF2                     ??i2_atoi 000A  
      __end_of_LCD_String_xy 4892                   ?i2_isdigit 0001                   ?i2_isspace 0001  
                vfprintf@fmt 00FB                     ??___flge 00A7                     ??___fleq 0068  
                   ??___wmul 0064             ??_mandatempideal 0004                     ??_efgtoa 00B2  
                __pdataBANK1 01A4                     ??_floorf 0093             __CFG_LPT1OSC$OFF 000000  
                   ??_letemp 008F                     ??_strcpy 0064                     ??_strlen 0062  
  __size_of_USART_SendString 0030                    ___fladd@a 0093                    ___fladd@b 008F  
        __size_of_escreveLCD 0216                    ___fldiv@a 007A                    ___fldiv@b 0076  
        __end_of_LCD_Command 4B58                    ___flmul@a 007A                    ___flmul@b 0076  
                __pbssCOMRAM 0025                    ___flsub@a 00A3                    ___flsub@b 009F  
              __pcstackBANK0 0060                __pcstackBANK1 0176             ___aodiv@dividend 0060  
                ??_LCD_Clear 0067            __size_of___xxtofl 01B8    EEPROM_WriteString@address 0004  
                   ?_MSdelay 0060            __size_of_compTemp 0120   __end_of_EEPROM_WriteString 4950  
                _EEPROM_Read 4B98                    _atoi$1264 006F                    _atoi$1265 0073  
                  _atoi$1266 0071                    __pintcode 0008                     ?___aodiv 0060  
                   ?___fladd 008F                     ?___aomod 0060                     ?___fldiv 0076  
                   ?___awdiv 0060             ___aodiv@quotient 0072                     ?___flneg 0060  
                   ?___awmod 0060                     ?___flmul 0076                     ?___flsub 009F  
                   ?___fltol 0060            __size_of_vfprintf 0062                  __smallconst 0800  
                   ?_isdigit 0060                     _ADC_Init 4B84                     _ADC_Read 4140  
                   ?_isspace 0060                     ?_isupper 0060        LCD_String_xy@location 006D  
                   ?_sprintf 018C                     ?_tolower 0066               __size_of_fputc 00CC  
             __size_of_fputs 0048            _TempExternaMinima 3F1E                     ?_strncmp 0060  
             __size_of_putch 0002   __end_of_carregaTempExterna 4560                     MSdelay@i 0062  
                   MSdelay@j 0064           ?_TempExternaMinima 0001                     _LCD_Char 4B1C  
                   _LCD_Init 48D4               ___wmul@product 0064                     _PIE1bits 000F9D  
                ??i2_isdigit 0003                  ??i2_isspace 0003    __size_of_mandatempextativ 000E  
                   i2u603_40 4B7E                     i2u611_40 494E                     i2u603_41 4B7A  
                   i2u611_41 494A                     _PIR2bits 000FA1          ??_TempExternaMinima 00AB  
                   i2u612_40 4A9E                     i2u604_40 4ACA                     i2u612_41 4A9A  
                   i2u604_41 4AC6                     i2u606_40 4A68                     i2u630_40 2F36  
                   i2u606_41 4A62                     i2u630_47 2F2C                     i2u607_40 4A6A  
                   i2u631_40 2F46                     i2u631_41 2F42                     i2u608_40 4738  
                   i2u640_40 30BA                     i2u632_40 2F6E                     i2u608_41 4734  
                   i2u640_41 30B6                     i2u632_47 2F64                     i2u609_40 4766  
                   i2u641_40 30CC                     i2u633_40 2F90                     i2u609_41 4762  
                   i2u641_41 30C8                     i2u633_41 2F8C                     i2u634_40 2FAC  
                   i2u634_41 2FA8                     i2u635_40 2FE0                     i2u635_47 2FD6  
                   i2u636_40 303C                     i2u660_40 42CA                     i2u660_41 42C6  
                   i2u636_47 3032                     i2u637_40 307E                     i2u661_40 430E  
                   i2u661_41 430A                     i2u637_47 3074                     i2u638_40 30A2  
                   i2u662_40 431C                     i2u670_40 3B90                     i2u638_41 309C  
                   i2u662_41 4318                     i2u670_41 3B8C                     i2u639_40 30A4  
                   i2u663_40 432E                     i2u671_40 3BA6                     i2u663_41 432A  
                   i2u671_41 3BA2                     i2u664_40 433C                     i2u672_40 3BBC  
                   i2u664_41 4338                     i2u672_41 3BB8                     i2u657_40 429C  
                   i2u665_40 3B2A                     i2u657_41 4298                     i2u665_41 3B26  
                   i2u658_40 42AA                     i2u666_40 3B38                     i2u658_41 42A6  
                   i2u666_41 3B34                     i2u659_40 42BC                     i2u667_40 3B4E  
                   i2u659_41 42B8                     i2u667_41 3B4A                     i2u668_40 3B64  
                   i2u668_41 3B60                     i2u669_40 3B7A                     i2u669_41 3B76  
           __CFG_WDTPS$32768 000000                  _LCD_Command 4B3A                    _vfpfcnvrt 1414  
               _TempIdealInt 01A6             _carregaTempIdeal 4370                   _ADCON0bits 000FC2  
       __end_of_USART_TxChar 4B84            ___wmul@multiplier 0060                     i2___wmul 4AF6  
  __end_of_TempExternaMinima 3FE2                 _isspace$1295 0066     __size_of_setatempinterna 0072  
                 vfpfcnvrt@c 0189                   vfpfcnvrt@f 0182     __size_of_setatempexterna 0072  
                  copy_data0 4574             __size_of_MSdelay 004C                 ??_escreveLCD 00FF  
                 _EECON1bits 000FA6                     __Hrparam 0000                   vfprintf@ap 00FD  
                   __Lrparam 0000                   vfprintf@fp 00F9             __size_of___aodiv 018A  
           __size_of___fladd 04C2             __size_of___aomod 0166             __size_of___fldiv 039C  
           __size_of___awdiv 00C6             __size_of___flneg 003A             __size_of___awmod 00B2  
           __size_of___flmul 042C             __size_of___flsub 0048             __size_of___fltol 0108  
      i2___wmul@multiplicand 0003                   ?_vfpfcnvrt 00EF              ___aodiv@divisor 0068  
            ___aodiv@counter 0070             _USART_SendString 4A70           ___fpclassifyf@F463 0029  
                 sprintf@fmt 018E                     ___xxtofl 30F2           __end_of_escreveLCD 2ADE  
           __size_of_isdigit 003A                     _dtoa$737 008D             __size_of_isspace 0054  
                   __ptext10 4950                     __ptext11 45BE                     __ptext20 25E4  
                   __ptext12 2ADE                     __ptext21 3D90                     __ptext13 39F2  
                   __ptext30 44A0                     __ptext22 49C4                     __ptext14 47BE  
                   __ptext31 4B1C                     __ptext23 4806                     __ptext15 498A  
                   __ptext40 4B98                     __ptext32 4B58                     __ptext24 3CC4  
                   __ptext16 1E1C                     __ptext41 41E8                     __ptext33 36C4  
                   __ptext25 4BE4                     __ptext17 4094                     __ptext50 4772  
                   __ptext42 37E4                     __ptext34 4370                     __ptext26 4892  
                   __ptext18 3FE2                     __ptext51 4B84                     __ptext43 2248  
                   __ptext35 4500                     __ptext27 3434                     __ptext19 3E58  
                   __ptext60 4AA0                     __ptext44 195A                     __ptext36 2CF4  
                   __ptext28 32AA                     __ptext61 4BA6                     __ptext53 428C  
                   __ptext45 3F1E                     __ptext37 46CC                     __ptext29 484E  
                   __ptext62 4BB4                     __ptext54 42FE                     __ptext46 30F2  
                   __ptext38 49FE                     __ptext63 4BC2                     __ptext55 2EFA  
                   __ptext47 38EC                     __ptext39 4ACE                     __ptext64 4BD0  
                   __ptext56 4720                     __ptext48 48D4                     __ptext65 4A70  
                   __ptext57 4A38                     __ptext49 4B3A                     __ptext66 4B6E  
                   __ptext58 4AF6                     __ptext59 4912             __size_of_isupper 003A  
                   _compTemp 36C4                ?_EEPROM_Write 0001             __size_of_sprintf 0054  
           __size_of_tolower 0062                __size_of_ISR1 3BE4                   strcpy@dest 0060  
           __size_of_strncmp 00D8                     _liberado 0035                __size_of_atoi 0206  
              __size_of_main 005C                __size_of_dtoa 02E4                   MSdelay@val 0060  
                   efgtoa@fp 00AB                     efgtoa@ne 00CD                     efgtoa@pp 00C9  
                   efgtoa@ou 00B7              escreveLCD@i_348 01A2                     int$flags 0045  
                   _vfprintf 43DC                   _LCD_String 44A0             ___aomod@dividend 0060  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2   __size_of_TempExternaMinima 00C4  
                   isdigit@c 0060              USART_TxChar@out 0001               ??_EEPROM_Write 0004  
                   intlevel2 0000                    sprintf@ap 0198                     isspace@c 0060  
               ?_EEPROM_Read 0060            ??_setatempinterna 0017            ??_setatempexterna 0017  
                  strcpy@src 0062                     isupper@c 0060                    strncmp@_l 0060  
                  strncmp@_r 0062             _mandatempextativ 4BC2           EEPROM_Read@address 0060  
                efgtoa@nmode 00D5        __size_of_USART_TxChar 0016           _EEPROM_WriteString 4912  
            ___aomod@divisor 0068                  ??_vfpfcnvrt 00F5              ___aomod@counter 0070  
              _vfpfcnvrt$791 0180                _vfpfcnvrt$786 017E          __CFG_FOSC$INTOSC_EC 000000  
                   sprintf@f 019A                     tolower@c 0066                     sprintf@s 018C  
     __size_of___fpclassifyf 0100          ?_EEPROM_WriteString 0004                     strncmp@l 0067  
                   strncmp@n 0064                     strncmp@r 0069       __size_of_LCD_String_xy 0044  
              ___fladd@signs 009B    carregaTempExterna@externa 0076               i2_isspace$1295 0007  
               ___aodiv@sign 0071     __end_of_carregaTempIdeal 43DC                 ___fladd@aexp 009C  
               ___fladd@bexp 009D                 _USART_TxChar 4B6E         ??_EEPROM_WriteString 0008  
               ___aomod@sign 0071                   _USART_Init 41E8          EEPROM_Write@address 0001  
